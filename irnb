{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "521b9859",
   "metadata": {
    "papermill": {
     "duration": 0.020737,
     "end_time": "2024-04-29T07:10:14.379639",
     "exception": false,
     "start_time": "2024-04-29T07:10:14.358902",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Case study: How does a bike-share navigate speedy success?**\n",
    "\n",
    "Author: Nguyen Don Duc\n",
    "\n",
    "Date: 24/04/2024\n",
    "\n",
    "In this case study, I am going to follow the \"APPASA\" (Ask - Prepare - Process - Analyze - Share - Act) to complete. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1efced8b",
   "metadata": {
    "papermill": {
     "duration": 0.01902,
     "end_time": "2024-04-29T07:10:14.418474",
     "exception": false,
     "start_time": "2024-04-29T07:10:14.399454",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 1. Introduction\n",
    "\n",
    "The bike share company, **Cyclistic**, is based in Chicago and offers services to its users. In order to **improve its marketing strategy** and drive future growth, the company is **interested in understanding the behavior of its users while using the services**. As a part of the Google Data Analytics certification course, I was given the opportunity to conduct a case study on Cyclistic to analyze the data and provide insights on the users' behavior. In this project, I will follow the steps of the data analysis process: **ask, prepare, process, analyze, and share**. **The aim of this case study is to provide actionable insights for the company to consider in their marketing strategy.**\n",
    "\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83749c2b",
   "metadata": {
    "papermill": {
     "duration": 0.018572,
     "end_time": "2024-04-29T07:10:14.455871",
     "exception": false,
     "start_time": "2024-04-29T07:10:14.437299",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 2. Scenario\n",
    "Cyclistic operates a fleet of more than 5,800 bicycles which can be accessed from over 600 docking stations across the city. Bikes can be borrowed from one docking station, ridden, then returned to any docking stations. Over the years marketing campaigns have been broad and targeted a cross-section of potential users. Data analysis has shown that riders with an annual membership are more profitable than casual riders. Lily Moreno, the director of marketing, wants to implement a new marketing strategy in order to convert casual riders into annual members. She believes that with the right campaign there is a very good chance of such conversions between the user types. There are also user-friendly bike options include such as electric bikes, classic bikes and docked bikes. It makes Cyclistic services more inclusive to people. Lily has tasked the marketing analytics team to analyze past user data of one year to find trends and habits of Cyclistic's users to help create this marketing campaign. The marketing analyst team would like to know:\n",
    "\n",
    "-   **How annual members and casual riders differ**\n",
    "\n",
    "-   **Why casual riders would buy a membership**\n",
    "\n",
    "-   **How Cyclistic can use digital media to influence casual riders to become members.**\n",
    "\n",
    "Here I have to analyze the Cyclistic historical bike trip data to identify trends in the usage of bikes by casual and member riders.\n",
    "\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "572a3c0e",
   "metadata": {
    "papermill": {
     "duration": 0.019479,
     "end_time": "2024-04-29T07:10:14.495042",
     "exception": false,
     "start_time": "2024-04-29T07:10:14.475563",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3. **Phase 1: Ask**\n",
    "\n",
    "#### 3.0.1 **Business objective**\n",
    "\n",
    "The business objective of the case study is to identify opportunities for targeted marketing campaigns to **convert casual riders into annual members**. This will be done through **analysis of bike trip data and understanding user behavior and preferences**. The ultimate goal is to **increase profitability** and drive future growth for the company.\n",
    "\n",
    "#### 3.0.2 **Business task**\n",
    "\n",
    "As an analyst my take is to do following:-\n",
    "\n",
    "-   Analyze Cyclistic's historical bike trip data\n",
    "-   **Identify trends** and **patterns** in usage of bikes by **casual** and **member riders**\n",
    "-   **Understand behavior** and preferences of these two user groups\n",
    "-   Identify opportunities for targeted marketing campaigns to **convert casual riders into annual members**\n",
    "-   Use **insights from analysis** to inform development of **new marketing strategy** for the company\n",
    "-   **Goal:** increase profitability and drive future growth.\n",
    "\n",
    "#### 3.0.3 **Stakeholders**\n",
    "\n",
    "The Stakeholders in this case study include:\n",
    "\n",
    "-   **Lily Moreno**: **Director of Marketing** at Cyclistic, who is **responsible for implementing the marketing campaigns** at Cyclistic.\n",
    "\n",
    "-   **Cyclistic's marketing team**: They will be responsible for conducting the analysis and **developing the marketing strategy** based on the insights gained.\n",
    "\n",
    "-   **Cyclistic's casual riders**: They are the **target audience** of the marketing campaign, and their behavior and preferences will be a **key focus of the analysis**.\n",
    "\n",
    "-   **Cyclistic's annual members**: They are the group that the marketing campaign is **trying to convert casual riders** into, and their behavior and preferences may be compared to those of casual riders in the analysis.\n",
    "\n",
    "-   **Cyclistic's investors and shareholders**: They have a **financial interest** in the company's success and may be **interested in the results** of the analysis and any changes to the marketing strategy.\n",
    "\n",
    "    <br>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58d80b0b",
   "metadata": {
    "papermill": {
     "duration": 0.019197,
     "end_time": "2024-04-29T07:10:14.532902",
     "exception": false,
     "start_time": "2024-04-29T07:10:14.513705",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 4. **Phase 2: Prepare**\n",
    "\n",
    "#### 4.0.1 **Where is your data located?**\n",
    "\n",
    "The data for this analysis was obtained from **Motivate International Inc**. and can be **accessed through the provided [link](https://divvy-tripdata.s3.amazonaws.com/index.html).** It includes **first quarter of 2019 and 2020 of historical trip data from Cyclistic**, a fictional bike share company based in Chicago. It should be noted that the **data is public** and can be used to explore how different customer types are using Cyclistic bikes.\n",
    "\n",
    "#### 4.0.2 **How is the Data Organized?**\n",
    "\n",
    "For this project, the data used consists of **2 CSV files** from the **past 3 months (January 2019 - March 2019 and January 2020 - March 2020)**. The **files include 13 columns of information** related to ride details, such as **ride id, ridership type, ride time, start and end locations, and geographic coordinates...etc.** The data is organized in a way that allows for **analysis of trends and patterns** in the usage of Cyclistic's bike share services.\n",
    "\n",
    "#### 4.0.3 **Credibility of data**\n",
    "\n",
    "**Motivate, Inc.** collected the [**data**](https://divvy-tripdata.s3.amazonaws.com/index.html) for this analysis directly through its **management of the Cyclistic Bike Share program for the City of Chicago**. The data is **comprehensive and consistent**, as it includes information on all rides taken by users and **is not just a sample**. \n",
    "\n",
    "#### 4.0.4 **Licensing, privacy, security, and accessibility** \n",
    "\n",
    "The [**data**](https://divvy-tripdata.s3.amazonaws.com/index.html) used for this analysis has had all **identifying information removed** in order to **protect the privacy of users**. This limitation on the data does **restrict the scope of the possible analysis**, as it is not possible to determine whether casual riders are repeat users or residents of the Chicago area. The [**data**](https://divvy-tripdata.s3.amazonaws.com/index.html) is **released under a** [**specific license**](https://ride.divvybikes.com/data-license-agreement) and is made **available for use in this analysis**.\n",
    "\n",
    "#### 4.0.5Â **Ability of Data to answer Business Questions** \n",
    "\n",
    "The **available dataset is sufficient** for the purpose of **answering the business question** regarding the differences in usage patterns between **annual members and casual riders**. Through detailed observation of the variables in the data, it has been determined that **casual riders typically pay for individual or daily rides**, while **member riders tend to purchase annual subscriptions**. This information is **important in understanding the behavioral differences** between the two groups and can be used to inform targeted marketing campaigns. Additional analysis of other variables in the data, such as **ride duration and location**, may provide further insights into the **usage patterns of annual members and casual riders.**\n",
    "\n",
    "#### 4.0.6 **Challenges with the data** \n",
    "\n",
    "The **Challenges** I faced during my data analysis are:\n",
    "\n",
    "-   **Data preparation** identified **several issues**, including **data inconsistency** and **missing fields...etc**, which were addressed through **data preprocessing**\n",
    "-   Data cleaning, **removal of unnecessary variables**, and **saving to CSV file** on hard drive allowed for **efficient** processing and analysis of data\n",
    "-   **Specialized tools or techniques**, were necessary for working with large amounts of data. Tools like **Excel failed to handle** this amount of data **R** and **Tableau** were used.\n",
    "\n",
    "<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0fab95d",
   "metadata": {
    "papermill": {
     "duration": 0.0187,
     "end_time": "2024-04-29T07:10:14.570298",
     "exception": false,
     "start_time": "2024-04-29T07:10:14.551598",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 5. **Phase 3: Data Process**\n",
    "\n",
    "#### 5.0.1 **What tools are you choosing and why?**\n",
    "\n",
    "-   In order to **efficiently prepare, process, clean, analyze, and visualize** the data for this project, I selected **RStudio Desktop** as the **primary tool**. The large size of the dataset made it **impractical** to use tools such as **Microsoft Excel or Google Sheets**, and **RStudio Cloud** was also **unable** **to handle** the volume of data. **RStudio Desktop provided the necessary capabilities to effectively work with the data and generate meaningful insights.**\n",
    "\n",
    "\n",
    "-   **Overall, the combination of RStudio Desktop and Tableau proved to be a powerful toolkit for preparing, processing, cleaning, analyzing, and visualizing the data for this project.**\n",
    "\n",
    "\n",
    "#### 5.0.2 **Review of Data**\n",
    "\n",
    "In order to gain an **understanding of the data** and its **potential for analysis**, a review was conducted to **assess the content** of the variables, the **format of the data**, and the **integrity of the data**. This initial review provided an overview of the data and helped to identify any **potential issues or challenges that would need to be addressed** in the preparation and analysis process.\n",
    "\n",
    "**Data review involved the following:**\n",
    "\n",
    "-   **Checking column names across all the original files.**\n",
    "-   **Checking for missing values.**\n",
    "-   **Checking of duplicate records.**\n",
    "-   **Other data anomalies.**\n",
    "\n",
    "**Results of the review found following things:**\n",
    "\n",
    "-   **Duplicate record of ID numbers.**\n",
    "-   **Records with missing start or end station name.**\n",
    "-   **Records with very short or very long ride duration.**\n",
    "-   **Records for trips starting or ending at an administrative station (repair or testing station).**\n",
    "\n",
    "2 files were combined into one data set after initial review was completed.The final data set consisted of **788189 rows** with **15 columns** of character and numeric data. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13669b2d",
   "metadata": {
    "papermill": {
     "duration": 0.019366,
     "end_time": "2024-04-29T07:10:14.609052",
     "exception": false,
     "start_time": "2024-04-29T07:10:14.589686",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### 5.0.3 **Setting up environment** "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5800bae1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:14.652003Z",
     "iopub.status.busy": "2024-04-29T07:10:14.649766Z",
     "iopub.status.idle": "2024-04-29T07:10:17.429027Z",
     "shell.execute_reply": "2024-04-29T07:10:17.426964Z"
    },
    "papermill": {
     "duration": 2.803824,
     "end_time": "2024-04-29T07:10:17.432673",
     "exception": false,
     "start_time": "2024-04-29T07:10:14.628849",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ââ \u001b[1mAttaching core tidyverse packages\u001b[22m ââââââââââââââââââââââââ tidyverse 2.0.0 ââ\n",
      "\u001b[32mâ\u001b[39m \u001b[34mdplyr    \u001b[39m 1.1.4     \u001b[32mâ\u001b[39m \u001b[34mreadr    \u001b[39m 2.1.4\n",
      "\u001b[32mâ\u001b[39m \u001b[34mforcats  \u001b[39m 1.0.0     \u001b[32mâ\u001b[39m \u001b[34mstringr  \u001b[39m 1.5.1\n",
      "\u001b[32mâ\u001b[39m \u001b[34mggplot2  \u001b[39m 3.4.4     \u001b[32mâ\u001b[39m \u001b[34mtibble   \u001b[39m 3.2.1\n",
      "\u001b[32mâ\u001b[39m \u001b[34mlubridate\u001b[39m 1.9.3     \u001b[32mâ\u001b[39m \u001b[34mtidyr    \u001b[39m 1.3.0\n",
      "\u001b[32mâ\u001b[39m \u001b[34mpurrr    \u001b[39m 1.0.2     \n",
      "ââ \u001b[1mConflicts\u001b[22m ââââââââââââââââââââââââââââââââââââââââââ tidyverse_conflicts() ââ\n",
      "\u001b[31mâ\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mfilter()\u001b[39m masks \u001b[34mstats\u001b[39m::filter()\n",
      "\u001b[31mâ\u001b[39m \u001b[34mdplyr\u001b[39m::\u001b[32mlag()\u001b[39m    masks \u001b[34mstats\u001b[39m::lag()\n",
      "\u001b[36mâ¹\u001b[39m Use the conflicted package (\u001b[3m\u001b[34m<http://conflicted.r-lib.org/>\u001b[39m\u001b[23m) to force all conflicts to become errors\n",
      "\n",
      "Attaching package: âjanitorâ\n",
      "\n",
      "\n",
      "The following objects are masked from âpackage:statsâ:\n",
      "\n",
      "    chisq.test, fisher.test\n",
      "\n",
      "\n",
      "\n",
      "Attaching package: âdata.tableâ\n",
      "\n",
      "\n",
      "The following objects are masked from âpackage:lubridateâ:\n",
      "\n",
      "    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n",
      "    yday, year\n",
      "\n",
      "\n",
      "The following objects are masked from âpackage:dplyrâ:\n",
      "\n",
      "    between, first, last\n",
      "\n",
      "\n",
      "The following object is masked from âpackage:purrrâ:\n",
      "\n",
      "    transpose\n",
      "\n",
      "\n",
      "\n",
      "Attaching package: âpsychâ\n",
      "\n",
      "\n",
      "The following objects are masked from âpackage:ggplot2â:\n",
      "\n",
      "    %+%, alpha\n",
      "\n",
      "\n",
      "NOTE: Either Arial Narrow or Roboto Condensed fonts are required to use these themes.\n",
      "\n",
      "      Please use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and\n",
      "\n",
      "      if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow\n",
      "\n",
      "\u001b[1m\u001b[22m\u001b[90m[conflicted]\u001b[39m Will prefer \u001b[1m\u001b[34mdplyr\u001b[39m\u001b[22m::filter over any other package.\n",
      "\u001b[1m\u001b[22m\u001b[90m[conflicted]\u001b[39m Will prefer \u001b[1m\u001b[34mdplyr\u001b[39m\u001b[22m::lag over any other package.\n"
     ]
    }
   ],
   "source": [
    "library(tidyverse)\n",
    "library(lubridate)\n",
    "library(janitor)\n",
    "library(data.table)\n",
    "library(readr)\n",
    "library(psych)\n",
    "library(hrbrthemes)\n",
    "library(ggplot2)\n",
    "# Use the conflicted package to manage conflicts\n",
    "library(conflicted)\n",
    "\n",
    "# Set dplyr::filter and dplyr::lag as the default choices\n",
    "conflict_prefer(\"filter\", \"dplyr\")\n",
    "conflict_prefer(\"lag\", \"dplyr\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5980a36f",
   "metadata": {
    "papermill": {
     "duration": 0.020725,
     "end_time": "2024-04-29T07:10:17.474547",
     "exception": false,
     "start_time": "2024-04-29T07:10:17.453822",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### 5.0.4 **Data Validation**\n",
    "\n",
    "-   To enable more efficient and comprehensive analysis, it was necessary to **upload the individual data files into new vectors and combine them into a single, large dataset**. This process involved merging the data frames into a cohesive whole, allowing for more effective analysis and interpretation of the data.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "016fff71",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:17.556348Z",
     "iopub.status.busy": "2024-04-29T07:10:17.517963Z",
     "iopub.status.idle": "2024-04-29T07:10:22.337823Z",
     "shell.execute_reply": "2024-04-29T07:10:22.335617Z"
    },
    "papermill": {
     "duration": 4.845825,
     "end_time": "2024-04-29T07:10:22.340874",
     "exception": false,
     "start_time": "2024-04-29T07:10:17.495049",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1mRows: \u001b[22m\u001b[34m365069\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m14\u001b[39m\n",
      "\u001b[36mââ\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36mââââââââââââââââââââââââââââââââââââââââââââââââââââââââ\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (5): from_station_name, to_station_name, usertype, gender, ride_length\n",
      "\u001b[32mdbl\u001b[39m  (6): trip_id, bikeid, from_station_id, to_station_id, birthyear, day_of...\n",
      "\u001b[32mnum\u001b[39m  (1): tripduration\n",
      "\u001b[34mdttm\u001b[39m (2): start_time, end_time\n",
      "\n",
      "\u001b[36mâ¹\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mâ¹\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
      "\u001b[1mRows: \u001b[22m\u001b[34m426887\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m15\u001b[39m\n",
      "\u001b[36mââ\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36mââââââââââââââââââââââââââââââââââââââââââââââââââââââââ\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (6): ride_id, rideable_type, start_station_name, end_station_name, memb...\n",
      "\u001b[32mdbl\u001b[39m  (7): start_station_id, end_station_id, start_lat, start_lng, end_lat, e...\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\n",
      "\u001b[36mâ¹\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mâ¹\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n"
     ]
    }
   ],
   "source": [
    " # Upload Divvy datasets (csv files)\n",
    "q1_2019 <- read_csv(\"/kaggle/input/divvy-trips/Divvy_Trips_2019_Q1.csv\")\n",
    "q1_2020 <- read_csv(\"/kaggle/input/divvy-trips/Divvy_Trips_2020_Q1.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a221b9c",
   "metadata": {
    "papermill": {
     "duration": 0.021595,
     "end_time": "2024-04-29T07:10:22.384268",
     "exception": false,
     "start_time": "2024-04-29T07:10:22.362673",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   To ensure the **accuracy and integrity** of the combined dataset, it was necessary to verify that the **column names in the individual data files were compatible for merging**. This involved comparing the **names** and ensuring that they **matched perfectly, regardless of their order**. This step was crucial to enable the use of a command to join the data into a single file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8c2d5912",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:22.431130Z",
     "iopub.status.busy": "2024-04-29T07:10:22.429482Z",
     "iopub.status.idle": "2024-04-29T07:10:22.785859Z",
     "shell.execute_reply": "2024-04-29T07:10:22.783375Z"
    },
    "papermill": {
     "duration": 0.383585,
     "end_time": "2024-04-29T07:10:22.788694",
     "exception": false,
     "start_time": "2024-04-29T07:10:22.405109",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'trip_id'</li><li>'start_time'</li><li>'end_time'</li><li>'bikeid'</li><li>'tripduration'</li><li>'from_station_id'</li><li>'from_station_name'</li><li>'to_station_id'</li><li>'to_station_name'</li><li>'usertype'</li><li>'gender'</li><li>'birthyear'</li><li>'ride_length'</li><li>'day_of_week'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'trip\\_id'\n",
       "\\item 'start\\_time'\n",
       "\\item 'end\\_time'\n",
       "\\item 'bikeid'\n",
       "\\item 'tripduration'\n",
       "\\item 'from\\_station\\_id'\n",
       "\\item 'from\\_station\\_name'\n",
       "\\item 'to\\_station\\_id'\n",
       "\\item 'to\\_station\\_name'\n",
       "\\item 'usertype'\n",
       "\\item 'gender'\n",
       "\\item 'birthyear'\n",
       "\\item 'ride\\_length'\n",
       "\\item 'day\\_of\\_week'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'trip_id'\n",
       "2. 'start_time'\n",
       "3. 'end_time'\n",
       "4. 'bikeid'\n",
       "5. 'tripduration'\n",
       "6. 'from_station_id'\n",
       "7. 'from_station_name'\n",
       "8. 'to_station_id'\n",
       "9. 'to_station_name'\n",
       "10. 'usertype'\n",
       "11. 'gender'\n",
       "12. 'birthyear'\n",
       "13. 'ride_length'\n",
       "14. 'day_of_week'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       " [1] \"trip_id\"           \"start_time\"        \"end_time\"         \n",
       " [4] \"bikeid\"            \"tripduration\"      \"from_station_id\"  \n",
       " [7] \"from_station_name\" \"to_station_id\"     \"to_station_name\"  \n",
       "[10] \"usertype\"          \"gender\"            \"birthyear\"        \n",
       "[13] \"ride_length\"       \"day_of_week\"      "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'ride_id'</li><li>'rideable_type'</li><li>'started_at'</li><li>'ended_at'</li><li>'start_station_name'</li><li>'start_station_id'</li><li>'end_station_name'</li><li>'end_station_id'</li><li>'start_lat'</li><li>'start_lng'</li><li>'end_lat'</li><li>'end_lng'</li><li>'member_casual'</li><li>'ride_length'</li><li>'day_of_week'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'ride\\_id'\n",
       "\\item 'rideable\\_type'\n",
       "\\item 'started\\_at'\n",
       "\\item 'ended\\_at'\n",
       "\\item 'start\\_station\\_name'\n",
       "\\item 'start\\_station\\_id'\n",
       "\\item 'end\\_station\\_name'\n",
       "\\item 'end\\_station\\_id'\n",
       "\\item 'start\\_lat'\n",
       "\\item 'start\\_lng'\n",
       "\\item 'end\\_lat'\n",
       "\\item 'end\\_lng'\n",
       "\\item 'member\\_casual'\n",
       "\\item 'ride\\_length'\n",
       "\\item 'day\\_of\\_week'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'ride_id'\n",
       "2. 'rideable_type'\n",
       "3. 'started_at'\n",
       "4. 'ended_at'\n",
       "5. 'start_station_name'\n",
       "6. 'start_station_id'\n",
       "7. 'end_station_name'\n",
       "8. 'end_station_id'\n",
       "9. 'start_lat'\n",
       "10. 'start_lng'\n",
       "11. 'end_lat'\n",
       "12. 'end_lng'\n",
       "13. 'member_casual'\n",
       "14. 'ride_length'\n",
       "15. 'day_of_week'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       " [1] \"ride_id\"            \"rideable_type\"      \"started_at\"        \n",
       " [4] \"ended_at\"           \"start_station_name\" \"start_station_id\"  \n",
       " [7] \"end_station_name\"   \"end_station_id\"     \"start_lat\"         \n",
       "[10] \"start_lng\"          \"end_lat\"            \"end_lng\"           \n",
       "[13] \"member_casual\"      \"ride_length\"        \"day_of_week\"       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A spec_tbl_df: 365069 Ã 14</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>ride_id</th><th scope=col>started_at</th><th scope=col>ended_at</th><th scope=col>rideable_type</th><th scope=col>tripduration</th><th scope=col>start_station_id</th><th scope=col>start_station_name</th><th scope=col>end_station_id</th><th scope=col>end_station_name</th><th scope=col>member_casual</th><th scope=col>gender</th><th scope=col>birthyear</th><th scope=col>ride_length</th><th scope=col>day_of_week</th></tr>\n",
       "\t<tr><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dttm&gt;</th><th scope=col>&lt;dttm&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>21742443</td><td>2019-01-01 00:04:37</td><td>2019-01-01 00:11:07</td><td>2167</td><td> 390</td><td>199</td><td><span style=white-space:pre-wrap>Wabash Ave &amp; Grand Ave             </span></td><td> 84</td><td><span style=white-space:pre-wrap>Milwaukee Ave &amp; Grand Ave     </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1989</td><td>0:06:30</td><td>3</td></tr>\n",
       "\t<tr><td>21742444</td><td>2019-01-01 00:08:13</td><td>2019-01-01 00:15:34</td><td>4386</td><td> 441</td><td> 44</td><td><span style=white-space:pre-wrap>State St &amp; Randolph St             </span></td><td>624</td><td>Dearborn St &amp; Van Buren St (*)</td><td>Subscriber</td><td>Female</td><td>1990</td><td>0:07:21</td><td>3</td></tr>\n",
       "\t<tr><td>21742445</td><td>2019-01-01 00:13:23</td><td>2019-01-01 00:27:12</td><td>1524</td><td> 829</td><td> 15</td><td><span style=white-space:pre-wrap>Racine Ave &amp; 18th St               </span></td><td>644</td><td>Western Ave &amp; Fillmore St (*) </td><td>Subscriber</td><td>Female</td><td>1994</td><td>0:13:49</td><td>3</td></tr>\n",
       "\t<tr><td>21742446</td><td>2019-01-01 00:13:45</td><td>2019-01-01 00:43:28</td><td> 252</td><td>1783</td><td>123</td><td><span style=white-space:pre-wrap>California Ave &amp; Milwaukee Ave     </span></td><td>176</td><td><span style=white-space:pre-wrap>Clark St &amp; Elm St             </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1993</td><td>0:29:43</td><td>3</td></tr>\n",
       "\t<tr><td>21742447</td><td>2019-01-01 00:14:52</td><td>2019-01-01 00:20:56</td><td>1170</td><td> 364</td><td>173</td><td>Mies van der Rohe Way &amp; Chicago Ave</td><td> 35</td><td><span style=white-space:pre-wrap>Streeter Dr &amp; Grand Ave       </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1994</td><td>0:06:04</td><td>3</td></tr>\n",
       "\t<tr><td>21742448</td><td>2019-01-01 00:15:33</td><td>2019-01-01 00:19:09</td><td>2437</td><td> 216</td><td> 98</td><td><span style=white-space:pre-wrap>LaSalle St &amp; Washington St         </span></td><td> 49</td><td><span style=white-space:pre-wrap>Dearborn St &amp; Monroe St       </span></td><td>Subscriber</td><td>Female</td><td>1983</td><td>0:03:36</td><td>3</td></tr>\n",
       "\t<tr><td>21742449</td><td>2019-01-01 00:16:06</td><td>2019-01-01 00:19:03</td><td>2708</td><td> 177</td><td> 98</td><td><span style=white-space:pre-wrap>LaSalle St &amp; Washington St         </span></td><td> 49</td><td><span style=white-space:pre-wrap>Dearborn St &amp; Monroe St       </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1984</td><td>0:02:57</td><td>3</td></tr>\n",
       "\t<tr><td>21742450</td><td>2019-01-01 00:18:41</td><td>2019-01-01 00:20:21</td><td>2796</td><td> 100</td><td>211</td><td><span style=white-space:pre-wrap>St. Clair St &amp; Erie St             </span></td><td>142</td><td><span style=white-space:pre-wrap>McClurg Ct &amp; Erie St          </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1990</td><td>0:01:40</td><td>3</td></tr>\n",
       "\t<tr><td>21742451</td><td>2019-01-01 00:18:43</td><td>2019-01-01 00:47:30</td><td>6205</td><td>1727</td><td>150</td><td><span style=white-space:pre-wrap>Fort Dearborn Dr &amp; 31st St         </span></td><td>148</td><td><span style=white-space:pre-wrap>State St &amp; 33rd St            </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1995</td><td>0:28:47</td><td>3</td></tr>\n",
       "\t<tr><td>21742452</td><td>2019-01-01 00:19:18</td><td>2019-01-01 00:24:54</td><td>3939</td><td> 336</td><td>268</td><td><span style=white-space:pre-wrap>Lake Shore Dr &amp; North Blvd         </span></td><td>141</td><td><span style=white-space:pre-wrap>Clark St &amp; Lincoln Ave        </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1996</td><td>0:05:36</td><td>3</td></tr>\n",
       "\t<tr><td>21742453</td><td>2019-01-01 00:20:34</td><td>2019-01-01 00:35:20</td><td>6243</td><td> 886</td><td>299</td><td><span style=white-space:pre-wrap>Halsted St &amp; Roscoe St             </span></td><td>295</td><td><span style=white-space:pre-wrap>Broadway &amp; Argyle St          </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1994</td><td>0:14:46</td><td>3</td></tr>\n",
       "\t<tr><td>21742454</td><td>2019-01-01 00:21:52</td><td>2019-01-01 00:32:45</td><td>6300</td><td> 653</td><td>204</td><td><span style=white-space:pre-wrap>Prairie Ave &amp; Garfield Blvd        </span></td><td>420</td><td><span style=white-space:pre-wrap>Ellis Ave &amp; 55th St           </span></td><td>Subscriber</td><td>Female</td><td>1994</td><td>0:10:53</td><td>3</td></tr>\n",
       "\t<tr><td>21742455</td><td>2019-01-01 00:23:04</td><td>2019-01-01 00:33:05</td><td>3029</td><td> 601</td><td> 90</td><td><span style=white-space:pre-wrap>Millennium Park                    </span></td><td>255</td><td><span style=white-space:pre-wrap>Indiana Ave &amp; Roosevelt Rd    </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1986</td><td>0:10:01</td><td>3</td></tr>\n",
       "\t<tr><td>21742456</td><td>2019-01-01 00:23:43</td><td>2019-01-01 00:33:05</td><td><span style=white-space:pre-wrap>  84</span></td><td> 562</td><td> 90</td><td><span style=white-space:pre-wrap>Millennium Park                    </span></td><td>255</td><td><span style=white-space:pre-wrap>Indiana Ave &amp; Roosevelt Rd    </span></td><td><span style=white-space:pre-wrap>Customer  </span></td><td>Female</td><td>1990</td><td>0:09:22</td><td>3</td></tr>\n",
       "\t<tr><td>21742457</td><td>2019-01-01 00:23:54</td><td>2019-01-01 00:39:00</td><td>5019</td><td> 906</td><td>289</td><td><span style=white-space:pre-wrap>Wells St &amp; Concord Ln              </span></td><td>324</td><td><span style=white-space:pre-wrap>Stockton Dr &amp; Wrightwood Ave  </span></td><td>Subscriber</td><td>Female</td><td>1989</td><td>0:15:06</td><td>3</td></tr>\n",
       "\t<tr><td>21742458</td><td>2019-01-01 00:24:08</td><td>2019-01-01 00:39:00</td><td>5526</td><td> 892</td><td>289</td><td><span style=white-space:pre-wrap>Wells St &amp; Concord Ln              </span></td><td>324</td><td><span style=white-space:pre-wrap>Stockton Dr &amp; Wrightwood Ave  </span></td><td>Subscriber</td><td>Female</td><td>1989</td><td>0:14:52</td><td>3</td></tr>\n",
       "\t<tr><td>21742459</td><td>2019-01-01 00:24:13</td><td>2019-01-01 00:31:00</td><td>3373</td><td> 407</td><td>152</td><td><span style=white-space:pre-wrap>Lincoln Ave &amp; Diversey Pkwy        </span></td><td>166</td><td><span style=white-space:pre-wrap>Ashland Ave &amp; Wrightwood Ave  </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1967</td><td>0:06:47</td><td>3</td></tr>\n",
       "\t<tr><td>21742460</td><td>2019-01-01 00:24:27</td><td>2019-01-01 00:47:03</td><td>5777</td><td>1356</td><td>268</td><td><span style=white-space:pre-wrap>Lake Shore Dr &amp; North Blvd         </span></td><td>319</td><td>Greenview Ave &amp; Diversey Pkwy </td><td><span style=white-space:pre-wrap>Customer  </span></td><td>Female</td><td>1990</td><td>0:22:36</td><td>3</td></tr>\n",
       "\t<tr><td>21742461</td><td>2019-01-01 00:25:28</td><td>2019-01-01 00:27:10</td><td>3940</td><td> 102</td><td> 35</td><td><span style=white-space:pre-wrap>Streeter Dr &amp; Grand Ave            </span></td><td> 35</td><td><span style=white-space:pre-wrap>Streeter Dr &amp; Grand Ave       </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1985</td><td>0:01:42</td><td>3</td></tr>\n",
       "\t<tr><td>21742463</td><td>2019-01-01 00:29:19</td><td>2019-01-01 01:08:12</td><td>3914</td><td>2333</td><td> 35</td><td><span style=white-space:pre-wrap>Streeter Dr &amp; Grand Ave            </span></td><td> 39</td><td><span style=white-space:pre-wrap>Wabash Ave &amp; Adams St         </span></td><td><span style=white-space:pre-wrap>Customer  </span></td><td><span style=white-space:pre-wrap>NA    </span></td><td><span style=white-space:pre-wrap>  NA</span></td><td>0:38:53</td><td>3</td></tr>\n",
       "\t<tr><td>21742464</td><td>2019-01-01 00:29:21</td><td>2019-01-01 00:45:21</td><td> 140</td><td> 960</td><td> 47</td><td><span style=white-space:pre-wrap>State St &amp; Kinzie St               </span></td><td>111</td><td><span style=white-space:pre-wrap>Sedgwick St &amp; Huron St        </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1957</td><td>0:16:00</td><td>3</td></tr>\n",
       "\t<tr><td>21742465</td><td>2019-01-01 00:29:28</td><td>2019-01-01 01:07:49</td><td>3355</td><td>2301</td><td> 35</td><td><span style=white-space:pre-wrap>Streeter Dr &amp; Grand Ave            </span></td><td> 39</td><td><span style=white-space:pre-wrap>Wabash Ave &amp; Adams St         </span></td><td><span style=white-space:pre-wrap>Customer  </span></td><td><span style=white-space:pre-wrap>NA    </span></td><td><span style=white-space:pre-wrap>  NA</span></td><td>0:38:21</td><td>3</td></tr>\n",
       "\t<tr><td>21742466</td><td>2019-01-01 00:29:47</td><td>2019-01-01 00:49:15</td><td>5026</td><td>1168</td><td> 85</td><td><span style=white-space:pre-wrap>Michigan Ave &amp; Oak St              </span></td><td>329</td><td>Lake Shore Dr &amp; Diversey Pkwy </td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1959</td><td>0:19:28</td><td>3</td></tr>\n",
       "\t<tr><td>21742467</td><td>2019-01-01 00:30:48</td><td>2019-01-01 00:38:42</td><td>1998</td><td> 474</td><td>289</td><td><span style=white-space:pre-wrap>Wells St &amp; Concord Ln              </span></td><td>313</td><td>Lakeview Ave &amp; Fullerton Pkwy </td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1994</td><td>0:07:54</td><td>3</td></tr>\n",
       "\t<tr><td>21742468</td><td>2019-01-01 00:33:09</td><td>2019-01-01 00:50:25</td><td>2630</td><td>1036</td><td> 13</td><td><span style=white-space:pre-wrap>Wilton Ave &amp; Diversey Pkwy         </span></td><td> 61</td><td><span style=white-space:pre-wrap>Wood St &amp; Milwaukee Ave       </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1991</td><td>0:17:16</td><td>3</td></tr>\n",
       "\t<tr><td>21742469</td><td>2019-01-01 00:34:35</td><td>2019-01-01 00:38:25</td><td>3722</td><td> 230</td><td>520</td><td><span style=white-space:pre-wrap>Greenview Ave &amp; Jarvis Ave         </span></td><td>523</td><td><span style=white-space:pre-wrap>Eastlake Ter &amp; Rogers Ave     </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1961</td><td>0:03:50</td><td>3</td></tr>\n",
       "\t<tr><td>21742471</td><td>2019-01-01 00:38:11</td><td>2019-01-01 00:50:38</td><td>1166</td><td> 747</td><td>256</td><td><span style=white-space:pre-wrap>Broadway &amp; Sheridan Rd             </span></td><td>297</td><td><span style=white-space:pre-wrap>Paulina St &amp; Montrose Ave     </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1968</td><td>0:12:27</td><td>3</td></tr>\n",
       "\t<tr><td>21742472</td><td>2019-01-01 00:38:47</td><td>2019-01-01 00:50:38</td><td>1704</td><td> 711</td><td>256</td><td><span style=white-space:pre-wrap>Broadway &amp; Sheridan Rd             </span></td><td>297</td><td><span style=white-space:pre-wrap>Paulina St &amp; Montrose Ave     </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1964</td><td>0:11:51</td><td>3</td></tr>\n",
       "\t<tr><td>21742473</td><td>2019-01-01 00:40:16</td><td>2019-01-01 00:49:29</td><td>1476</td><td> 553</td><td>254</td><td><span style=white-space:pre-wrap>Pine Grove Ave &amp; Irving Park Rd    </span></td><td>465</td><td><span style=white-space:pre-wrap>Marine Dr &amp; Ainslie St        </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1990</td><td>0:09:13</td><td>3</td></tr>\n",
       "\t<tr><td>21742474</td><td>2019-01-01 00:41:46</td><td>2019-01-01 00:50:27</td><td>4614</td><td> 521</td><td> 66</td><td><span style=white-space:pre-wrap>Clinton St &amp; Lake St               </span></td><td> 52</td><td><span style=white-space:pre-wrap>Michigan Ave &amp; Lake St        </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1994</td><td>0:08:41</td><td>3</td></tr>\n",
       "\t<tr><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td><td>â®</td></tr>\n",
       "\t<tr><td>22178488</td><td>2019-03-31 22:51:02</td><td>2019-03-31 22:54:00</td><td>4602</td><td>178</td><td>460</td><td><span style=white-space:pre-wrap>Clark St &amp; Bryn Mawr Ave           </span></td><td>461</td><td><span style=white-space:pre-wrap>Broadway &amp; Ridge Ave                </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1986</td><td>0:02:58</td><td>1</td></tr>\n",
       "\t<tr><td>22178489</td><td>2019-03-31 22:54:00</td><td>2019-03-31 23:02:49</td><td>4151</td><td>529</td><td> 47</td><td><span style=white-space:pre-wrap>State St &amp; Kinzie St               </span></td><td> 26</td><td><span style=white-space:pre-wrap>McClurg Ct &amp; Illinois St            </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1990</td><td>0:08:49</td><td>1</td></tr>\n",
       "\t<tr><td>22178490</td><td>2019-03-31 22:55:28</td><td>2019-03-31 23:02:10</td><td>3833</td><td>402</td><td>108</td><td><span style=white-space:pre-wrap>Halsted St &amp; Polk St               </span></td><td> 19</td><td><span style=white-space:pre-wrap>Loomis St &amp; Taylor St (*)           </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1992</td><td>0:06:42</td><td>1</td></tr>\n",
       "\t<tr><td>22178491</td><td>2019-03-31 22:58:00</td><td>2019-03-31 23:06:12</td><td>1374</td><td>492</td><td>108</td><td><span style=white-space:pre-wrap>Halsted St &amp; Polk St               </span></td><td> 41</td><td><span style=white-space:pre-wrap>Federal St &amp; Polk St                </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1992</td><td>0:08:12</td><td>1</td></tr>\n",
       "\t<tr><td>22178492</td><td>2019-03-31 22:59:35</td><td>2019-03-31 23:01:38</td><td>3723</td><td>123</td><td> 66</td><td><span style=white-space:pre-wrap>Clinton St &amp; Lake St               </span></td><td> 77</td><td><span style=white-space:pre-wrap>Clinton St &amp; Madison St             </span></td><td>Subscriber</td><td>Female</td><td>1985</td><td>0:02:03</td><td>1</td></tr>\n",
       "\t<tr><td>22178493</td><td>2019-03-31 23:00:17</td><td>2019-03-31 23:10:52</td><td>2331</td><td>635</td><td> 51</td><td><span style=white-space:pre-wrap>Clark St &amp; Randolph St             </span></td><td>364</td><td><span style=white-space:pre-wrap>Larrabee St &amp; Oak St                </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1972</td><td>0:10:35</td><td>1</td></tr>\n",
       "\t<tr><td>22178494</td><td>2019-03-31 23:00:28</td><td>2019-03-31 23:09:20</td><td>1312</td><td>532</td><td> 98</td><td><span style=white-space:pre-wrap>LaSalle St &amp; Washington St         </span></td><td> 22</td><td><span style=white-space:pre-wrap>May St &amp; Taylor St                  </span></td><td><span style=white-space:pre-wrap>Customer  </span></td><td><span style=white-space:pre-wrap>Male  </span></td><td>1993</td><td>0:08:52</td><td>1</td></tr>\n",
       "\t<tr><td>22178495</td><td>2019-03-31 23:00:43</td><td>2019-03-31 23:13:04</td><td>6205</td><td>741</td><td>301</td><td><span style=white-space:pre-wrap>Clark St &amp; Schiller St             </span></td><td>115</td><td><span style=white-space:pre-wrap>Sheffield Ave &amp; Wellington Ave      </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1988</td><td>0:12:21</td><td>1</td></tr>\n",
       "\t<tr><td>22178502</td><td>2019-03-31 23:03:01</td><td>2019-03-31 23:15:20</td><td>3360</td><td>739</td><td>295</td><td><span style=white-space:pre-wrap>Broadway &amp; Argyle St               </span></td><td>451</td><td><span style=white-space:pre-wrap>Sheridan Rd &amp; Loyola Ave            </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1992</td><td>0:12:19</td><td>1</td></tr>\n",
       "\t<tr><td>22178503</td><td>2019-03-31 23:09:40</td><td>2019-03-31 23:19:30</td><td>6416</td><td>590</td><td>114</td><td><span style=white-space:pre-wrap>Sheffield Ave &amp; Waveland Ave       </span></td><td>330</td><td><span style=white-space:pre-wrap>Lincoln Ave &amp; Addison St            </span></td><td>Subscriber</td><td>Female</td><td>1985</td><td>0:09:50</td><td>1</td></tr>\n",
       "\t<tr><td>22178504</td><td>2019-03-31 23:10:19</td><td>2019-03-31 23:21:33</td><td>3767</td><td>674</td><td> 50</td><td><span style=white-space:pre-wrap>Clark St &amp; Ida B Wells Dr          </span></td><td> 50</td><td><span style=white-space:pre-wrap>Clark St &amp; Ida B Wells Dr           </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1957</td><td>0:11:14</td><td>1</td></tr>\n",
       "\t<tr><td>22178505</td><td>2019-03-31 23:11:15</td><td>2019-03-31 23:20:27</td><td>1646</td><td>552</td><td>111</td><td><span style=white-space:pre-wrap>Sedgwick St &amp; Huron St             </span></td><td>301</td><td><span style=white-space:pre-wrap>Clark St &amp; Schiller St              </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1994</td><td>0:09:12</td><td>1</td></tr>\n",
       "\t<tr><td>22178506</td><td>2019-03-31 23:15:53</td><td>2019-03-31 23:20:27</td><td> 632</td><td>274</td><td> 16</td><td><span style=white-space:pre-wrap>Paulina Ave &amp; North Ave            </span></td><td>158</td><td><span style=white-space:pre-wrap>Milwaukee Ave &amp; Wabansia Ave        </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1991</td><td>0:04:34</td><td>1</td></tr>\n",
       "\t<tr><td>22178507</td><td>2019-03-31 23:16:57</td><td>2019-03-31 23:22:42</td><td>1537</td><td>345</td><td>173</td><td>Mies van der Rohe Way &amp; Chicago Ave</td><td>172</td><td><span style=white-space:pre-wrap>Rush St &amp; Cedar St                  </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1980</td><td>0:05:45</td><td>1</td></tr>\n",
       "\t<tr><td>22178508</td><td>2019-03-31 23:18:42</td><td>2019-03-31 23:30:40</td><td>1952</td><td>718</td><td>301</td><td><span style=white-space:pre-wrap>Clark St &amp; Schiller St             </span></td><td>210</td><td><span style=white-space:pre-wrap>Ashland Ave &amp; Division St           </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1988</td><td>0:11:58</td><td>1</td></tr>\n",
       "\t<tr><td>22178509</td><td>2019-03-31 23:20:36</td><td>2019-03-31 23:28:12</td><td>5331</td><td>456</td><td>115</td><td><span style=white-space:pre-wrap>Sheffield Ave &amp; Wellington Ave     </span></td><td>313</td><td><span style=white-space:pre-wrap>Lakeview Ave &amp; Fullerton Pkwy       </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1987</td><td>0:07:36</td><td>1</td></tr>\n",
       "\t<tr><td>22178510</td><td>2019-03-31 23:21:07</td><td>2019-03-31 23:25:12</td><td><span style=white-space:pre-wrap>  67</span></td><td>245</td><td>325</td><td><span style=white-space:pre-wrap>Clark St &amp; Winnemac Ave            </span></td><td>464</td><td><span style=white-space:pre-wrap>Damen Ave &amp; Foster Ave              </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1983</td><td>0:04:05</td><td>1</td></tr>\n",
       "\t<tr><td>22178515</td><td>2019-03-31 23:26:00</td><td>2019-03-31 23:37:24</td><td>2965</td><td>684</td><td>403</td><td><span style=white-space:pre-wrap>Wentworth Ave &amp; 33rd St            </span></td><td>263</td><td><span style=white-space:pre-wrap>Rhodes Ave &amp; 32nd St                </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1984</td><td>0:11:24</td><td>1</td></tr>\n",
       "\t<tr><td>22178516</td><td>2019-03-31 23:31:30</td><td>2019-03-31 23:35:29</td><td>5747</td><td>239</td><td>309</td><td><span style=white-space:pre-wrap>Leavitt St &amp; Armitage Ave          </span></td><td>219</td><td><span style=white-space:pre-wrap>Damen Ave &amp; Cortland St             </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1970</td><td>0:03:59</td><td>1</td></tr>\n",
       "\t<tr><td>22178517</td><td>2019-03-31 23:32:54</td><td>2019-03-31 23:37:50</td><td>2846</td><td>296</td><td>181</td><td><span style=white-space:pre-wrap>LaSalle St &amp; Illinois St           </span></td><td> 24</td><td><span style=white-space:pre-wrap>Fairbanks Ct &amp; Grand Ave            </span></td><td><span style=white-space:pre-wrap>Customer  </span></td><td><span style=white-space:pre-wrap>NA    </span></td><td><span style=white-space:pre-wrap>  NA</span></td><td>0:04:56</td><td>1</td></tr>\n",
       "\t<tr><td>22178518</td><td>2019-03-31 23:33:02</td><td>2019-03-31 23:43:15</td><td>2772</td><td>613</td><td>210</td><td><span style=white-space:pre-wrap>Ashland Ave &amp; Division St          </span></td><td>210</td><td><span style=white-space:pre-wrap>Ashland Ave &amp; Division St           </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1972</td><td>0:10:13</td><td>1</td></tr>\n",
       "\t<tr><td>22178519</td><td>2019-03-31 23:33:14</td><td>2019-03-31 23:37:40</td><td>4304</td><td>266</td><td>181</td><td><span style=white-space:pre-wrap>LaSalle St &amp; Illinois St           </span></td><td> 24</td><td><span style=white-space:pre-wrap>Fairbanks Ct &amp; Grand Ave            </span></td><td><span style=white-space:pre-wrap>Customer  </span></td><td><span style=white-space:pre-wrap>NA    </span></td><td><span style=white-space:pre-wrap>  NA</span></td><td>0:04:26</td><td>1</td></tr>\n",
       "\t<tr><td>22178520</td><td>2019-03-31 23:34:08</td><td>2019-03-31 23:38:07</td><td> 667</td><td>239</td><td>199</td><td><span style=white-space:pre-wrap>Wabash Ave &amp; Grand Ave             </span></td><td> 26</td><td><span style=white-space:pre-wrap>McClurg Ct &amp; Illinois St            </span></td><td>Subscriber</td><td>Female</td><td>1984</td><td>0:03:59</td><td>1</td></tr>\n",
       "\t<tr><td>22178521</td><td>2019-03-31 23:39:48</td><td>2019-03-31 23:41:41</td><td>4814</td><td>113</td><td>198</td><td><span style=white-space:pre-wrap>Green St &amp; Madison St              </span></td><td>233</td><td><span style=white-space:pre-wrap>Sangamon St &amp; Washington Blvd (*)   </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1971</td><td>0:01:53</td><td>1</td></tr>\n",
       "\t<tr><td>22178522</td><td>2019-03-31 23:47:05</td><td>2019-03-31 23:51:35</td><td>3873</td><td>270</td><td> 69</td><td><span style=white-space:pre-wrap>Damen Ave &amp; Pierce Ave             </span></td><td>183</td><td>Damen Ave &amp; Thomas St (Augusta Blvd)</td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1985</td><td>0:04:30</td><td>1</td></tr>\n",
       "\t<tr><td>22178524</td><td>2019-03-31 23:51:32</td><td>2019-04-01 00:04:09</td><td>1501</td><td>757</td><td> 38</td><td><span style=white-space:pre-wrap>Clark St &amp; Lake St                 </span></td><td> 29</td><td><span style=white-space:pre-wrap>Noble St &amp; Milwaukee Ave            </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1993</td><td>0:12:37</td><td>2</td></tr>\n",
       "\t<tr><td>22178525</td><td>2019-03-31 23:52:37</td><td>2019-03-31 23:58:09</td><td>3270</td><td>332</td><td>129</td><td><span style=white-space:pre-wrap>Blue Island Ave &amp; 18th St          </span></td><td>202</td><td><span style=white-space:pre-wrap>Halsted St &amp; 18th St                </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1992</td><td>0:05:32</td><td>1</td></tr>\n",
       "\t<tr><td>22178526</td><td>2019-03-31 23:52:38</td><td>2019-04-01 00:06:44</td><td>3584</td><td>846</td><td>283</td><td><span style=white-space:pre-wrap>LaSalle St &amp; Jackson Blvd          </span></td><td>273</td><td><span style=white-space:pre-wrap>Michigan Ave &amp; 18th St              </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1984</td><td>0:14:06</td><td>2</td></tr>\n",
       "\t<tr><td>22178527</td><td>2019-03-31 23:53:08</td><td>2019-03-31 23:56:06</td><td>4384</td><td>178</td><td>321</td><td><span style=white-space:pre-wrap>Wabash Ave &amp; 9th St                </span></td><td> 39</td><td><span style=white-space:pre-wrap>Wabash Ave &amp; Adams St               </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1969</td><td>0:02:58</td><td>1</td></tr>\n",
       "\t<tr><td>22178528</td><td>2019-03-31 23:53:48</td><td>2019-04-01 00:01:16</td><td>5589</td><td>448</td><td>248</td><td><span style=white-space:pre-wrap>Woodlawn Ave &amp; 55th St             </span></td><td>247</td><td><span style=white-space:pre-wrap>Shore Dr &amp; 55th St                  </span></td><td>Subscriber</td><td><span style=white-space:pre-wrap>Male  </span></td><td>1998</td><td>0:07:28</td><td>2</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A spec\\_tbl\\_df: 365069 Ã 14\n",
       "\\begin{tabular}{llllllllllllll}\n",
       " ride\\_id & started\\_at & ended\\_at & rideable\\_type & tripduration & start\\_station\\_id & start\\_station\\_name & end\\_station\\_id & end\\_station\\_name & member\\_casual & gender & birthyear & ride\\_length & day\\_of\\_week\\\\\n",
       " <dbl> & <dttm> & <dttm> & <dbl> & <dbl> & <dbl> & <chr> & <dbl> & <chr> & <chr> & <chr> & <dbl> & <chr> & <dbl>\\\\\n",
       "\\hline\n",
       "\t 21742443 & 2019-01-01 00:04:37 & 2019-01-01 00:11:07 & 2167 &  390 & 199 & Wabash Ave \\& Grand Ave              &  84 & Milwaukee Ave \\& Grand Ave      & Subscriber & Male   & 1989 & 0:06:30 & 3\\\\\n",
       "\t 21742444 & 2019-01-01 00:08:13 & 2019-01-01 00:15:34 & 4386 &  441 &  44 & State St \\& Randolph St              & 624 & Dearborn St \\& Van Buren St (*) & Subscriber & Female & 1990 & 0:07:21 & 3\\\\\n",
       "\t 21742445 & 2019-01-01 00:13:23 & 2019-01-01 00:27:12 & 1524 &  829 &  15 & Racine Ave \\& 18th St                & 644 & Western Ave \\& Fillmore St (*)  & Subscriber & Female & 1994 & 0:13:49 & 3\\\\\n",
       "\t 21742446 & 2019-01-01 00:13:45 & 2019-01-01 00:43:28 &  252 & 1783 & 123 & California Ave \\& Milwaukee Ave      & 176 & Clark St \\& Elm St              & Subscriber & Male   & 1993 & 0:29:43 & 3\\\\\n",
       "\t 21742447 & 2019-01-01 00:14:52 & 2019-01-01 00:20:56 & 1170 &  364 & 173 & Mies van der Rohe Way \\& Chicago Ave &  35 & Streeter Dr \\& Grand Ave        & Subscriber & Male   & 1994 & 0:06:04 & 3\\\\\n",
       "\t 21742448 & 2019-01-01 00:15:33 & 2019-01-01 00:19:09 & 2437 &  216 &  98 & LaSalle St \\& Washington St          &  49 & Dearborn St \\& Monroe St        & Subscriber & Female & 1983 & 0:03:36 & 3\\\\\n",
       "\t 21742449 & 2019-01-01 00:16:06 & 2019-01-01 00:19:03 & 2708 &  177 &  98 & LaSalle St \\& Washington St          &  49 & Dearborn St \\& Monroe St        & Subscriber & Male   & 1984 & 0:02:57 & 3\\\\\n",
       "\t 21742450 & 2019-01-01 00:18:41 & 2019-01-01 00:20:21 & 2796 &  100 & 211 & St. Clair St \\& Erie St              & 142 & McClurg Ct \\& Erie St           & Subscriber & Male   & 1990 & 0:01:40 & 3\\\\\n",
       "\t 21742451 & 2019-01-01 00:18:43 & 2019-01-01 00:47:30 & 6205 & 1727 & 150 & Fort Dearborn Dr \\& 31st St          & 148 & State St \\& 33rd St             & Subscriber & Male   & 1995 & 0:28:47 & 3\\\\\n",
       "\t 21742452 & 2019-01-01 00:19:18 & 2019-01-01 00:24:54 & 3939 &  336 & 268 & Lake Shore Dr \\& North Blvd          & 141 & Clark St \\& Lincoln Ave         & Subscriber & Male   & 1996 & 0:05:36 & 3\\\\\n",
       "\t 21742453 & 2019-01-01 00:20:34 & 2019-01-01 00:35:20 & 6243 &  886 & 299 & Halsted St \\& Roscoe St              & 295 & Broadway \\& Argyle St           & Subscriber & Male   & 1994 & 0:14:46 & 3\\\\\n",
       "\t 21742454 & 2019-01-01 00:21:52 & 2019-01-01 00:32:45 & 6300 &  653 & 204 & Prairie Ave \\& Garfield Blvd         & 420 & Ellis Ave \\& 55th St            & Subscriber & Female & 1994 & 0:10:53 & 3\\\\\n",
       "\t 21742455 & 2019-01-01 00:23:04 & 2019-01-01 00:33:05 & 3029 &  601 &  90 & Millennium Park                     & 255 & Indiana Ave \\& Roosevelt Rd     & Subscriber & Male   & 1986 & 0:10:01 & 3\\\\\n",
       "\t 21742456 & 2019-01-01 00:23:43 & 2019-01-01 00:33:05 &   84 &  562 &  90 & Millennium Park                     & 255 & Indiana Ave \\& Roosevelt Rd     & Customer   & Female & 1990 & 0:09:22 & 3\\\\\n",
       "\t 21742457 & 2019-01-01 00:23:54 & 2019-01-01 00:39:00 & 5019 &  906 & 289 & Wells St \\& Concord Ln               & 324 & Stockton Dr \\& Wrightwood Ave   & Subscriber & Female & 1989 & 0:15:06 & 3\\\\\n",
       "\t 21742458 & 2019-01-01 00:24:08 & 2019-01-01 00:39:00 & 5526 &  892 & 289 & Wells St \\& Concord Ln               & 324 & Stockton Dr \\& Wrightwood Ave   & Subscriber & Female & 1989 & 0:14:52 & 3\\\\\n",
       "\t 21742459 & 2019-01-01 00:24:13 & 2019-01-01 00:31:00 & 3373 &  407 & 152 & Lincoln Ave \\& Diversey Pkwy         & 166 & Ashland Ave \\& Wrightwood Ave   & Subscriber & Male   & 1967 & 0:06:47 & 3\\\\\n",
       "\t 21742460 & 2019-01-01 00:24:27 & 2019-01-01 00:47:03 & 5777 & 1356 & 268 & Lake Shore Dr \\& North Blvd          & 319 & Greenview Ave \\& Diversey Pkwy  & Customer   & Female & 1990 & 0:22:36 & 3\\\\\n",
       "\t 21742461 & 2019-01-01 00:25:28 & 2019-01-01 00:27:10 & 3940 &  102 &  35 & Streeter Dr \\& Grand Ave             &  35 & Streeter Dr \\& Grand Ave        & Subscriber & Male   & 1985 & 0:01:42 & 3\\\\\n",
       "\t 21742463 & 2019-01-01 00:29:19 & 2019-01-01 01:08:12 & 3914 & 2333 &  35 & Streeter Dr \\& Grand Ave             &  39 & Wabash Ave \\& Adams St          & Customer   & NA     &   NA & 0:38:53 & 3\\\\\n",
       "\t 21742464 & 2019-01-01 00:29:21 & 2019-01-01 00:45:21 &  140 &  960 &  47 & State St \\& Kinzie St                & 111 & Sedgwick St \\& Huron St         & Subscriber & Male   & 1957 & 0:16:00 & 3\\\\\n",
       "\t 21742465 & 2019-01-01 00:29:28 & 2019-01-01 01:07:49 & 3355 & 2301 &  35 & Streeter Dr \\& Grand Ave             &  39 & Wabash Ave \\& Adams St          & Customer   & NA     &   NA & 0:38:21 & 3\\\\\n",
       "\t 21742466 & 2019-01-01 00:29:47 & 2019-01-01 00:49:15 & 5026 & 1168 &  85 & Michigan Ave \\& Oak St               & 329 & Lake Shore Dr \\& Diversey Pkwy  & Subscriber & Male   & 1959 & 0:19:28 & 3\\\\\n",
       "\t 21742467 & 2019-01-01 00:30:48 & 2019-01-01 00:38:42 & 1998 &  474 & 289 & Wells St \\& Concord Ln               & 313 & Lakeview Ave \\& Fullerton Pkwy  & Subscriber & Male   & 1994 & 0:07:54 & 3\\\\\n",
       "\t 21742468 & 2019-01-01 00:33:09 & 2019-01-01 00:50:25 & 2630 & 1036 &  13 & Wilton Ave \\& Diversey Pkwy          &  61 & Wood St \\& Milwaukee Ave        & Subscriber & Male   & 1991 & 0:17:16 & 3\\\\\n",
       "\t 21742469 & 2019-01-01 00:34:35 & 2019-01-01 00:38:25 & 3722 &  230 & 520 & Greenview Ave \\& Jarvis Ave          & 523 & Eastlake Ter \\& Rogers Ave      & Subscriber & Male   & 1961 & 0:03:50 & 3\\\\\n",
       "\t 21742471 & 2019-01-01 00:38:11 & 2019-01-01 00:50:38 & 1166 &  747 & 256 & Broadway \\& Sheridan Rd              & 297 & Paulina St \\& Montrose Ave      & Subscriber & Male   & 1968 & 0:12:27 & 3\\\\\n",
       "\t 21742472 & 2019-01-01 00:38:47 & 2019-01-01 00:50:38 & 1704 &  711 & 256 & Broadway \\& Sheridan Rd              & 297 & Paulina St \\& Montrose Ave      & Subscriber & Male   & 1964 & 0:11:51 & 3\\\\\n",
       "\t 21742473 & 2019-01-01 00:40:16 & 2019-01-01 00:49:29 & 1476 &  553 & 254 & Pine Grove Ave \\& Irving Park Rd     & 465 & Marine Dr \\& Ainslie St         & Subscriber & Male   & 1990 & 0:09:13 & 3\\\\\n",
       "\t 21742474 & 2019-01-01 00:41:46 & 2019-01-01 00:50:27 & 4614 &  521 &  66 & Clinton St \\& Lake St                &  52 & Michigan Ave \\& Lake St         & Subscriber & Male   & 1994 & 0:08:41 & 3\\\\\n",
       "\t â® & â® & â® & â® & â® & â® & â® & â® & â® & â® & â® & â® & â® & â®\\\\\n",
       "\t 22178488 & 2019-03-31 22:51:02 & 2019-03-31 22:54:00 & 4602 & 178 & 460 & Clark St \\& Bryn Mawr Ave            & 461 & Broadway \\& Ridge Ave                 & Subscriber & Male   & 1986 & 0:02:58 & 1\\\\\n",
       "\t 22178489 & 2019-03-31 22:54:00 & 2019-03-31 23:02:49 & 4151 & 529 &  47 & State St \\& Kinzie St                &  26 & McClurg Ct \\& Illinois St             & Subscriber & Male   & 1990 & 0:08:49 & 1\\\\\n",
       "\t 22178490 & 2019-03-31 22:55:28 & 2019-03-31 23:02:10 & 3833 & 402 & 108 & Halsted St \\& Polk St                &  19 & Loomis St \\& Taylor St (*)            & Subscriber & Male   & 1992 & 0:06:42 & 1\\\\\n",
       "\t 22178491 & 2019-03-31 22:58:00 & 2019-03-31 23:06:12 & 1374 & 492 & 108 & Halsted St \\& Polk St                &  41 & Federal St \\& Polk St                 & Subscriber & Male   & 1992 & 0:08:12 & 1\\\\\n",
       "\t 22178492 & 2019-03-31 22:59:35 & 2019-03-31 23:01:38 & 3723 & 123 &  66 & Clinton St \\& Lake St                &  77 & Clinton St \\& Madison St              & Subscriber & Female & 1985 & 0:02:03 & 1\\\\\n",
       "\t 22178493 & 2019-03-31 23:00:17 & 2019-03-31 23:10:52 & 2331 & 635 &  51 & Clark St \\& Randolph St              & 364 & Larrabee St \\& Oak St                 & Subscriber & Male   & 1972 & 0:10:35 & 1\\\\\n",
       "\t 22178494 & 2019-03-31 23:00:28 & 2019-03-31 23:09:20 & 1312 & 532 &  98 & LaSalle St \\& Washington St          &  22 & May St \\& Taylor St                   & Customer   & Male   & 1993 & 0:08:52 & 1\\\\\n",
       "\t 22178495 & 2019-03-31 23:00:43 & 2019-03-31 23:13:04 & 6205 & 741 & 301 & Clark St \\& Schiller St              & 115 & Sheffield Ave \\& Wellington Ave       & Subscriber & Male   & 1988 & 0:12:21 & 1\\\\\n",
       "\t 22178502 & 2019-03-31 23:03:01 & 2019-03-31 23:15:20 & 3360 & 739 & 295 & Broadway \\& Argyle St                & 451 & Sheridan Rd \\& Loyola Ave             & Subscriber & Male   & 1992 & 0:12:19 & 1\\\\\n",
       "\t 22178503 & 2019-03-31 23:09:40 & 2019-03-31 23:19:30 & 6416 & 590 & 114 & Sheffield Ave \\& Waveland Ave        & 330 & Lincoln Ave \\& Addison St             & Subscriber & Female & 1985 & 0:09:50 & 1\\\\\n",
       "\t 22178504 & 2019-03-31 23:10:19 & 2019-03-31 23:21:33 & 3767 & 674 &  50 & Clark St \\& Ida B Wells Dr           &  50 & Clark St \\& Ida B Wells Dr            & Subscriber & Male   & 1957 & 0:11:14 & 1\\\\\n",
       "\t 22178505 & 2019-03-31 23:11:15 & 2019-03-31 23:20:27 & 1646 & 552 & 111 & Sedgwick St \\& Huron St              & 301 & Clark St \\& Schiller St               & Subscriber & Male   & 1994 & 0:09:12 & 1\\\\\n",
       "\t 22178506 & 2019-03-31 23:15:53 & 2019-03-31 23:20:27 &  632 & 274 &  16 & Paulina Ave \\& North Ave             & 158 & Milwaukee Ave \\& Wabansia Ave         & Subscriber & Male   & 1991 & 0:04:34 & 1\\\\\n",
       "\t 22178507 & 2019-03-31 23:16:57 & 2019-03-31 23:22:42 & 1537 & 345 & 173 & Mies van der Rohe Way \\& Chicago Ave & 172 & Rush St \\& Cedar St                   & Subscriber & Male   & 1980 & 0:05:45 & 1\\\\\n",
       "\t 22178508 & 2019-03-31 23:18:42 & 2019-03-31 23:30:40 & 1952 & 718 & 301 & Clark St \\& Schiller St              & 210 & Ashland Ave \\& Division St            & Subscriber & Male   & 1988 & 0:11:58 & 1\\\\\n",
       "\t 22178509 & 2019-03-31 23:20:36 & 2019-03-31 23:28:12 & 5331 & 456 & 115 & Sheffield Ave \\& Wellington Ave      & 313 & Lakeview Ave \\& Fullerton Pkwy        & Subscriber & Male   & 1987 & 0:07:36 & 1\\\\\n",
       "\t 22178510 & 2019-03-31 23:21:07 & 2019-03-31 23:25:12 &   67 & 245 & 325 & Clark St \\& Winnemac Ave             & 464 & Damen Ave \\& Foster Ave               & Subscriber & Male   & 1983 & 0:04:05 & 1\\\\\n",
       "\t 22178515 & 2019-03-31 23:26:00 & 2019-03-31 23:37:24 & 2965 & 684 & 403 & Wentworth Ave \\& 33rd St             & 263 & Rhodes Ave \\& 32nd St                 & Subscriber & Male   & 1984 & 0:11:24 & 1\\\\\n",
       "\t 22178516 & 2019-03-31 23:31:30 & 2019-03-31 23:35:29 & 5747 & 239 & 309 & Leavitt St \\& Armitage Ave           & 219 & Damen Ave \\& Cortland St              & Subscriber & Male   & 1970 & 0:03:59 & 1\\\\\n",
       "\t 22178517 & 2019-03-31 23:32:54 & 2019-03-31 23:37:50 & 2846 & 296 & 181 & LaSalle St \\& Illinois St            &  24 & Fairbanks Ct \\& Grand Ave             & Customer   & NA     &   NA & 0:04:56 & 1\\\\\n",
       "\t 22178518 & 2019-03-31 23:33:02 & 2019-03-31 23:43:15 & 2772 & 613 & 210 & Ashland Ave \\& Division St           & 210 & Ashland Ave \\& Division St            & Subscriber & Male   & 1972 & 0:10:13 & 1\\\\\n",
       "\t 22178519 & 2019-03-31 23:33:14 & 2019-03-31 23:37:40 & 4304 & 266 & 181 & LaSalle St \\& Illinois St            &  24 & Fairbanks Ct \\& Grand Ave             & Customer   & NA     &   NA & 0:04:26 & 1\\\\\n",
       "\t 22178520 & 2019-03-31 23:34:08 & 2019-03-31 23:38:07 &  667 & 239 & 199 & Wabash Ave \\& Grand Ave              &  26 & McClurg Ct \\& Illinois St             & Subscriber & Female & 1984 & 0:03:59 & 1\\\\\n",
       "\t 22178521 & 2019-03-31 23:39:48 & 2019-03-31 23:41:41 & 4814 & 113 & 198 & Green St \\& Madison St               & 233 & Sangamon St \\& Washington Blvd (*)    & Subscriber & Male   & 1971 & 0:01:53 & 1\\\\\n",
       "\t 22178522 & 2019-03-31 23:47:05 & 2019-03-31 23:51:35 & 3873 & 270 &  69 & Damen Ave \\& Pierce Ave              & 183 & Damen Ave \\& Thomas St (Augusta Blvd) & Subscriber & Male   & 1985 & 0:04:30 & 1\\\\\n",
       "\t 22178524 & 2019-03-31 23:51:32 & 2019-04-01 00:04:09 & 1501 & 757 &  38 & Clark St \\& Lake St                  &  29 & Noble St \\& Milwaukee Ave             & Subscriber & Male   & 1993 & 0:12:37 & 2\\\\\n",
       "\t 22178525 & 2019-03-31 23:52:37 & 2019-03-31 23:58:09 & 3270 & 332 & 129 & Blue Island Ave \\& 18th St           & 202 & Halsted St \\& 18th St                 & Subscriber & Male   & 1992 & 0:05:32 & 1\\\\\n",
       "\t 22178526 & 2019-03-31 23:52:38 & 2019-04-01 00:06:44 & 3584 & 846 & 283 & LaSalle St \\& Jackson Blvd           & 273 & Michigan Ave \\& 18th St               & Subscriber & Male   & 1984 & 0:14:06 & 2\\\\\n",
       "\t 22178527 & 2019-03-31 23:53:08 & 2019-03-31 23:56:06 & 4384 & 178 & 321 & Wabash Ave \\& 9th St                 &  39 & Wabash Ave \\& Adams St                & Subscriber & Male   & 1969 & 0:02:58 & 1\\\\\n",
       "\t 22178528 & 2019-03-31 23:53:48 & 2019-04-01 00:01:16 & 5589 & 448 & 248 & Woodlawn Ave \\& 55th St              & 247 & Shore Dr \\& 55th St                   & Subscriber & Male   & 1998 & 0:07:28 & 2\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A spec_tbl_df: 365069 Ã 14\n",
       "\n",
       "| ride_id &lt;dbl&gt; | started_at &lt;dttm&gt; | ended_at &lt;dttm&gt; | rideable_type &lt;dbl&gt; | tripduration &lt;dbl&gt; | start_station_id &lt;dbl&gt; | start_station_name &lt;chr&gt; | end_station_id &lt;dbl&gt; | end_station_name &lt;chr&gt; | member_casual &lt;chr&gt; | gender &lt;chr&gt; | birthyear &lt;dbl&gt; | ride_length &lt;chr&gt; | day_of_week &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 21742443 | 2019-01-01 00:04:37 | 2019-01-01 00:11:07 | 2167 |  390 | 199 | Wabash Ave &amp; Grand Ave              |  84 | Milwaukee Ave &amp; Grand Ave      | Subscriber | Male   | 1989 | 0:06:30 | 3 |\n",
       "| 21742444 | 2019-01-01 00:08:13 | 2019-01-01 00:15:34 | 4386 |  441 |  44 | State St &amp; Randolph St              | 624 | Dearborn St &amp; Van Buren St (*) | Subscriber | Female | 1990 | 0:07:21 | 3 |\n",
       "| 21742445 | 2019-01-01 00:13:23 | 2019-01-01 00:27:12 | 1524 |  829 |  15 | Racine Ave &amp; 18th St                | 644 | Western Ave &amp; Fillmore St (*)  | Subscriber | Female | 1994 | 0:13:49 | 3 |\n",
       "| 21742446 | 2019-01-01 00:13:45 | 2019-01-01 00:43:28 |  252 | 1783 | 123 | California Ave &amp; Milwaukee Ave      | 176 | Clark St &amp; Elm St              | Subscriber | Male   | 1993 | 0:29:43 | 3 |\n",
       "| 21742447 | 2019-01-01 00:14:52 | 2019-01-01 00:20:56 | 1170 |  364 | 173 | Mies van der Rohe Way &amp; Chicago Ave |  35 | Streeter Dr &amp; Grand Ave        | Subscriber | Male   | 1994 | 0:06:04 | 3 |\n",
       "| 21742448 | 2019-01-01 00:15:33 | 2019-01-01 00:19:09 | 2437 |  216 |  98 | LaSalle St &amp; Washington St          |  49 | Dearborn St &amp; Monroe St        | Subscriber | Female | 1983 | 0:03:36 | 3 |\n",
       "| 21742449 | 2019-01-01 00:16:06 | 2019-01-01 00:19:03 | 2708 |  177 |  98 | LaSalle St &amp; Washington St          |  49 | Dearborn St &amp; Monroe St        | Subscriber | Male   | 1984 | 0:02:57 | 3 |\n",
       "| 21742450 | 2019-01-01 00:18:41 | 2019-01-01 00:20:21 | 2796 |  100 | 211 | St. Clair St &amp; Erie St              | 142 | McClurg Ct &amp; Erie St           | Subscriber | Male   | 1990 | 0:01:40 | 3 |\n",
       "| 21742451 | 2019-01-01 00:18:43 | 2019-01-01 00:47:30 | 6205 | 1727 | 150 | Fort Dearborn Dr &amp; 31st St          | 148 | State St &amp; 33rd St             | Subscriber | Male   | 1995 | 0:28:47 | 3 |\n",
       "| 21742452 | 2019-01-01 00:19:18 | 2019-01-01 00:24:54 | 3939 |  336 | 268 | Lake Shore Dr &amp; North Blvd          | 141 | Clark St &amp; Lincoln Ave         | Subscriber | Male   | 1996 | 0:05:36 | 3 |\n",
       "| 21742453 | 2019-01-01 00:20:34 | 2019-01-01 00:35:20 | 6243 |  886 | 299 | Halsted St &amp; Roscoe St              | 295 | Broadway &amp; Argyle St           | Subscriber | Male   | 1994 | 0:14:46 | 3 |\n",
       "| 21742454 | 2019-01-01 00:21:52 | 2019-01-01 00:32:45 | 6300 |  653 | 204 | Prairie Ave &amp; Garfield Blvd         | 420 | Ellis Ave &amp; 55th St            | Subscriber | Female | 1994 | 0:10:53 | 3 |\n",
       "| 21742455 | 2019-01-01 00:23:04 | 2019-01-01 00:33:05 | 3029 |  601 |  90 | Millennium Park                     | 255 | Indiana Ave &amp; Roosevelt Rd     | Subscriber | Male   | 1986 | 0:10:01 | 3 |\n",
       "| 21742456 | 2019-01-01 00:23:43 | 2019-01-01 00:33:05 |   84 |  562 |  90 | Millennium Park                     | 255 | Indiana Ave &amp; Roosevelt Rd     | Customer   | Female | 1990 | 0:09:22 | 3 |\n",
       "| 21742457 | 2019-01-01 00:23:54 | 2019-01-01 00:39:00 | 5019 |  906 | 289 | Wells St &amp; Concord Ln               | 324 | Stockton Dr &amp; Wrightwood Ave   | Subscriber | Female | 1989 | 0:15:06 | 3 |\n",
       "| 21742458 | 2019-01-01 00:24:08 | 2019-01-01 00:39:00 | 5526 |  892 | 289 | Wells St &amp; Concord Ln               | 324 | Stockton Dr &amp; Wrightwood Ave   | Subscriber | Female | 1989 | 0:14:52 | 3 |\n",
       "| 21742459 | 2019-01-01 00:24:13 | 2019-01-01 00:31:00 | 3373 |  407 | 152 | Lincoln Ave &amp; Diversey Pkwy         | 166 | Ashland Ave &amp; Wrightwood Ave   | Subscriber | Male   | 1967 | 0:06:47 | 3 |\n",
       "| 21742460 | 2019-01-01 00:24:27 | 2019-01-01 00:47:03 | 5777 | 1356 | 268 | Lake Shore Dr &amp; North Blvd          | 319 | Greenview Ave &amp; Diversey Pkwy  | Customer   | Female | 1990 | 0:22:36 | 3 |\n",
       "| 21742461 | 2019-01-01 00:25:28 | 2019-01-01 00:27:10 | 3940 |  102 |  35 | Streeter Dr &amp; Grand Ave             |  35 | Streeter Dr &amp; Grand Ave        | Subscriber | Male   | 1985 | 0:01:42 | 3 |\n",
       "| 21742463 | 2019-01-01 00:29:19 | 2019-01-01 01:08:12 | 3914 | 2333 |  35 | Streeter Dr &amp; Grand Ave             |  39 | Wabash Ave &amp; Adams St          | Customer   | NA     |   NA | 0:38:53 | 3 |\n",
       "| 21742464 | 2019-01-01 00:29:21 | 2019-01-01 00:45:21 |  140 |  960 |  47 | State St &amp; Kinzie St                | 111 | Sedgwick St &amp; Huron St         | Subscriber | Male   | 1957 | 0:16:00 | 3 |\n",
       "| 21742465 | 2019-01-01 00:29:28 | 2019-01-01 01:07:49 | 3355 | 2301 |  35 | Streeter Dr &amp; Grand Ave             |  39 | Wabash Ave &amp; Adams St          | Customer   | NA     |   NA | 0:38:21 | 3 |\n",
       "| 21742466 | 2019-01-01 00:29:47 | 2019-01-01 00:49:15 | 5026 | 1168 |  85 | Michigan Ave &amp; Oak St               | 329 | Lake Shore Dr &amp; Diversey Pkwy  | Subscriber | Male   | 1959 | 0:19:28 | 3 |\n",
       "| 21742467 | 2019-01-01 00:30:48 | 2019-01-01 00:38:42 | 1998 |  474 | 289 | Wells St &amp; Concord Ln               | 313 | Lakeview Ave &amp; Fullerton Pkwy  | Subscriber | Male   | 1994 | 0:07:54 | 3 |\n",
       "| 21742468 | 2019-01-01 00:33:09 | 2019-01-01 00:50:25 | 2630 | 1036 |  13 | Wilton Ave &amp; Diversey Pkwy          |  61 | Wood St &amp; Milwaukee Ave        | Subscriber | Male   | 1991 | 0:17:16 | 3 |\n",
       "| 21742469 | 2019-01-01 00:34:35 | 2019-01-01 00:38:25 | 3722 |  230 | 520 | Greenview Ave &amp; Jarvis Ave          | 523 | Eastlake Ter &amp; Rogers Ave      | Subscriber | Male   | 1961 | 0:03:50 | 3 |\n",
       "| 21742471 | 2019-01-01 00:38:11 | 2019-01-01 00:50:38 | 1166 |  747 | 256 | Broadway &amp; Sheridan Rd              | 297 | Paulina St &amp; Montrose Ave      | Subscriber | Male   | 1968 | 0:12:27 | 3 |\n",
       "| 21742472 | 2019-01-01 00:38:47 | 2019-01-01 00:50:38 | 1704 |  711 | 256 | Broadway &amp; Sheridan Rd              | 297 | Paulina St &amp; Montrose Ave      | Subscriber | Male   | 1964 | 0:11:51 | 3 |\n",
       "| 21742473 | 2019-01-01 00:40:16 | 2019-01-01 00:49:29 | 1476 |  553 | 254 | Pine Grove Ave &amp; Irving Park Rd     | 465 | Marine Dr &amp; Ainslie St         | Subscriber | Male   | 1990 | 0:09:13 | 3 |\n",
       "| 21742474 | 2019-01-01 00:41:46 | 2019-01-01 00:50:27 | 4614 |  521 |  66 | Clinton St &amp; Lake St                |  52 | Michigan Ave &amp; Lake St         | Subscriber | Male   | 1994 | 0:08:41 | 3 |\n",
       "| â® | â® | â® | â® | â® | â® | â® | â® | â® | â® | â® | â® | â® | â® |\n",
       "| 22178488 | 2019-03-31 22:51:02 | 2019-03-31 22:54:00 | 4602 | 178 | 460 | Clark St &amp; Bryn Mawr Ave            | 461 | Broadway &amp; Ridge Ave                 | Subscriber | Male   | 1986 | 0:02:58 | 1 |\n",
       "| 22178489 | 2019-03-31 22:54:00 | 2019-03-31 23:02:49 | 4151 | 529 |  47 | State St &amp; Kinzie St                |  26 | McClurg Ct &amp; Illinois St             | Subscriber | Male   | 1990 | 0:08:49 | 1 |\n",
       "| 22178490 | 2019-03-31 22:55:28 | 2019-03-31 23:02:10 | 3833 | 402 | 108 | Halsted St &amp; Polk St                |  19 | Loomis St &amp; Taylor St (*)            | Subscriber | Male   | 1992 | 0:06:42 | 1 |\n",
       "| 22178491 | 2019-03-31 22:58:00 | 2019-03-31 23:06:12 | 1374 | 492 | 108 | Halsted St &amp; Polk St                |  41 | Federal St &amp; Polk St                 | Subscriber | Male   | 1992 | 0:08:12 | 1 |\n",
       "| 22178492 | 2019-03-31 22:59:35 | 2019-03-31 23:01:38 | 3723 | 123 |  66 | Clinton St &amp; Lake St                |  77 | Clinton St &amp; Madison St              | Subscriber | Female | 1985 | 0:02:03 | 1 |\n",
       "| 22178493 | 2019-03-31 23:00:17 | 2019-03-31 23:10:52 | 2331 | 635 |  51 | Clark St &amp; Randolph St              | 364 | Larrabee St &amp; Oak St                 | Subscriber | Male   | 1972 | 0:10:35 | 1 |\n",
       "| 22178494 | 2019-03-31 23:00:28 | 2019-03-31 23:09:20 | 1312 | 532 |  98 | LaSalle St &amp; Washington St          |  22 | May St &amp; Taylor St                   | Customer   | Male   | 1993 | 0:08:52 | 1 |\n",
       "| 22178495 | 2019-03-31 23:00:43 | 2019-03-31 23:13:04 | 6205 | 741 | 301 | Clark St &amp; Schiller St              | 115 | Sheffield Ave &amp; Wellington Ave       | Subscriber | Male   | 1988 | 0:12:21 | 1 |\n",
       "| 22178502 | 2019-03-31 23:03:01 | 2019-03-31 23:15:20 | 3360 | 739 | 295 | Broadway &amp; Argyle St                | 451 | Sheridan Rd &amp; Loyola Ave             | Subscriber | Male   | 1992 | 0:12:19 | 1 |\n",
       "| 22178503 | 2019-03-31 23:09:40 | 2019-03-31 23:19:30 | 6416 | 590 | 114 | Sheffield Ave &amp; Waveland Ave        | 330 | Lincoln Ave &amp; Addison St             | Subscriber | Female | 1985 | 0:09:50 | 1 |\n",
       "| 22178504 | 2019-03-31 23:10:19 | 2019-03-31 23:21:33 | 3767 | 674 |  50 | Clark St &amp; Ida B Wells Dr           |  50 | Clark St &amp; Ida B Wells Dr            | Subscriber | Male   | 1957 | 0:11:14 | 1 |\n",
       "| 22178505 | 2019-03-31 23:11:15 | 2019-03-31 23:20:27 | 1646 | 552 | 111 | Sedgwick St &amp; Huron St              | 301 | Clark St &amp; Schiller St               | Subscriber | Male   | 1994 | 0:09:12 | 1 |\n",
       "| 22178506 | 2019-03-31 23:15:53 | 2019-03-31 23:20:27 |  632 | 274 |  16 | Paulina Ave &amp; North Ave             | 158 | Milwaukee Ave &amp; Wabansia Ave         | Subscriber | Male   | 1991 | 0:04:34 | 1 |\n",
       "| 22178507 | 2019-03-31 23:16:57 | 2019-03-31 23:22:42 | 1537 | 345 | 173 | Mies van der Rohe Way &amp; Chicago Ave | 172 | Rush St &amp; Cedar St                   | Subscriber | Male   | 1980 | 0:05:45 | 1 |\n",
       "| 22178508 | 2019-03-31 23:18:42 | 2019-03-31 23:30:40 | 1952 | 718 | 301 | Clark St &amp; Schiller St              | 210 | Ashland Ave &amp; Division St            | Subscriber | Male   | 1988 | 0:11:58 | 1 |\n",
       "| 22178509 | 2019-03-31 23:20:36 | 2019-03-31 23:28:12 | 5331 | 456 | 115 | Sheffield Ave &amp; Wellington Ave      | 313 | Lakeview Ave &amp; Fullerton Pkwy        | Subscriber | Male   | 1987 | 0:07:36 | 1 |\n",
       "| 22178510 | 2019-03-31 23:21:07 | 2019-03-31 23:25:12 |   67 | 245 | 325 | Clark St &amp; Winnemac Ave             | 464 | Damen Ave &amp; Foster Ave               | Subscriber | Male   | 1983 | 0:04:05 | 1 |\n",
       "| 22178515 | 2019-03-31 23:26:00 | 2019-03-31 23:37:24 | 2965 | 684 | 403 | Wentworth Ave &amp; 33rd St             | 263 | Rhodes Ave &amp; 32nd St                 | Subscriber | Male   | 1984 | 0:11:24 | 1 |\n",
       "| 22178516 | 2019-03-31 23:31:30 | 2019-03-31 23:35:29 | 5747 | 239 | 309 | Leavitt St &amp; Armitage Ave           | 219 | Damen Ave &amp; Cortland St              | Subscriber | Male   | 1970 | 0:03:59 | 1 |\n",
       "| 22178517 | 2019-03-31 23:32:54 | 2019-03-31 23:37:50 | 2846 | 296 | 181 | LaSalle St &amp; Illinois St            |  24 | Fairbanks Ct &amp; Grand Ave             | Customer   | NA     |   NA | 0:04:56 | 1 |\n",
       "| 22178518 | 2019-03-31 23:33:02 | 2019-03-31 23:43:15 | 2772 | 613 | 210 | Ashland Ave &amp; Division St           | 210 | Ashland Ave &amp; Division St            | Subscriber | Male   | 1972 | 0:10:13 | 1 |\n",
       "| 22178519 | 2019-03-31 23:33:14 | 2019-03-31 23:37:40 | 4304 | 266 | 181 | LaSalle St &amp; Illinois St            |  24 | Fairbanks Ct &amp; Grand Ave             | Customer   | NA     |   NA | 0:04:26 | 1 |\n",
       "| 22178520 | 2019-03-31 23:34:08 | 2019-03-31 23:38:07 |  667 | 239 | 199 | Wabash Ave &amp; Grand Ave              |  26 | McClurg Ct &amp; Illinois St             | Subscriber | Female | 1984 | 0:03:59 | 1 |\n",
       "| 22178521 | 2019-03-31 23:39:48 | 2019-03-31 23:41:41 | 4814 | 113 | 198 | Green St &amp; Madison St               | 233 | Sangamon St &amp; Washington Blvd (*)    | Subscriber | Male   | 1971 | 0:01:53 | 1 |\n",
       "| 22178522 | 2019-03-31 23:47:05 | 2019-03-31 23:51:35 | 3873 | 270 |  69 | Damen Ave &amp; Pierce Ave              | 183 | Damen Ave &amp; Thomas St (Augusta Blvd) | Subscriber | Male   | 1985 | 0:04:30 | 1 |\n",
       "| 22178524 | 2019-03-31 23:51:32 | 2019-04-01 00:04:09 | 1501 | 757 |  38 | Clark St &amp; Lake St                  |  29 | Noble St &amp; Milwaukee Ave             | Subscriber | Male   | 1993 | 0:12:37 | 2 |\n",
       "| 22178525 | 2019-03-31 23:52:37 | 2019-03-31 23:58:09 | 3270 | 332 | 129 | Blue Island Ave &amp; 18th St           | 202 | Halsted St &amp; 18th St                 | Subscriber | Male   | 1992 | 0:05:32 | 1 |\n",
       "| 22178526 | 2019-03-31 23:52:38 | 2019-04-01 00:06:44 | 3584 | 846 | 283 | LaSalle St &amp; Jackson Blvd           | 273 | Michigan Ave &amp; 18th St               | Subscriber | Male   | 1984 | 0:14:06 | 2 |\n",
       "| 22178527 | 2019-03-31 23:53:08 | 2019-03-31 23:56:06 | 4384 | 178 | 321 | Wabash Ave &amp; 9th St                 |  39 | Wabash Ave &amp; Adams St                | Subscriber | Male   | 1969 | 0:02:58 | 1 |\n",
       "| 22178528 | 2019-03-31 23:53:48 | 2019-04-01 00:01:16 | 5589 | 448 | 248 | Woodlawn Ave &amp; 55th St              | 247 | Shore Dr &amp; 55th St                   | Subscriber | Male   | 1998 | 0:07:28 | 2 |\n",
       "\n"
      ],
      "text/plain": [
       "       ride_id  started_at          ended_at            rideable_type\n",
       "1      21742443 2019-01-01 00:04:37 2019-01-01 00:11:07 2167         \n",
       "2      21742444 2019-01-01 00:08:13 2019-01-01 00:15:34 4386         \n",
       "3      21742445 2019-01-01 00:13:23 2019-01-01 00:27:12 1524         \n",
       "4      21742446 2019-01-01 00:13:45 2019-01-01 00:43:28  252         \n",
       "5      21742447 2019-01-01 00:14:52 2019-01-01 00:20:56 1170         \n",
       "6      21742448 2019-01-01 00:15:33 2019-01-01 00:19:09 2437         \n",
       "7      21742449 2019-01-01 00:16:06 2019-01-01 00:19:03 2708         \n",
       "8      21742450 2019-01-01 00:18:41 2019-01-01 00:20:21 2796         \n",
       "9      21742451 2019-01-01 00:18:43 2019-01-01 00:47:30 6205         \n",
       "10     21742452 2019-01-01 00:19:18 2019-01-01 00:24:54 3939         \n",
       "11     21742453 2019-01-01 00:20:34 2019-01-01 00:35:20 6243         \n",
       "12     21742454 2019-01-01 00:21:52 2019-01-01 00:32:45 6300         \n",
       "13     21742455 2019-01-01 00:23:04 2019-01-01 00:33:05 3029         \n",
       "14     21742456 2019-01-01 00:23:43 2019-01-01 00:33:05   84         \n",
       "15     21742457 2019-01-01 00:23:54 2019-01-01 00:39:00 5019         \n",
       "16     21742458 2019-01-01 00:24:08 2019-01-01 00:39:00 5526         \n",
       "17     21742459 2019-01-01 00:24:13 2019-01-01 00:31:00 3373         \n",
       "18     21742460 2019-01-01 00:24:27 2019-01-01 00:47:03 5777         \n",
       "19     21742461 2019-01-01 00:25:28 2019-01-01 00:27:10 3940         \n",
       "20     21742463 2019-01-01 00:29:19 2019-01-01 01:08:12 3914         \n",
       "21     21742464 2019-01-01 00:29:21 2019-01-01 00:45:21  140         \n",
       "22     21742465 2019-01-01 00:29:28 2019-01-01 01:07:49 3355         \n",
       "23     21742466 2019-01-01 00:29:47 2019-01-01 00:49:15 5026         \n",
       "24     21742467 2019-01-01 00:30:48 2019-01-01 00:38:42 1998         \n",
       "25     21742468 2019-01-01 00:33:09 2019-01-01 00:50:25 2630         \n",
       "26     21742469 2019-01-01 00:34:35 2019-01-01 00:38:25 3722         \n",
       "27     21742471 2019-01-01 00:38:11 2019-01-01 00:50:38 1166         \n",
       "28     21742472 2019-01-01 00:38:47 2019-01-01 00:50:38 1704         \n",
       "29     21742473 2019-01-01 00:40:16 2019-01-01 00:49:29 1476         \n",
       "30     21742474 2019-01-01 00:41:46 2019-01-01 00:50:27 4614         \n",
       "â®      â®        â®                   â®                   â®            \n",
       "365040 22178488 2019-03-31 22:51:02 2019-03-31 22:54:00 4602         \n",
       "365041 22178489 2019-03-31 22:54:00 2019-03-31 23:02:49 4151         \n",
       "365042 22178490 2019-03-31 22:55:28 2019-03-31 23:02:10 3833         \n",
       "365043 22178491 2019-03-31 22:58:00 2019-03-31 23:06:12 1374         \n",
       "365044 22178492 2019-03-31 22:59:35 2019-03-31 23:01:38 3723         \n",
       "365045 22178493 2019-03-31 23:00:17 2019-03-31 23:10:52 2331         \n",
       "365046 22178494 2019-03-31 23:00:28 2019-03-31 23:09:20 1312         \n",
       "365047 22178495 2019-03-31 23:00:43 2019-03-31 23:13:04 6205         \n",
       "365048 22178502 2019-03-31 23:03:01 2019-03-31 23:15:20 3360         \n",
       "365049 22178503 2019-03-31 23:09:40 2019-03-31 23:19:30 6416         \n",
       "365050 22178504 2019-03-31 23:10:19 2019-03-31 23:21:33 3767         \n",
       "365051 22178505 2019-03-31 23:11:15 2019-03-31 23:20:27 1646         \n",
       "365052 22178506 2019-03-31 23:15:53 2019-03-31 23:20:27  632         \n",
       "365053 22178507 2019-03-31 23:16:57 2019-03-31 23:22:42 1537         \n",
       "365054 22178508 2019-03-31 23:18:42 2019-03-31 23:30:40 1952         \n",
       "365055 22178509 2019-03-31 23:20:36 2019-03-31 23:28:12 5331         \n",
       "365056 22178510 2019-03-31 23:21:07 2019-03-31 23:25:12   67         \n",
       "365057 22178515 2019-03-31 23:26:00 2019-03-31 23:37:24 2965         \n",
       "365058 22178516 2019-03-31 23:31:30 2019-03-31 23:35:29 5747         \n",
       "365059 22178517 2019-03-31 23:32:54 2019-03-31 23:37:50 2846         \n",
       "365060 22178518 2019-03-31 23:33:02 2019-03-31 23:43:15 2772         \n",
       "365061 22178519 2019-03-31 23:33:14 2019-03-31 23:37:40 4304         \n",
       "365062 22178520 2019-03-31 23:34:08 2019-03-31 23:38:07  667         \n",
       "365063 22178521 2019-03-31 23:39:48 2019-03-31 23:41:41 4814         \n",
       "365064 22178522 2019-03-31 23:47:05 2019-03-31 23:51:35 3873         \n",
       "365065 22178524 2019-03-31 23:51:32 2019-04-01 00:04:09 1501         \n",
       "365066 22178525 2019-03-31 23:52:37 2019-03-31 23:58:09 3270         \n",
       "365067 22178526 2019-03-31 23:52:38 2019-04-01 00:06:44 3584         \n",
       "365068 22178527 2019-03-31 23:53:08 2019-03-31 23:56:06 4384         \n",
       "365069 22178528 2019-03-31 23:53:48 2019-04-01 00:01:16 5589         \n",
       "       tripduration start_station_id start_station_name                 \n",
       "1       390         199              Wabash Ave & Grand Ave             \n",
       "2       441          44              State St & Randolph St             \n",
       "3       829          15              Racine Ave & 18th St               \n",
       "4      1783         123              California Ave & Milwaukee Ave     \n",
       "5       364         173              Mies van der Rohe Way & Chicago Ave\n",
       "6       216          98              LaSalle St & Washington St         \n",
       "7       177          98              LaSalle St & Washington St         \n",
       "8       100         211              St. Clair St & Erie St             \n",
       "9      1727         150              Fort Dearborn Dr & 31st St         \n",
       "10      336         268              Lake Shore Dr & North Blvd         \n",
       "11      886         299              Halsted St & Roscoe St             \n",
       "12      653         204              Prairie Ave & Garfield Blvd        \n",
       "13      601          90              Millennium Park                    \n",
       "14      562          90              Millennium Park                    \n",
       "15      906         289              Wells St & Concord Ln              \n",
       "16      892         289              Wells St & Concord Ln              \n",
       "17      407         152              Lincoln Ave & Diversey Pkwy        \n",
       "18     1356         268              Lake Shore Dr & North Blvd         \n",
       "19      102          35              Streeter Dr & Grand Ave            \n",
       "20     2333          35              Streeter Dr & Grand Ave            \n",
       "21      960          47              State St & Kinzie St               \n",
       "22     2301          35              Streeter Dr & Grand Ave            \n",
       "23     1168          85              Michigan Ave & Oak St              \n",
       "24      474         289              Wells St & Concord Ln              \n",
       "25     1036          13              Wilton Ave & Diversey Pkwy         \n",
       "26      230         520              Greenview Ave & Jarvis Ave         \n",
       "27      747         256              Broadway & Sheridan Rd             \n",
       "28      711         256              Broadway & Sheridan Rd             \n",
       "29      553         254              Pine Grove Ave & Irving Park Rd    \n",
       "30      521          66              Clinton St & Lake St               \n",
       "â®      â®            â®                â®                                  \n",
       "365040 178          460              Clark St & Bryn Mawr Ave           \n",
       "365041 529           47              State St & Kinzie St               \n",
       "365042 402          108              Halsted St & Polk St               \n",
       "365043 492          108              Halsted St & Polk St               \n",
       "365044 123           66              Clinton St & Lake St               \n",
       "365045 635           51              Clark St & Randolph St             \n",
       "365046 532           98              LaSalle St & Washington St         \n",
       "365047 741          301              Clark St & Schiller St             \n",
       "365048 739          295              Broadway & Argyle St               \n",
       "365049 590          114              Sheffield Ave & Waveland Ave       \n",
       "365050 674           50              Clark St & Ida B Wells Dr          \n",
       "365051 552          111              Sedgwick St & Huron St             \n",
       "365052 274           16              Paulina Ave & North Ave            \n",
       "365053 345          173              Mies van der Rohe Way & Chicago Ave\n",
       "365054 718          301              Clark St & Schiller St             \n",
       "365055 456          115              Sheffield Ave & Wellington Ave     \n",
       "365056 245          325              Clark St & Winnemac Ave            \n",
       "365057 684          403              Wentworth Ave & 33rd St            \n",
       "365058 239          309              Leavitt St & Armitage Ave          \n",
       "365059 296          181              LaSalle St & Illinois St           \n",
       "365060 613          210              Ashland Ave & Division St          \n",
       "365061 266          181              LaSalle St & Illinois St           \n",
       "365062 239          199              Wabash Ave & Grand Ave             \n",
       "365063 113          198              Green St & Madison St              \n",
       "365064 270           69              Damen Ave & Pierce Ave             \n",
       "365065 757           38              Clark St & Lake St                 \n",
       "365066 332          129              Blue Island Ave & 18th St          \n",
       "365067 846          283              LaSalle St & Jackson Blvd          \n",
       "365068 178          321              Wabash Ave & 9th St                \n",
       "365069 448          248              Woodlawn Ave & 55th St             \n",
       "       end_station_id end_station_name                     member_casual gender\n",
       "1       84            Milwaukee Ave & Grand Ave            Subscriber    Male  \n",
       "2      624            Dearborn St & Van Buren St (*)       Subscriber    Female\n",
       "3      644            Western Ave & Fillmore St (*)        Subscriber    Female\n",
       "4      176            Clark St & Elm St                    Subscriber    Male  \n",
       "5       35            Streeter Dr & Grand Ave              Subscriber    Male  \n",
       "6       49            Dearborn St & Monroe St              Subscriber    Female\n",
       "7       49            Dearborn St & Monroe St              Subscriber    Male  \n",
       "8      142            McClurg Ct & Erie St                 Subscriber    Male  \n",
       "9      148            State St & 33rd St                   Subscriber    Male  \n",
       "10     141            Clark St & Lincoln Ave               Subscriber    Male  \n",
       "11     295            Broadway & Argyle St                 Subscriber    Male  \n",
       "12     420            Ellis Ave & 55th St                  Subscriber    Female\n",
       "13     255            Indiana Ave & Roosevelt Rd           Subscriber    Male  \n",
       "14     255            Indiana Ave & Roosevelt Rd           Customer      Female\n",
       "15     324            Stockton Dr & Wrightwood Ave         Subscriber    Female\n",
       "16     324            Stockton Dr & Wrightwood Ave         Subscriber    Female\n",
       "17     166            Ashland Ave & Wrightwood Ave         Subscriber    Male  \n",
       "18     319            Greenview Ave & Diversey Pkwy        Customer      Female\n",
       "19      35            Streeter Dr & Grand Ave              Subscriber    Male  \n",
       "20      39            Wabash Ave & Adams St                Customer      NA    \n",
       "21     111            Sedgwick St & Huron St               Subscriber    Male  \n",
       "22      39            Wabash Ave & Adams St                Customer      NA    \n",
       "23     329            Lake Shore Dr & Diversey Pkwy        Subscriber    Male  \n",
       "24     313            Lakeview Ave & Fullerton Pkwy        Subscriber    Male  \n",
       "25      61            Wood St & Milwaukee Ave              Subscriber    Male  \n",
       "26     523            Eastlake Ter & Rogers Ave            Subscriber    Male  \n",
       "27     297            Paulina St & Montrose Ave            Subscriber    Male  \n",
       "28     297            Paulina St & Montrose Ave            Subscriber    Male  \n",
       "29     465            Marine Dr & Ainslie St               Subscriber    Male  \n",
       "30      52            Michigan Ave & Lake St               Subscriber    Male  \n",
       "â®      â®              â®                                    â®             â®     \n",
       "365040 461            Broadway & Ridge Ave                 Subscriber    Male  \n",
       "365041  26            McClurg Ct & Illinois St             Subscriber    Male  \n",
       "365042  19            Loomis St & Taylor St (*)            Subscriber    Male  \n",
       "365043  41            Federal St & Polk St                 Subscriber    Male  \n",
       "365044  77            Clinton St & Madison St              Subscriber    Female\n",
       "365045 364            Larrabee St & Oak St                 Subscriber    Male  \n",
       "365046  22            May St & Taylor St                   Customer      Male  \n",
       "365047 115            Sheffield Ave & Wellington Ave       Subscriber    Male  \n",
       "365048 451            Sheridan Rd & Loyola Ave             Subscriber    Male  \n",
       "365049 330            Lincoln Ave & Addison St             Subscriber    Female\n",
       "365050  50            Clark St & Ida B Wells Dr            Subscriber    Male  \n",
       "365051 301            Clark St & Schiller St               Subscriber    Male  \n",
       "365052 158            Milwaukee Ave & Wabansia Ave         Subscriber    Male  \n",
       "365053 172            Rush St & Cedar St                   Subscriber    Male  \n",
       "365054 210            Ashland Ave & Division St            Subscriber    Male  \n",
       "365055 313            Lakeview Ave & Fullerton Pkwy        Subscriber    Male  \n",
       "365056 464            Damen Ave & Foster Ave               Subscriber    Male  \n",
       "365057 263            Rhodes Ave & 32nd St                 Subscriber    Male  \n",
       "365058 219            Damen Ave & Cortland St              Subscriber    Male  \n",
       "365059  24            Fairbanks Ct & Grand Ave             Customer      NA    \n",
       "365060 210            Ashland Ave & Division St            Subscriber    Male  \n",
       "365061  24            Fairbanks Ct & Grand Ave             Customer      NA    \n",
       "365062  26            McClurg Ct & Illinois St             Subscriber    Female\n",
       "365063 233            Sangamon St & Washington Blvd (*)    Subscriber    Male  \n",
       "365064 183            Damen Ave & Thomas St (Augusta Blvd) Subscriber    Male  \n",
       "365065  29            Noble St & Milwaukee Ave             Subscriber    Male  \n",
       "365066 202            Halsted St & 18th St                 Subscriber    Male  \n",
       "365067 273            Michigan Ave & 18th St               Subscriber    Male  \n",
       "365068  39            Wabash Ave & Adams St                Subscriber    Male  \n",
       "365069 247            Shore Dr & 55th St                   Subscriber    Male  \n",
       "       birthyear ride_length day_of_week\n",
       "1      1989      0:06:30     3          \n",
       "2      1990      0:07:21     3          \n",
       "3      1994      0:13:49     3          \n",
       "4      1993      0:29:43     3          \n",
       "5      1994      0:06:04     3          \n",
       "6      1983      0:03:36     3          \n",
       "7      1984      0:02:57     3          \n",
       "8      1990      0:01:40     3          \n",
       "9      1995      0:28:47     3          \n",
       "10     1996      0:05:36     3          \n",
       "11     1994      0:14:46     3          \n",
       "12     1994      0:10:53     3          \n",
       "13     1986      0:10:01     3          \n",
       "14     1990      0:09:22     3          \n",
       "15     1989      0:15:06     3          \n",
       "16     1989      0:14:52     3          \n",
       "17     1967      0:06:47     3          \n",
       "18     1990      0:22:36     3          \n",
       "19     1985      0:01:42     3          \n",
       "20       NA      0:38:53     3          \n",
       "21     1957      0:16:00     3          \n",
       "22       NA      0:38:21     3          \n",
       "23     1959      0:19:28     3          \n",
       "24     1994      0:07:54     3          \n",
       "25     1991      0:17:16     3          \n",
       "26     1961      0:03:50     3          \n",
       "27     1968      0:12:27     3          \n",
       "28     1964      0:11:51     3          \n",
       "29     1990      0:09:13     3          \n",
       "30     1994      0:08:41     3          \n",
       "â®      â®         â®           â®          \n",
       "365040 1986      0:02:58     1          \n",
       "365041 1990      0:08:49     1          \n",
       "365042 1992      0:06:42     1          \n",
       "365043 1992      0:08:12     1          \n",
       "365044 1985      0:02:03     1          \n",
       "365045 1972      0:10:35     1          \n",
       "365046 1993      0:08:52     1          \n",
       "365047 1988      0:12:21     1          \n",
       "365048 1992      0:12:19     1          \n",
       "365049 1985      0:09:50     1          \n",
       "365050 1957      0:11:14     1          \n",
       "365051 1994      0:09:12     1          \n",
       "365052 1991      0:04:34     1          \n",
       "365053 1980      0:05:45     1          \n",
       "365054 1988      0:11:58     1          \n",
       "365055 1987      0:07:36     1          \n",
       "365056 1983      0:04:05     1          \n",
       "365057 1984      0:11:24     1          \n",
       "365058 1970      0:03:59     1          \n",
       "365059   NA      0:04:56     1          \n",
       "365060 1972      0:10:13     1          \n",
       "365061   NA      0:04:26     1          \n",
       "365062 1984      0:03:59     1          \n",
       "365063 1971      0:01:53     1          \n",
       "365064 1985      0:04:30     1          \n",
       "365065 1993      0:12:37     2          \n",
       "365066 1992      0:05:32     1          \n",
       "365067 1984      0:14:06     2          \n",
       "365068 1969      0:02:58     1          \n",
       "365069 1998      0:07:28     2          "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spc_tbl_ [365,069 Ã 14] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : num [1:365069] 21742443 21742444 21742445 21742446 21742447 ...\n",
      " $ started_at        : POSIXct[1:365069], format: \"2019-01-01 00:04:37\" \"2019-01-01 00:08:13\" ...\n",
      " $ ended_at          : POSIXct[1:365069], format: \"2019-01-01 00:11:07\" \"2019-01-01 00:15:34\" ...\n",
      " $ rideable_type     : num [1:365069] 2167 4386 1524 252 1170 ...\n",
      " $ tripduration      : num [1:365069] 390 441 829 1783 364 ...\n",
      " $ start_station_id  : num [1:365069] 199 44 15 123 173 98 98 211 150 268 ...\n",
      " $ start_station_name: chr [1:365069] \"Wabash Ave & Grand Ave\" \"State St & Randolph St\" \"Racine Ave & 18th St\" \"California Ave & Milwaukee Ave\" ...\n",
      " $ end_station_id    : num [1:365069] 84 624 644 176 35 49 49 142 148 141 ...\n",
      " $ end_station_name  : chr [1:365069] \"Milwaukee Ave & Grand Ave\" \"Dearborn St & Van Buren St (*)\" \"Western Ave & Fillmore St (*)\" \"Clark St & Elm St\" ...\n",
      " $ member_casual     : chr [1:365069] \"Subscriber\" \"Subscriber\" \"Subscriber\" \"Subscriber\" ...\n",
      " $ gender            : chr [1:365069] \"Male\" \"Female\" \"Female\" \"Male\" ...\n",
      " $ birthyear         : num [1:365069] 1989 1990 1994 1993 1994 ...\n",
      " $ ride_length       : chr [1:365069] \"0:06:30\" \"0:07:21\" \"0:13:49\" \"0:29:43\" ...\n",
      " $ day_of_week       : num [1:365069] 3 3 3 3 3 3 3 3 3 3 ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   trip_id = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_time = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   end_time = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   bikeid = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   tripduration = \u001b[32mcol_number()\u001b[39m,\n",
      "  ..   from_station_id = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   from_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   to_station_id = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   to_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   usertype = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   gender = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   birthyear = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   ride_length = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   day_of_week = \u001b[32mcol_double()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n",
      "spc_tbl_ [426,887 Ã 15] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:426887] \"1068AB1B8F12FE23\" \"DCF74A0EB3284B3E\" \"4DE50A4FC7687A0D\" \"1C78B5F337CBFC93\" ...\n",
      " $ rideable_type     : chr [1:426887] \"docked_bike\" \"docked_bike\" \"docked_bike\" \"docked_bike\" ...\n",
      " $ started_at        : POSIXct[1:426887], format: \"2020-01-01 00:04:44\" \"2020-01-01 00:10:37\" ...\n",
      " $ ended_at          : POSIXct[1:426887], format: \"2020-01-01 00:17:08\" \"2020-01-01 00:10:54\" ...\n",
      " $ start_station_name: chr [1:426887] \"Sheffield Ave & Wellington Ave\" \"Daley Center Plaza\" \"Daley Center Plaza\" \"Sheridan Rd & Irving Park Rd\" ...\n",
      " $ start_station_id  : num [1:426887] 115 81 81 240 626 326 326 326 347 90 ...\n",
      " $ end_station_name  : chr [1:426887] \"Ashland Ave & Belle Plaine Ave\" \"Daley Center Plaza\" \"Dearborn St & Van Buren St\" \"Broadway & Sheridan Rd\" ...\n",
      " $ end_station_id    : num [1:426887] 246 81 624 256 59 318 460 460 153 22 ...\n",
      " $ start_lat         : num [1:426887] 419 419 419 420 419 ...\n",
      " $ start_lng         : num [1:426887] -877 -876 -876 -877 -876 ...\n",
      " $ end_lat           : num [1:426887] 420 419 419 420 419 ...\n",
      " $ end_lng           : num [1:426887] -876.7 -876.3 -876.3 -87.7 -87.6 ...\n",
      " $ member_casual     : chr [1:426887] \"casual\" \"member\" \"member\" \"member\" ...\n",
      " $ ride_length       : chr [1:426887] \"0:12:24\" \"0:00:17\" \"0:04:18\" \"0:01:48\" ...\n",
      " $ day_of_week       : num [1:426887] 4 4 4 4 4 4 4 4 4 4 ...\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lat = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_lng = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   ride_length = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   day_of_week = \u001b[32mcol_double()\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n"
     ]
    }
   ],
   "source": [
    "#Data Validation\n",
    "# Check column names across all the original files\n",
    "colnames(q1_2019)\n",
    "colnames(q1_2020)\n",
    "# Rename columns  to make them consistent with q1_2020\n",
    "(q1_2019 <- rename(q1_2019\n",
    "                   ,ride_id = trip_id\n",
    "                   ,rideable_type = bikeid\n",
    "                   ,started_at = start_time\n",
    "                   ,ended_at = end_time\n",
    "                   ,start_station_name = from_station_name\n",
    "                   ,start_station_id = from_station_id\n",
    "                   ,end_station_name = to_station_name\n",
    "                   ,end_station_id = to_station_id\n",
    "                   ,member_casual = usertype))\n",
    "# Inspect the dataframes and look for incongruencies\n",
    "str(q1_2019)\n",
    "str(q1_2020)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae3ee3e2",
   "metadata": {
    "papermill": {
     "duration": 0.023066,
     "end_time": "2024-04-29T07:10:22.835272",
     "exception": false,
     "start_time": "2024-04-29T07:10:22.812206",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   In the next step, the data frames were **aggregated** into a **single data frame**. This involved **combining the data from each of the monthly files** into a cohesive whole, allowing for more efficient and comprehensive analysis of the data. **Aggregating the data in this way also made it easier to identify trends and patterns across the entire dataset**, rather than having to analyze the data for each quarter separately."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "34b48fb3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:22.915462Z",
     "iopub.status.busy": "2024-04-29T07:10:22.883486Z",
     "iopub.status.idle": "2024-04-29T07:10:24.982205Z",
     "shell.execute_reply": "2024-04-29T07:10:24.980181Z"
    },
    "papermill": {
     "duration": 2.127685,
     "end_time": "2024-04-29T07:10:24.985815",
     "exception": false,
     "start_time": "2024-04-29T07:10:22.858130",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Convert ride_id and rideable_type to character so that they can stack correctly\n",
    "q1_2019 <-  mutate(q1_2019, ride_id = as.character(ride_id)\n",
    "                   ,rideable_type = as.character(rideable_type)) \n",
    "\n",
    "# Stack individual quarter's data frames into one big data frame\n",
    "all_trips <- bind_rows(q1_2019, q1_2020)\n",
    "\n",
    "# Remove lat, long, birthyear, and gender fields as this data was dropped beginning in 2020\n",
    "all_trips <- all_trips %>%  \n",
    "  select(-c(start_lat, start_lng, end_lat, end_lng, birthyear, gender,  \"tripduration\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9202ccf1",
   "metadata": {
    "papermill": {
     "duration": 0.023443,
     "end_time": "2024-04-29T07:10:25.033218",
     "exception": false,
     "start_time": "2024-04-29T07:10:25.009775",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   After aggregating into a single data frame, the **resulting combined dataset** was **written to a new file** and **saved to the hard drive**. This allows for **easier access** to the data for further analysis and visualization, and ensures that the data is **available for future reference**. Saving the data to a file on the hard drive also ensures that it is **backed up** and **protected against accidental loss or damage**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "daa3a802",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:25.156493Z",
     "iopub.status.busy": "2024-04-29T07:10:25.081862Z",
     "iopub.status.idle": "2024-04-29T07:10:40.266690Z",
     "shell.execute_reply": "2024-04-29T07:10:40.264777Z"
    },
    "papermill": {
     "duration": 15.214077,
     "end_time": "2024-04-29T07:10:40.270542",
     "exception": false,
     "start_time": "2024-04-29T07:10:25.056465",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Save the combined files\n",
    "write.csv(all_trips,file = \"all_trips.csv\",row.names = FALSE)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "557ec4c1",
   "metadata": {
    "papermill": {
     "duration": 0.023457,
     "end_time": "2024-04-29T07:10:40.317262",
     "exception": false,
     "start_time": "2024-04-29T07:10:40.293805",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   After being saved to the hard drive, the data was once again **subjected to validation** in order to **ensure its accuracy, completeness, and consistency**. This process involved reviewing the data for **errors or inconsistencies, checking for missing or incomplete records**, and verifying that the data met the requirements and expectations of the analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3a154c5f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:40.368799Z",
     "iopub.status.busy": "2024-04-29T07:10:40.367033Z",
     "iopub.status.idle": "2024-04-29T07:10:43.714786Z",
     "shell.execute_reply": "2024-04-29T07:10:43.712787Z"
    },
    "papermill": {
     "duration": 3.376578,
     "end_time": "2024-04-29T07:10:43.717497",
     "exception": false,
     "start_time": "2024-04-29T07:10:40.340919",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'ride_id'</li><li>'started_at'</li><li>'ended_at'</li><li>'rideable_type'</li><li>'start_station_id'</li><li>'start_station_name'</li><li>'end_station_id'</li><li>'end_station_name'</li><li>'member_casual'</li><li>'ride_length'</li><li>'day_of_week'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'ride\\_id'\n",
       "\\item 'started\\_at'\n",
       "\\item 'ended\\_at'\n",
       "\\item 'rideable\\_type'\n",
       "\\item 'start\\_station\\_id'\n",
       "\\item 'start\\_station\\_name'\n",
       "\\item 'end\\_station\\_id'\n",
       "\\item 'end\\_station\\_name'\n",
       "\\item 'member\\_casual'\n",
       "\\item 'ride\\_length'\n",
       "\\item 'day\\_of\\_week'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'ride_id'\n",
       "2. 'started_at'\n",
       "3. 'ended_at'\n",
       "4. 'rideable_type'\n",
       "5. 'start_station_id'\n",
       "6. 'start_station_name'\n",
       "7. 'end_station_id'\n",
       "8. 'end_station_name'\n",
       "9. 'member_casual'\n",
       "10. 'ride_length'\n",
       "11. 'day_of_week'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       " [1] \"ride_id\"            \"started_at\"         \"ended_at\"          \n",
       " [4] \"rideable_type\"      \"start_station_id\"   \"start_station_name\"\n",
       " [7] \"end_station_id\"     \"end_station_name\"   \"member_casual\"     \n",
       "[10] \"ride_length\"        \"day_of_week\"       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "791956"
      ],
      "text/latex": [
       "791956"
      ],
      "text/markdown": [
       "791956"
      ],
      "text/plain": [
       "[1] 791956"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>791956</li><li>11</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 791956\n",
       "\\item 11\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 791956\n",
       "2. 11\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "[1] 791956     11"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 6 Ã 11</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>ride_id</th><th scope=col>started_at</th><th scope=col>ended_at</th><th scope=col>rideable_type</th><th scope=col>start_station_id</th><th scope=col>start_station_name</th><th scope=col>end_station_id</th><th scope=col>end_station_name</th><th scope=col>member_casual</th><th scope=col>ride_length</th><th scope=col>day_of_week</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dttm&gt;</th><th scope=col>&lt;dttm&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>21742443</td><td>2019-01-01 00:04:37</td><td>2019-01-01 00:11:07</td><td>2167</td><td>199</td><td><span style=white-space:pre-wrap>Wabash Ave &amp; Grand Ave             </span></td><td> 84</td><td><span style=white-space:pre-wrap>Milwaukee Ave &amp; Grand Ave     </span></td><td>Subscriber</td><td>0:06:30</td><td>3</td></tr>\n",
       "\t<tr><td>21742444</td><td>2019-01-01 00:08:13</td><td>2019-01-01 00:15:34</td><td>4386</td><td> 44</td><td><span style=white-space:pre-wrap>State St &amp; Randolph St             </span></td><td>624</td><td>Dearborn St &amp; Van Buren St (*)</td><td>Subscriber</td><td>0:07:21</td><td>3</td></tr>\n",
       "\t<tr><td>21742445</td><td>2019-01-01 00:13:23</td><td>2019-01-01 00:27:12</td><td>1524</td><td> 15</td><td><span style=white-space:pre-wrap>Racine Ave &amp; 18th St               </span></td><td>644</td><td>Western Ave &amp; Fillmore St (*) </td><td>Subscriber</td><td>0:13:49</td><td>3</td></tr>\n",
       "\t<tr><td>21742446</td><td>2019-01-01 00:13:45</td><td>2019-01-01 00:43:28</td><td>252 </td><td>123</td><td><span style=white-space:pre-wrap>California Ave &amp; Milwaukee Ave     </span></td><td>176</td><td><span style=white-space:pre-wrap>Clark St &amp; Elm St             </span></td><td>Subscriber</td><td>0:29:43</td><td>3</td></tr>\n",
       "\t<tr><td>21742447</td><td>2019-01-01 00:14:52</td><td>2019-01-01 00:20:56</td><td>1170</td><td>173</td><td>Mies van der Rohe Way &amp; Chicago Ave</td><td> 35</td><td><span style=white-space:pre-wrap>Streeter Dr &amp; Grand Ave       </span></td><td>Subscriber</td><td>0:06:04</td><td>3</td></tr>\n",
       "\t<tr><td>21742448</td><td>2019-01-01 00:15:33</td><td>2019-01-01 00:19:09</td><td>2437</td><td> 98</td><td><span style=white-space:pre-wrap>LaSalle St &amp; Washington St         </span></td><td> 49</td><td><span style=white-space:pre-wrap>Dearborn St &amp; Monroe St       </span></td><td>Subscriber</td><td>0:03:36</td><td>3</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 6 Ã 11\n",
       "\\begin{tabular}{lllllllllll}\n",
       " ride\\_id & started\\_at & ended\\_at & rideable\\_type & start\\_station\\_id & start\\_station\\_name & end\\_station\\_id & end\\_station\\_name & member\\_casual & ride\\_length & day\\_of\\_week\\\\\n",
       " <chr> & <dttm> & <dttm> & <chr> & <dbl> & <chr> & <dbl> & <chr> & <chr> & <chr> & <dbl>\\\\\n",
       "\\hline\n",
       "\t 21742443 & 2019-01-01 00:04:37 & 2019-01-01 00:11:07 & 2167 & 199 & Wabash Ave \\& Grand Ave              &  84 & Milwaukee Ave \\& Grand Ave      & Subscriber & 0:06:30 & 3\\\\\n",
       "\t 21742444 & 2019-01-01 00:08:13 & 2019-01-01 00:15:34 & 4386 &  44 & State St \\& Randolph St              & 624 & Dearborn St \\& Van Buren St (*) & Subscriber & 0:07:21 & 3\\\\\n",
       "\t 21742445 & 2019-01-01 00:13:23 & 2019-01-01 00:27:12 & 1524 &  15 & Racine Ave \\& 18th St                & 644 & Western Ave \\& Fillmore St (*)  & Subscriber & 0:13:49 & 3\\\\\n",
       "\t 21742446 & 2019-01-01 00:13:45 & 2019-01-01 00:43:28 & 252  & 123 & California Ave \\& Milwaukee Ave      & 176 & Clark St \\& Elm St              & Subscriber & 0:29:43 & 3\\\\\n",
       "\t 21742447 & 2019-01-01 00:14:52 & 2019-01-01 00:20:56 & 1170 & 173 & Mies van der Rohe Way \\& Chicago Ave &  35 & Streeter Dr \\& Grand Ave        & Subscriber & 0:06:04 & 3\\\\\n",
       "\t 21742448 & 2019-01-01 00:15:33 & 2019-01-01 00:19:09 & 2437 &  98 & LaSalle St \\& Washington St          &  49 & Dearborn St \\& Monroe St        & Subscriber & 0:03:36 & 3\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 6 Ã 11\n",
       "\n",
       "| ride_id &lt;chr&gt; | started_at &lt;dttm&gt; | ended_at &lt;dttm&gt; | rideable_type &lt;chr&gt; | start_station_id &lt;dbl&gt; | start_station_name &lt;chr&gt; | end_station_id &lt;dbl&gt; | end_station_name &lt;chr&gt; | member_casual &lt;chr&gt; | ride_length &lt;chr&gt; | day_of_week &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|---|\n",
       "| 21742443 | 2019-01-01 00:04:37 | 2019-01-01 00:11:07 | 2167 | 199 | Wabash Ave &amp; Grand Ave              |  84 | Milwaukee Ave &amp; Grand Ave      | Subscriber | 0:06:30 | 3 |\n",
       "| 21742444 | 2019-01-01 00:08:13 | 2019-01-01 00:15:34 | 4386 |  44 | State St &amp; Randolph St              | 624 | Dearborn St &amp; Van Buren St (*) | Subscriber | 0:07:21 | 3 |\n",
       "| 21742445 | 2019-01-01 00:13:23 | 2019-01-01 00:27:12 | 1524 |  15 | Racine Ave &amp; 18th St                | 644 | Western Ave &amp; Fillmore St (*)  | Subscriber | 0:13:49 | 3 |\n",
       "| 21742446 | 2019-01-01 00:13:45 | 2019-01-01 00:43:28 | 252  | 123 | California Ave &amp; Milwaukee Ave      | 176 | Clark St &amp; Elm St              | Subscriber | 0:29:43 | 3 |\n",
       "| 21742447 | 2019-01-01 00:14:52 | 2019-01-01 00:20:56 | 1170 | 173 | Mies van der Rohe Way &amp; Chicago Ave |  35 | Streeter Dr &amp; Grand Ave        | Subscriber | 0:06:04 | 3 |\n",
       "| 21742448 | 2019-01-01 00:15:33 | 2019-01-01 00:19:09 | 2437 |  98 | LaSalle St &amp; Washington St          |  49 | Dearborn St &amp; Monroe St        | Subscriber | 0:03:36 | 3 |\n",
       "\n"
      ],
      "text/plain": [
       "  ride_id  started_at          ended_at            rideable_type\n",
       "1 21742443 2019-01-01 00:04:37 2019-01-01 00:11:07 2167         \n",
       "2 21742444 2019-01-01 00:08:13 2019-01-01 00:15:34 4386         \n",
       "3 21742445 2019-01-01 00:13:23 2019-01-01 00:27:12 1524         \n",
       "4 21742446 2019-01-01 00:13:45 2019-01-01 00:43:28 252          \n",
       "5 21742447 2019-01-01 00:14:52 2019-01-01 00:20:56 1170         \n",
       "6 21742448 2019-01-01 00:15:33 2019-01-01 00:19:09 2437         \n",
       "  start_station_id start_station_name                  end_station_id\n",
       "1 199              Wabash Ave & Grand Ave               84           \n",
       "2  44              State St & Randolph St              624           \n",
       "3  15              Racine Ave & 18th St                644           \n",
       "4 123              California Ave & Milwaukee Ave      176           \n",
       "5 173              Mies van der Rohe Way & Chicago Ave  35           \n",
       "6  98              LaSalle St & Washington St           49           \n",
       "  end_station_name               member_casual ride_length day_of_week\n",
       "1 Milwaukee Ave & Grand Ave      Subscriber    0:06:30     3          \n",
       "2 Dearborn St & Van Buren St (*) Subscriber    0:07:21     3          \n",
       "3 Western Ave & Fillmore St (*)  Subscriber    0:13:49     3          \n",
       "4 Clark St & Elm St              Subscriber    0:29:43     3          \n",
       "5 Streeter Dr & Grand Ave        Subscriber    0:06:04     3          \n",
       "6 Dearborn St & Monroe St        Subscriber    0:03:36     3          "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tibble [791,956 Ã 11] (S3: tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:791956] \"21742443\" \"21742444\" \"21742445\" \"21742446\" ...\n",
      " $ started_at        : POSIXct[1:791956], format: \"2019-01-01 00:04:37\" \"2019-01-01 00:08:13\" ...\n",
      " $ ended_at          : POSIXct[1:791956], format: \"2019-01-01 00:11:07\" \"2019-01-01 00:15:34\" ...\n",
      " $ rideable_type     : chr [1:791956] \"2167\" \"4386\" \"1524\" \"252\" ...\n",
      " $ start_station_id  : num [1:791956] 199 44 15 123 173 98 98 211 150 268 ...\n",
      " $ start_station_name: chr [1:791956] \"Wabash Ave & Grand Ave\" \"State St & Randolph St\" \"Racine Ave & 18th St\" \"California Ave & Milwaukee Ave\" ...\n",
      " $ end_station_id    : num [1:791956] 84 624 644 176 35 49 49 142 148 141 ...\n",
      " $ end_station_name  : chr [1:791956] \"Milwaukee Ave & Grand Ave\" \"Dearborn St & Van Buren St (*)\" \"Western Ave & Fillmore St (*)\" \"Clark St & Elm St\" ...\n",
      " $ member_casual     : chr [1:791956] \"Subscriber\" \"Subscriber\" \"Subscriber\" \"Subscriber\" ...\n",
      " $ ride_length       : chr [1:791956] \"0:06:30\" \"0:07:21\" \"0:13:49\" \"0:29:43\" ...\n",
      " $ day_of_week       : num [1:791956] 3 3 3 3 3 3 3 3 3 3 ...\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "   ride_id            started_at                     ended_at                  \n",
       " Length:791956      Min.   :2019-01-01 00:04:37   Min.   :2019-01-01 00:11:07  \n",
       " Class :character   1st Qu.:2019-02-28 17:04:04   1st Qu.:2019-02-28 17:15:58  \n",
       " Mode  :character   Median :2020-01-07 12:48:50   Median :2020-01-07 13:02:50  \n",
       "                    Mean   :2019-09-01 11:58:08   Mean   :2019-09-01 12:17:52  \n",
       "                    3rd Qu.:2020-02-19 19:31:54   3rd Qu.:2020-02-19 19:51:54  \n",
       "                    Max.   :2020-03-31 23:51:34   Max.   :2020-05-19 20:10:34  \n",
       "                                                                               \n",
       " rideable_type      start_station_id start_station_name end_station_id \n",
       " Length:791956      Min.   :  2.0    Length:791956      Min.   :  2.0  \n",
       " Class :character   1st Qu.: 77.0    Class :character   1st Qu.: 77.0  \n",
       " Mode  :character   Median :174.0    Mode  :character   Median :174.0  \n",
       "                    Mean   :204.4                       Mean   :204.4  \n",
       "                    3rd Qu.:291.0                       3rd Qu.:291.0  \n",
       "                    Max.   :675.0                       Max.   :675.0  \n",
       "                                                        NA's   :1      \n",
       " end_station_name   member_casual      ride_length         day_of_week  \n",
       " Length:791956      Length:791956      Length:791956      Min.   :1.00  \n",
       " Class :character   Class :character   Class :character   1st Qu.:3.00  \n",
       " Mode  :character   Mode  :character   Mode  :character   Median :4.00  \n",
       "                                                          Mean   :3.99  \n",
       "                                                          3rd Qu.:5.00  \n",
       "                                                          Max.   :7.00  \n",
       "                                                                        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Final data validation\n",
    "colnames(all_trips)\n",
    "nrow(all_trips)\n",
    "dim(all_trips)  \n",
    "head(all_trips) \n",
    "str(all_trips)  \n",
    "summary(all_trips)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f9cb403",
   "metadata": {
    "papermill": {
     "duration": 0.024455,
     "end_time": "2024-04-29T07:10:43.766468",
     "exception": false,
     "start_time": "2024-04-29T07:10:43.742013",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 6. **Phase 4: Data Cleaning**\n",
    "\n",
    "In this stage, I performed data cleaning to **identify and correct or remove errors or inconsistencies from the data**. This will involve a variety of techniques, such as correcting errors in data entry, **removing duplicates** or **incorrect records**, and **standardizing data** **formats** to ensure compatibility with analysis tools. Data cleaning is an important step in the data analysis process, as it helps to ensure that the **data is accurate and reliable**, and that the results of the analysis are **meaningful and useful**.\n",
    "\n",
    "-   Before beginning the data cleaning process, it is necessary to check the **total number of rows with missing or \"NA\" values**. Understanding the extent of missing or incomplete data helps to inform decisions about how to handle these values, such as whether to **drop them from the dataset or impute them with estimates or substitute values.**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b86eb8e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:43.821688Z",
     "iopub.status.busy": "2024-04-29T07:10:43.820008Z",
     "iopub.status.idle": "2024-04-29T07:10:44.099528Z",
     "shell.execute_reply": "2024-04-29T07:10:44.096951Z"
    },
    "papermill": {
     "duration": 0.310951,
     "end_time": "2024-04-29T07:10:44.102774",
     "exception": false,
     "start_time": "2024-04-29T07:10:43.791823",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".dl-inline {width: auto; margin:0; padding: 0}\n",
       ".dl-inline>dt, .dl-inline>dd {float: none; width: auto; display: inline-block}\n",
       ".dl-inline>dt::after {content: \":\\0020\"; padding-right: .5ex}\n",
       ".dl-inline>dt:not(:first-of-type) {padding-left: .5ex}\n",
       "</style><dl class=dl-inline><dt>ride_id</dt><dd>0</dd><dt>started_at</dt><dd>0</dd><dt>ended_at</dt><dd>0</dd><dt>rideable_type</dt><dd>0</dd><dt>start_station_id</dt><dd>0</dd><dt>start_station_name</dt><dd>0</dd><dt>end_station_id</dt><dd>1</dd><dt>end_station_name</dt><dd>1</dd><dt>member_casual</dt><dd>0</dd><dt>ride_length</dt><dd>0</dd><dt>day_of_week</dt><dd>0</dd></dl>\n"
      ],
      "text/latex": [
       "\\begin{description*}\n",
       "\\item[ride\\textbackslash{}\\_id] 0\n",
       "\\item[started\\textbackslash{}\\_at] 0\n",
       "\\item[ended\\textbackslash{}\\_at] 0\n",
       "\\item[rideable\\textbackslash{}\\_type] 0\n",
       "\\item[start\\textbackslash{}\\_station\\textbackslash{}\\_id] 0\n",
       "\\item[start\\textbackslash{}\\_station\\textbackslash{}\\_name] 0\n",
       "\\item[end\\textbackslash{}\\_station\\textbackslash{}\\_id] 1\n",
       "\\item[end\\textbackslash{}\\_station\\textbackslash{}\\_name] 1\n",
       "\\item[member\\textbackslash{}\\_casual] 0\n",
       "\\item[ride\\textbackslash{}\\_length] 0\n",
       "\\item[day\\textbackslash{}\\_of\\textbackslash{}\\_week] 0\n",
       "\\end{description*}\n"
      ],
      "text/markdown": [
       "ride_id\n",
       ":   0started_at\n",
       ":   0ended_at\n",
       ":   0rideable_type\n",
       ":   0start_station_id\n",
       ":   0start_station_name\n",
       ":   0end_station_id\n",
       ":   1end_station_name\n",
       ":   1member_casual\n",
       ":   0ride_length\n",
       ":   0day_of_week\n",
       ":   0\n",
       "\n"
      ],
      "text/plain": [
       "           ride_id         started_at           ended_at      rideable_type \n",
       "                 0                  0                  0                  0 \n",
       "  start_station_id start_station_name     end_station_id   end_station_name \n",
       "                 0                  0                  1                  1 \n",
       "     member_casual        ride_length        day_of_week \n",
       "                 0                  0                  0 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Count rows with \"na\" values\n",
    "colSums(is.na(all_trips))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c57b4e8",
   "metadata": {
    "papermill": {
     "duration": 0.025296,
     "end_time": "2024-04-29T07:10:44.152746",
     "exception": false,
     "start_time": "2024-04-29T07:10:44.127450",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   To ensure the integrity and reliability of the data, it is necessary to remove a certain percentage of missing or \"NA\" values. In this case, **the missing values will be removed and saved into a new data frame**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6864fbf5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:44.209361Z",
     "iopub.status.busy": "2024-04-29T07:10:44.207473Z",
     "iopub.status.idle": "2024-04-29T07:10:44.319540Z",
     "shell.execute_reply": "2024-04-29T07:10:44.316486Z"
    },
    "papermill": {
     "duration": 0.145502,
     "end_time": "2024-04-29T07:10:44.323970",
     "exception": false,
     "start_time": "2024-04-29T07:10:44.178468",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Remove missing\n",
    "clean_trip_final <- all_trips[complete.cases(all_trips), ]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d575a619",
   "metadata": {
    "papermill": {
     "duration": 0.026421,
     "end_time": "2024-04-29T07:10:44.414587",
     "exception": false,
     "start_time": "2024-04-29T07:10:44.388166",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   **Removing duplicates** helps to ensure that the data is as **complete and accurate** as possible, and that the results of the analysis are **not unduly influenced by duplicate or erroneous data.**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ef717cd2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:44.468396Z",
     "iopub.status.busy": "2024-04-29T07:10:44.466658Z",
     "iopub.status.idle": "2024-04-29T07:10:45.340693Z",
     "shell.execute_reply": "2024-04-29T07:10:45.338668Z"
    },
    "papermill": {
     "duration": 0.904718,
     "end_time": "2024-04-29T07:10:45.344110",
     "exception": false,
     "start_time": "2024-04-29T07:10:44.439392",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Remove duplicates\n",
    "clean_trip_final <- distinct(clean_trip_final)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df81bb00",
   "metadata": {
    "papermill": {
     "duration": 0.02569,
     "end_time": "2024-04-29T07:10:45.395032",
     "exception": false,
     "start_time": "2024-04-29T07:10:45.369342",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   To further refine and clean the data, it is necessary to **remove empty, \"NA\", and missing values**. This can be achieved through the use of functions such as **drop_na()**, **remove_empty()**, and **remove_missing()**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f6d9dc6a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:45.450431Z",
     "iopub.status.busy": "2024-04-29T07:10:45.448712Z",
     "iopub.status.idle": "2024-04-29T07:10:46.391306Z",
     "shell.execute_reply": "2024-04-29T07:10:46.389073Z"
    },
    "papermill": {
     "duration": 0.973779,
     "end_time": "2024-04-29T07:10:46.394369",
     "exception": false,
     "start_time": "2024-04-29T07:10:45.420590",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Remove na\n",
    "clean_trip_final <- drop_na(clean_trip_final)\n",
    "clean_trip_final <- remove_missing(clean_trip_final)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf3ae82d",
   "metadata": {
    "papermill": {
     "duration": 0.025995,
     "end_time": "2024-04-29T07:10:46.447856",
     "exception": false,
     "start_time": "2024-04-29T07:10:46.421861",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   Now, it is necessary to filter out records where the value of the **\"started_at\"** variable is **greater than** the value of the **\"ended_at\"** variable. This can help to ensure that the data is **accurate and meaningful**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9d7e48ba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:46.504521Z",
     "iopub.status.busy": "2024-04-29T07:10:46.502813Z",
     "iopub.status.idle": "2024-04-29T07:10:46.686116Z",
     "shell.execute_reply": "2024-04-29T07:10:46.684110Z"
    },
    "papermill": {
     "duration": 0.215236,
     "end_time": "2024-04-29T07:10:46.689112",
     "exception": false,
     "start_time": "2024-04-29T07:10:46.473876",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Remove data with greater start_at than end_at\n",
    "clean_trip_final<- clean_trip_final %>% \n",
    "  filter(started_at < ended_at)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d64cf302",
   "metadata": {
    "papermill": {
     "duration": 0.025143,
     "end_time": "2024-04-29T07:10:46.739182",
     "exception": false,
     "start_time": "2024-04-29T07:10:46.714039",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-    In the \"member_casual\" column, there are two names for members (\"member\" and \"Subscriber\") and two names for casual riders (\"Customer\" and \"casual\"). I will consolidate that from four to two labels."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "38ce1478",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:46.792517Z",
     "iopub.status.busy": "2024-04-29T07:10:46.790944Z",
     "iopub.status.idle": "2024-04-29T07:10:47.065116Z",
     "shell.execute_reply": "2024-04-29T07:10:47.063113Z"
    },
    "papermill": {
     "duration": 0.303932,
     "end_time": "2024-04-29T07:10:47.067821",
     "exception": false,
     "start_time": "2024-04-29T07:10:46.763889",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "    casual   Customer     member Subscriber \n",
       "     48270      23163     378407     341906 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "\n",
       "casual member \n",
       " 71433 720313 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Count the unique values in the member_casual column\n",
    "table(clean_trip_final$member_casual)\n",
    "# Reassign to the desired values (we will go with the current 2020 labels)\n",
    "clean_trip_final <- clean_trip_final %>% \n",
    "  mutate(member_casual = recode(member_casual\n",
    "                                ,\"Subscriber\" = \"member\"\n",
    "                                ,\"Customer\" = \"casual\"))\n",
    "# Recheck the unique values in the member_casual column\n",
    "table(clean_trip_final$member_casual)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "784db8b6",
   "metadata": {
    "papermill": {
     "duration": 0.025252,
     "end_time": "2024-04-29T07:10:47.118618",
     "exception": false,
     "start_time": "2024-04-29T07:10:47.093366",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   To facilitate more **granular analysis** of the data, additional columns were **created** for the **date**, **month, day, year, and day of the week** based on the **\"started_at\"** column. This allowed for more **detailed analysis of the data by specific dates, days, or months,** and helped to identify trends and patterns that may not have been apparent when analyzing the data at a more general level."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "68fa2342",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:47.177963Z",
     "iopub.status.busy": "2024-04-29T07:10:47.175905Z",
     "iopub.status.idle": "2024-04-29T07:10:48.471170Z",
     "shell.execute_reply": "2024-04-29T07:10:48.469219Z"
    },
    "papermill": {
     "duration": 1.32902,
     "end_time": "2024-04-29T07:10:48.473910",
     "exception": false,
     "start_time": "2024-04-29T07:10:47.144890",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Separate date in date, day, month, year for better analysis\n",
    "clean_trip_final$date <- as.Date(clean_trip_final$started_at)\n",
    "clean_trip_final$week_day <- format(as.Date(clean_trip_final$date), \"%A\")\n",
    "clean_trip_final$month <- format(as.Date(clean_trip_final$date), \"%m\")\n",
    "clean_trip_final$year <- format(clean_trip_final$date, \"%Y\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86e199b3",
   "metadata": {
    "papermill": {
     "duration": 0.025698,
     "end_time": "2024-04-29T07:10:48.525547",
     "exception": false,
     "start_time": "2024-04-29T07:10:48.499849",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   **Similarly a new column was created just for the time** **in \"%H:%M\" format.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3c91de15",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:48.580081Z",
     "iopub.status.busy": "2024-04-29T07:10:48.578358Z",
     "iopub.status.idle": "2024-04-29T07:10:48.884127Z",
     "shell.execute_reply": "2024-04-29T07:10:48.882129Z"
    },
    "papermill": {
     "duration": 0.336047,
     "end_time": "2024-04-29T07:10:48.886833",
     "exception": false,
     "start_time": "2024-04-29T07:10:48.550786",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Separate column for time\n",
    "clean_trip_final$time <- as.POSIXct(clean_trip_final$started_at, format = \"%Y-%m-%d %H:%M:%S\")\n",
    "clean_trip_final$time <- format(clean_trip_final$time, format = \"%H:%M\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24c5635f",
   "metadata": {
    "papermill": {
     "duration": 0.025482,
     "end_time": "2024-04-29T07:10:48.937913",
     "exception": false,
     "start_time": "2024-04-29T07:10:48.912431",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   To gain a better understanding of the **duration of rides**, a **column was created** to calculate the duration of rides based on the **start and end time of each ride**. This allows for more detailed analysis of **ride duration's**, and can help to **identify trends and patterns** in the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "90d3d640",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:48.992701Z",
     "iopub.status.busy": "2024-04-29T07:10:48.990991Z",
     "iopub.status.idle": "2024-04-29T07:10:49.210841Z",
     "shell.execute_reply": "2024-04-29T07:10:49.208956Z"
    },
    "papermill": {
     "duration": 0.250102,
     "end_time": "2024-04-29T07:10:49.213401",
     "exception": false,
     "start_time": "2024-04-29T07:10:48.963299",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "FALSE"
      ],
      "text/latex": [
       "FALSE"
      ],
      "text/markdown": [
       "FALSE"
      ],
      "text/plain": [
       "[1] FALSE"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Warning message in eval(expr, envir, enclos):\n",
      "âNAs introduced by coercionâ\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "TRUE"
      ],
      "text/latex": [
       "TRUE"
      ],
      "text/markdown": [
       "TRUE"
      ],
      "text/plain": [
       "[1] TRUE"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Add ride length column\n",
    "clean_trip_final$ride_length <- difftime(clean_trip_final$ended_at, clean_trip_final$started_at, units = \"mins\")\n",
    "# Convert \"ride_length\" from Factor to numeric so we can run calculations on the data\n",
    "is.factor(all_trips$ride_length)\n",
    "all_trips$ride_length <- as.numeric(as.character(all_trips$ride_length))\n",
    "is.numeric(all_trips$ride_length)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "94611a82",
   "metadata": {
    "papermill": {
     "duration": 0.026508,
     "end_time": "2024-04-29T07:10:49.265433",
     "exception": false,
     "start_time": "2024-04-29T07:10:49.238925",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   To ensure the accuracy and reliability of the data, it is necessary to **get rid of excessively long rides**, as these may be **considered stolen** by Cyclistic. Rides are typically **limited to a duration of one day or 1440 minutes, or 24 hours** also **data below 5 minutes** was removed due to it begin too small for affecting this analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "23410a9b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:49.340215Z",
     "iopub.status.busy": "2024-04-29T07:10:49.337447Z",
     "iopub.status.idle": "2024-04-29T07:10:49.947856Z",
     "shell.execute_reply": "2024-04-29T07:10:49.946002Z"
    },
    "papermill": {
     "duration": 0.652454,
     "end_time": "2024-04-29T07:10:49.951164",
     "exception": false,
     "start_time": "2024-04-29T07:10:49.298710",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Remove stolen bikes\n",
    "clean_trip_final <- clean_trip_final[!clean_trip_final$ride_length>1440,] \n",
    "clean_trip_final <- clean_trip_final[!clean_trip_final$ride_length<5,] "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36590150",
   "metadata": {
    "papermill": {
     "duration": 0.026102,
     "end_time": "2024-04-29T07:10:50.003043",
     "exception": false,
     "start_time": "2024-04-29T07:10:49.976941",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   Once all necessary data cleaning and preparation steps have been completed, **the data can be saved to the hard disk as a csv file**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3a920715",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:10:50.059726Z",
     "iopub.status.busy": "2024-04-29T07:10:50.057906Z",
     "iopub.status.idle": "2024-04-29T07:11:03.350848Z",
     "shell.execute_reply": "2024-04-29T07:11:03.348919Z"
    },
    "papermill": {
     "duration": 13.325896,
     "end_time": "2024-04-29T07:11:03.355053",
     "exception": false,
     "start_time": "2024-04-29T07:10:50.029157",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Save the cleaned data\n",
    "write.csv(clean_trip_final,file = \"clean_trip_final.csv\",row.names = FALSE)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d070ca4",
   "metadata": {
    "papermill": {
     "duration": 0.026332,
     "end_time": "2024-04-29T07:11:03.407184",
     "exception": false,
     "start_time": "2024-04-29T07:11:03.380852",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 7. **Phase 5: Data analysis**\n",
    "\n",
    "During the **Data analysis phase**, I **explored the data** in order to gain a **better understanding** of its **characteristics and patterns**. I **created charts, graphs, and other types of visualizations** to help visualize the data and identify trends. I also used **statistical techniques**, such as regression analysis, to identify relationships between different variables in the data. By analyzing the data in this way, I was able to **extract insights and knowledge** that could inform **business decisions and support decision making.**\n",
    "\n",
    "-   To begin the analysis phase, I **imported the cleaned** and prepared trip data into my analysis software. I conducted a thorough **validation of the data** to ensure that it was **accurate and free of errors.**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "13d6cfb6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:03.463540Z",
     "iopub.status.busy": "2024-04-29T07:11:03.461855Z",
     "iopub.status.idle": "2024-04-29T07:11:05.642100Z",
     "shell.execute_reply": "2024-04-29T07:11:05.639631Z"
    },
    "papermill": {
     "duration": 2.211678,
     "end_time": "2024-04-29T07:11:05.645514",
     "exception": false,
     "start_time": "2024-04-29T07:11:03.433836",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1mRows: \u001b[22m\u001b[34m624243\u001b[39m \u001b[1mColumns: \u001b[22m\u001b[34m16\u001b[39m\n",
      "\u001b[36mââ\u001b[39m \u001b[1mColumn specification\u001b[22m \u001b[36mââââââââââââââââââââââââââââââââââââââââââââââââââââââââ\u001b[39m\n",
      "\u001b[1mDelimiter:\u001b[22m \",\"\n",
      "\u001b[31mchr\u001b[39m  (7): ride_id, rideable_type, start_station_name, end_station_name, memb...\n",
      "\u001b[32mdbl\u001b[39m  (5): start_station_id, end_station_id, ride_length, day_of_week, year\n",
      "\u001b[34mdttm\u001b[39m (2): started_at, ended_at\n",
      "\u001b[34mdate\u001b[39m (1): date\n",
      "\u001b[34mtime\u001b[39m (1): time\n",
      "\n",
      "\u001b[36mâ¹\u001b[39m Use `spec()` to retrieve the full column specification for this data.\n",
      "\u001b[36mâ¹\u001b[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spc_tbl_ [624,243 Ã 16] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n",
      " $ ride_id           : chr [1:624243] \"21742443\" \"21742444\" \"21742445\" \"21742446\" ...\n",
      " $ started_at        : POSIXct[1:624243], format: \"2019-01-01 00:04:37\" \"2019-01-01 00:08:13\" ...\n",
      " $ ended_at          : POSIXct[1:624243], format: \"2019-01-01 00:11:07\" \"2019-01-01 00:15:34\" ...\n",
      " $ rideable_type     : chr [1:624243] \"2167\" \"4386\" \"1524\" \"252\" ...\n",
      " $ start_station_id  : num [1:624243] 199 44 15 123 173 150 268 299 204 90 ...\n",
      " $ start_station_name: chr [1:624243] \"Wabash Ave & Grand Ave\" \"State St & Randolph St\" \"Racine Ave & 18th St\" \"California Ave & Milwaukee Ave\" ...\n",
      " $ end_station_id    : num [1:624243] 84 624 644 176 35 148 141 295 420 255 ...\n",
      " $ end_station_name  : chr [1:624243] \"Milwaukee Ave & Grand Ave\" \"Dearborn St & Van Buren St (*)\" \"Western Ave & Fillmore St (*)\" \"Clark St & Elm St\" ...\n",
      " $ member_casual     : chr [1:624243] \"member\" \"member\" \"member\" \"member\" ...\n",
      " $ ride_length       : num [1:624243] 6.5 7.35 13.82 29.72 6.07 ...\n",
      " $ day_of_week       : num [1:624243] 3 3 3 3 3 3 3 3 3 3 ...\n",
      " $ date              : Date[1:624243], format: \"2019-01-01\" \"2019-01-01\" ...\n",
      " $ week_day          : chr [1:624243] \"Tuesday\" \"Tuesday\" \"Tuesday\" \"Tuesday\" ...\n",
      " $ month             : chr [1:624243] \"01\" \"01\" \"01\" \"01\" ...\n",
      " $ year              : num [1:624243] 2019 2019 2019 2019 2019 ...\n",
      " $ time              : 'hms' num [1:624243] 00:04:00 00:08:00 00:13:00 00:13:00 ...\n",
      "  ..- attr(*, \"units\")= chr \"secs\"\n",
      " - attr(*, \"spec\")=\n",
      "  .. cols(\n",
      "  ..   ride_id = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   started_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   ended_at = \u001b[34mcol_datetime(format = \"\")\u001b[39m,\n",
      "  ..   rideable_type = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   start_station_id = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   start_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   end_station_id = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   end_station_name = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   member_casual = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   ride_length = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   day_of_week = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   date = \u001b[34mcol_date(format = \"\")\u001b[39m,\n",
      "  ..   week_day = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   month = \u001b[31mcol_character()\u001b[39m,\n",
      "  ..   year = \u001b[32mcol_double()\u001b[39m,\n",
      "  ..   time = \u001b[34mcol_time(format = \"\")\u001b[39m\n",
      "  .. )\n",
      " - attr(*, \"problems\")=<externalptr> \n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>\n",
       ".list-inline {list-style: none; margin:0; padding: 0}\n",
       ".list-inline>li {display: inline-block}\n",
       ".list-inline>li:not(:last-child)::after {content: \"\\00b7\"; padding: 0 .5ex}\n",
       "</style>\n",
       "<ol class=list-inline><li>'ride_id'</li><li>'started_at'</li><li>'ended_at'</li><li>'rideable_type'</li><li>'start_station_id'</li><li>'start_station_name'</li><li>'end_station_id'</li><li>'end_station_name'</li><li>'member_casual'</li><li>'ride_length'</li><li>'day_of_week'</li><li>'date'</li><li>'week_day'</li><li>'month'</li><li>'year'</li><li>'time'</li></ol>\n"
      ],
      "text/latex": [
       "\\begin{enumerate*}\n",
       "\\item 'ride\\_id'\n",
       "\\item 'started\\_at'\n",
       "\\item 'ended\\_at'\n",
       "\\item 'rideable\\_type'\n",
       "\\item 'start\\_station\\_id'\n",
       "\\item 'start\\_station\\_name'\n",
       "\\item 'end\\_station\\_id'\n",
       "\\item 'end\\_station\\_name'\n",
       "\\item 'member\\_casual'\n",
       "\\item 'ride\\_length'\n",
       "\\item 'day\\_of\\_week'\n",
       "\\item 'date'\n",
       "\\item 'week\\_day'\n",
       "\\item 'month'\n",
       "\\item 'year'\n",
       "\\item 'time'\n",
       "\\end{enumerate*}\n"
      ],
      "text/markdown": [
       "1. 'ride_id'\n",
       "2. 'started_at'\n",
       "3. 'ended_at'\n",
       "4. 'rideable_type'\n",
       "5. 'start_station_id'\n",
       "6. 'start_station_name'\n",
       "7. 'end_station_id'\n",
       "8. 'end_station_name'\n",
       "9. 'member_casual'\n",
       "10. 'ride_length'\n",
       "11. 'day_of_week'\n",
       "12. 'date'\n",
       "13. 'week_day'\n",
       "14. 'month'\n",
       "15. 'year'\n",
       "16. 'time'\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       " [1] \"ride_id\"            \"started_at\"         \"ended_at\"          \n",
       " [4] \"rideable_type\"      \"start_station_id\"   \"start_station_name\"\n",
       " [7] \"end_station_id\"     \"end_station_name\"   \"member_casual\"     \n",
       "[10] \"ride_length\"        \"day_of_week\"        \"date\"              \n",
       "[13] \"week_day\"           \"month\"              \"year\"              \n",
       "[16] \"time\"              "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#import the cleaned data\n",
    "clean_trip_final <- read_csv(\"clean_trip_final.csv\")\n",
    "str(clean_trip_final)\n",
    "names(clean_trip_final)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41c602aa",
   "metadata": {
    "papermill": {
     "duration": 0.026599,
     "end_time": "2024-04-29T07:11:05.698639",
     "exception": false,
     "start_time": "2024-04-29T07:11:05.672040",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   To better facilitate my analysis, I **sorted week day** variables in the trip data in ascending order. This allowed me to **easily compare and analyze trends across different time periods and days of the week.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "2f868e76",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:05.756880Z",
     "iopub.status.busy": "2024-04-29T07:11:05.755167Z",
     "iopub.status.idle": "2024-04-29T07:11:06.075768Z",
     "shell.execute_reply": "2024-04-29T07:11:06.073833Z"
    },
    "papermill": {
     "duration": 0.352988,
     "end_time": "2024-04-29T07:11:06.079080",
     "exception": false,
     "start_time": "2024-04-29T07:11:05.726092",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "clean_trip_final$week_day <- ordered(clean_trip_final$week_day, levels = c(\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5438b239",
   "metadata": {
    "papermill": {
     "duration": 0.026554,
     "end_time": "2024-04-29T07:11:06.131827",
     "exception": false,
     "start_time": "2024-04-29T07:11:06.105273",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   As a **first step** in my analysis, I calculated key **summary statistics** for ride length, including the **minimum, maximum, median, and average values**. These values provided a broad overview of the distribution of ride lengths among Cyclistic's customers and allowed me to identify any **extreme values or unusual patterns** in the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a6635fab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:06.188469Z",
     "iopub.status.busy": "2024-04-29T07:11:06.186767Z",
     "iopub.status.idle": "2024-04-29T07:11:06.568705Z",
     "shell.execute_reply": "2024-04-29T07:11:06.566726Z"
    },
    "papermill": {
     "duration": 0.413754,
     "end_time": "2024-04-29T07:11:06.571898",
     "exception": false,
     "start_time": "2024-04-29T07:11:06.158144",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A psych: 1 Ã 8</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>vars</th><th scope=col>n</th><th scope=col>mean</th><th scope=col>sd</th><th scope=col>min</th><th scope=col>max</th><th scope=col>range</th><th scope=col>se</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>X1</th><td>1</td><td>624243</td><td>16.39074</td><td>34.45027</td><td>5</td><td>1435.917</td><td>1430.917</td><td>0.04360295</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A psych: 1 Ã 8\n",
       "\\begin{tabular}{r|llllllll}\n",
       "  & vars & n & mean & sd & min & max & range & se\\\\\n",
       "  & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\tX1 & 1 & 624243 & 16.39074 & 34.45027 & 5 & 1435.917 & 1430.917 & 0.04360295\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A psych: 1 Ã 8\n",
       "\n",
       "| <!--/--> | vars &lt;dbl&gt; | n &lt;dbl&gt; | mean &lt;dbl&gt; | sd &lt;dbl&gt; | min &lt;dbl&gt; | max &lt;dbl&gt; | range &lt;dbl&gt; | se &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|\n",
       "| X1 | 1 | 624243 | 16.39074 | 34.45027 | 5 | 1435.917 | 1430.917 | 0.04360295 |\n",
       "\n"
      ],
      "text/plain": [
       "   vars n      mean     sd       min max      range    se        \n",
       "X1 1    624243 16.39074 34.45027 5   1435.917 1430.917 0.04360295"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Analysis:- min, max, median, average\n",
    "View(describe(clean_trip_final$ride_length, fast=TRUE))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33422165",
   "metadata": {
    "papermill": {
     "duration": 0.026744,
     "end_time": "2024-04-29T07:11:06.625117",
     "exception": false,
     "start_time": "2024-04-29T07:11:06.598373",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   As a next step in my analysis, I examined the **distribution of Cyclistic's customers by membership** type. This included breaking down the data by **annual members** and **casual riders**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "b9d41c81",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:06.682472Z",
     "iopub.status.busy": "2024-04-29T07:11:06.680783Z",
     "iopub.status.idle": "2024-04-29T07:11:06.732630Z",
     "shell.execute_reply": "2024-04-29T07:11:06.730623Z"
    },
    "papermill": {
     "duration": 0.083979,
     "end_time": "2024-04-29T07:11:06.735734",
     "exception": false,
     "start_time": "2024-04-29T07:11:06.651755",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\n",
       "casual member \n",
       " 65098 559145 "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Total no. of customers\n",
    "View(table(clean_trip_final$member_casual))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03f6cc36",
   "metadata": {
    "papermill": {
     "duration": 0.027166,
     "end_time": "2024-04-29T07:11:06.790652",
     "exception": false,
     "start_time": "2024-04-29T07:11:06.763486",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   Continuing my analysis, I calculated the **total number of rides taken by each customer type**, as well as the total duration of these rides in minutes. This analysis allowed me to **understand the overall usage patterns** of Cyclistic's bike share service among different customer types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d3501a98",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:06.848811Z",
     "iopub.status.busy": "2024-04-29T07:11:06.847152Z",
     "iopub.status.idle": "2024-04-29T07:11:07.297667Z",
     "shell.execute_reply": "2024-04-29T07:11:07.295693Z"
    },
    "papermill": {
     "duration": 0.483029,
     "end_time": "2024-04-29T07:11:07.301118",
     "exception": false,
     "start_time": "2024-04-29T07:11:06.818089",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 2 Ã 2</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>customer_type</th><th scope=col>total_ride_len(mins)</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>casual</td><td>2585121</td></tr>\n",
       "\t<tr><td>member</td><td>7646687</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 2 Ã 2\n",
       "\\begin{tabular}{ll}\n",
       " customer\\_type & total\\_ride\\_len(mins)\\\\\n",
       " <chr> & <dbl>\\\\\n",
       "\\hline\n",
       "\t casual & 2585121\\\\\n",
       "\t member & 7646687\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 2 Ã 2\n",
       "\n",
       "| customer_type &lt;chr&gt; | total_ride_len(mins) &lt;dbl&gt; |\n",
       "|---|---|\n",
       "| casual | 2585121 |\n",
       "| member | 7646687 |\n",
       "\n"
      ],
      "text/plain": [
       "  customer_type total_ride_len(mins)\n",
       "1 casual        2585121             \n",
       "2 member        7646687             "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Total rides for each customer type in minutes\n",
    "View(setNames(aggregate(ride_length ~ member_casual, clean_trip_final, sum), c(\"customer_type\", \"total_ride_len(mins)\")))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6192ebd",
   "metadata": {
    "papermill": {
     "duration": 0.027147,
     "end_time": "2024-04-29T07:11:07.357159",
     "exception": false,
     "start_time": "2024-04-29T07:11:07.330012",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   In my next analysis, I focused specifically on **comparing the ride length patterns of annual members and casual riders**. To do this, I calculated key summary statistics, including the **mean,** **median, maximum, and minimum values**, for ride length among these two customer types."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "57ad6c7f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:07.416484Z",
     "iopub.status.busy": "2024-04-29T07:11:07.414762Z",
     "iopub.status.idle": "2024-04-29T07:11:07.785377Z",
     "shell.execute_reply": "2024-04-29T07:11:07.783050Z"
    },
    "papermill": {
     "duration": 0.404538,
     "end_time": "2024-04-29T07:11:07.788707",
     "exception": false,
     "start_time": "2024-04-29T07:11:07.384169",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 2 Ã 5</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>member_casual</th><th scope=col>min_length_mins</th><th scope=col>max_length_min</th><th scope=col>median_length_mins</th><th scope=col>mean_length_min</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>casual</td><td>5</td><td>1435.917</td><td>23.88333</td><td>39.71121</td></tr>\n",
       "\t<tr><td>member</td><td>5</td><td>1433.067</td><td>10.33333</td><td>13.67568</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 2 Ã 5\n",
       "\\begin{tabular}{lllll}\n",
       " member\\_casual & min\\_length\\_mins & max\\_length\\_min & median\\_length\\_mins & mean\\_length\\_min\\\\\n",
       " <chr> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t casual & 5 & 1435.917 & 23.88333 & 39.71121\\\\\n",
       "\t member & 5 & 1433.067 & 10.33333 & 13.67568\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 2 Ã 5\n",
       "\n",
       "| member_casual &lt;chr&gt; | min_length_mins &lt;dbl&gt; | max_length_min &lt;dbl&gt; | median_length_mins &lt;dbl&gt; | mean_length_min &lt;dbl&gt; |\n",
       "|---|---|---|---|---|\n",
       "| casual | 5 | 1435.917 | 23.88333 | 39.71121 |\n",
       "| member | 5 | 1433.067 | 10.33333 | 13.67568 |\n",
       "\n"
      ],
      "text/plain": [
       "  member_casual min_length_mins max_length_min median_length_mins\n",
       "1 casual        5               1435.917       23.88333          \n",
       "2 member        5               1433.067       10.33333          \n",
       "  mean_length_min\n",
       "1 39.71121       \n",
       "2 13.67568       "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Differences between members and casual riders in terms of length of ride\n",
    "View(clean_trip_final %>% \n",
    "       group_by(member_casual) %>% \n",
    "       summarise(min_length_mins = min(ride_length), max_length_min = max(ride_length),\n",
    "                 median_length_mins = median(ride_length), mean_length_min = mean(ride_length)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d34fd7b",
   "metadata": {
    "papermill": {
     "duration": 0.028457,
     "end_time": "2024-04-29T07:11:07.845456",
     "exception": false,
     "start_time": "2024-04-29T07:11:07.816999",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   In my subsequent analysis, I focused on analyzing the **average ride length of Cyclistic's users by day of the week**, as well as the **total number of rides** taken on each day of the week."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "3a4d6323",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:07.906471Z",
     "iopub.status.busy": "2024-04-29T07:11:07.904670Z",
     "iopub.status.idle": "2024-04-29T07:11:07.952048Z",
     "shell.execute_reply": "2024-04-29T07:11:07.950096Z"
    },
    "papermill": {
     "duration": 0.081185,
     "end_time": "2024-04-29T07:11:07.954678",
     "exception": false,
     "start_time": "2024-04-29T07:11:07.873493",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 7 Ã 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>week_day</th><th scope=col>Avg_length</th><th scope=col>number_of_ride</th></tr>\n",
       "\t<tr><th scope=col>&lt;ord&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;int&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>Sunday   </td><td>22.80830</td><td> 65334</td></tr>\n",
       "\t<tr><td>Monday   </td><td>14.60617</td><td> 91020</td></tr>\n",
       "\t<tr><td>Tuesday  </td><td>15.07710</td><td>106529</td></tr>\n",
       "\t<tr><td>Wednesday</td><td>15.45556</td><td>102155</td></tr>\n",
       "\t<tr><td>Thursday </td><td>14.77969</td><td>103911</td></tr>\n",
       "\t<tr><td>Friday   </td><td>15.38373</td><td> 96068</td></tr>\n",
       "\t<tr><td>Saturday </td><td>20.48980</td><td> 59226</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 7 Ã 3\n",
       "\\begin{tabular}{lll}\n",
       " week\\_day & Avg\\_length & number\\_of\\_ride\\\\\n",
       " <ord> & <dbl> & <int>\\\\\n",
       "\\hline\n",
       "\t Sunday    & 22.80830 &  65334\\\\\n",
       "\t Monday    & 14.60617 &  91020\\\\\n",
       "\t Tuesday   & 15.07710 & 106529\\\\\n",
       "\t Wednesday & 15.45556 & 102155\\\\\n",
       "\t Thursday  & 14.77969 & 103911\\\\\n",
       "\t Friday    & 15.38373 &  96068\\\\\n",
       "\t Saturday  & 20.48980 &  59226\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 7 Ã 3\n",
       "\n",
       "| week_day &lt;ord&gt; | Avg_length &lt;dbl&gt; | number_of_ride &lt;int&gt; |\n",
       "|---|---|---|\n",
       "| Sunday    | 22.80830 |  65334 |\n",
       "| Monday    | 14.60617 |  91020 |\n",
       "| Tuesday   | 15.07710 | 106529 |\n",
       "| Wednesday | 15.45556 | 102155 |\n",
       "| Thursday  | 14.77969 | 103911 |\n",
       "| Friday    | 15.38373 |  96068 |\n",
       "| Saturday  | 20.48980 |  59226 |\n",
       "\n"
      ],
      "text/plain": [
       "  week_day  Avg_length number_of_ride\n",
       "1 Sunday    22.80830    65334        \n",
       "2 Monday    14.60617    91020        \n",
       "3 Tuesday   15.07710   106529        \n",
       "4 Wednesday 15.45556   102155        \n",
       "5 Thursday  14.77969   103911        \n",
       "6 Friday    15.38373    96068        \n",
       "7 Saturday  20.48980    59226        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Average ride_length for users by day_of_week and Number of total rides by day_of_week\n",
    "View(clean_trip_final %>% \n",
    "       group_by(week_day) %>% \n",
    "       summarise(Avg_length = mean(ride_length),\n",
    "                 number_of_ride = n()))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "564e0f66",
   "metadata": {
    "papermill": {
     "duration": 0.027669,
     "end_time": "2024-04-29T07:11:08.010812",
     "exception": false,
     "start_time": "2024-04-29T07:11:07.983143",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   After this, I analyzed the **number of average rides taken by Cyclistic's users by month**. This analysis allowed me to understand the **seasonal fluctuations** in usage of the bike share service, and to identify any **trends or patterns** in usage levels over the **course of a year**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "dcee513a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:08.072288Z",
     "iopub.status.busy": "2024-04-29T07:11:08.070493Z",
     "iopub.status.idle": "2024-04-29T07:11:08.120935Z",
     "shell.execute_reply": "2024-04-29T07:11:08.118972Z"
    },
    "papermill": {
     "duration": 0.084628,
     "end_time": "2024-04-29T07:11:08.123586",
     "exception": false,
     "start_time": "2024-04-29T07:11:08.038958",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A tibble: 3 Ã 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>month</th><th scope=col>Avg_length</th><th scope=col>number_of_ride</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;int&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>01</td><td>14.75634</td><td>193055</td></tr>\n",
       "\t<tr><td>02</td><td>15.40622</td><td>182649</td></tr>\n",
       "\t<tr><td>03</td><td>18.38380</td><td>248539</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A tibble: 3 Ã 3\n",
       "\\begin{tabular}{lll}\n",
       " month & Avg\\_length & number\\_of\\_ride\\\\\n",
       " <chr> & <dbl> & <int>\\\\\n",
       "\\hline\n",
       "\t 01 & 14.75634 & 193055\\\\\n",
       "\t 02 & 15.40622 & 182649\\\\\n",
       "\t 03 & 18.38380 & 248539\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A tibble: 3 Ã 3\n",
       "\n",
       "| month &lt;chr&gt; | Avg_length &lt;dbl&gt; | number_of_ride &lt;int&gt; |\n",
       "|---|---|---|\n",
       "| 01 | 14.75634 | 193055 |\n",
       "| 02 | 15.40622 | 182649 |\n",
       "| 03 | 18.38380 | 248539 |\n",
       "\n"
      ],
      "text/plain": [
       "  month Avg_length number_of_ride\n",
       "1 01    14.75634   193055        \n",
       "2 02    15.40622   182649        \n",
       "3 03    18.38380   248539        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Average ride_length by month\n",
    "View(clean_trip_final %>% \n",
    "       group_by(month) %>% \n",
    "       summarise(Avg_length = mean(ride_length),\n",
    "                 number_of_ride = n()))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "507b3ba6",
   "metadata": {
    "papermill": {
     "duration": 0.028794,
     "end_time": "2024-04-29T07:11:08.180263",
     "exception": false,
     "start_time": "2024-04-29T07:11:08.151469",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   Now, I compared the **average ride length of Cyclistic's users by week day according to customer type**. This analysis allowed me to understand how the **behavior and usage patterns** of annual members and casual riders **differed** from one another on **different days of the week**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "e3fc8c57",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:08.240026Z",
     "iopub.status.busy": "2024-04-29T07:11:08.238248Z",
     "iopub.status.idle": "2024-04-29T07:11:08.748213Z",
     "shell.execute_reply": "2024-04-29T07:11:08.745883Z"
    },
    "papermill": {
     "duration": 0.543404,
     "end_time": "2024-04-29T07:11:08.751468",
     "exception": false,
     "start_time": "2024-04-29T07:11:08.208064",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 14 Ã 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>clean_trip_final$member_casual</th><th scope=col>clean_trip_final$week_day</th><th scope=col>clean_trip_final$ride_length</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;ord&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>casual</td><td>Sunday   </td><td>41.74725</td></tr>\n",
       "\t<tr><td>member</td><td>Sunday   </td><td>15.52317</td></tr>\n",
       "\t<tr><td>casual</td><td>Monday   </td><td>36.11983</td></tr>\n",
       "\t<tr><td>member</td><td>Monday   </td><td>13.28160</td></tr>\n",
       "\t<tr><td>casual</td><td>Tuesday  </td><td>37.32852</td></tr>\n",
       "\t<tr><td>member</td><td>Tuesday  </td><td>13.53413</td></tr>\n",
       "\t<tr><td>casual</td><td>Wednesday</td><td>42.68757</td></tr>\n",
       "\t<tr><td>member</td><td>Wednesday</td><td>13.34464</td></tr>\n",
       "\t<tr><td>casual</td><td>Thursday </td><td>36.98158</td></tr>\n",
       "\t<tr><td>member</td><td>Thursday </td><td>13.23971</td></tr>\n",
       "\t<tr><td>casual</td><td>Friday   </td><td>38.70883</td></tr>\n",
       "\t<tr><td>member</td><td>Friday   </td><td>13.37651</td></tr>\n",
       "\t<tr><td>casual</td><td>Saturday </td><td>39.91177</td></tr>\n",
       "\t<tr><td>member</td><td>Saturday </td><td>14.99547</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 14 Ã 3\n",
       "\\begin{tabular}{lll}\n",
       " clean\\_trip\\_final\\$member\\_casual & clean\\_trip\\_final\\$week\\_day & clean\\_trip\\_final\\$ride\\_length\\\\\n",
       " <chr> & <ord> & <dbl>\\\\\n",
       "\\hline\n",
       "\t casual & Sunday    & 41.74725\\\\\n",
       "\t member & Sunday    & 15.52317\\\\\n",
       "\t casual & Monday    & 36.11983\\\\\n",
       "\t member & Monday    & 13.28160\\\\\n",
       "\t casual & Tuesday   & 37.32852\\\\\n",
       "\t member & Tuesday   & 13.53413\\\\\n",
       "\t casual & Wednesday & 42.68757\\\\\n",
       "\t member & Wednesday & 13.34464\\\\\n",
       "\t casual & Thursday  & 36.98158\\\\\n",
       "\t member & Thursday  & 13.23971\\\\\n",
       "\t casual & Friday    & 38.70883\\\\\n",
       "\t member & Friday    & 13.37651\\\\\n",
       "\t casual & Saturday  & 39.91177\\\\\n",
       "\t member & Saturday  & 14.99547\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 14 Ã 3\n",
       "\n",
       "| clean_trip_final$member_casual &lt;chr&gt; | clean_trip_final$week_day &lt;ord&gt; | clean_trip_final$ride_length &lt;dbl&gt; |\n",
       "|---|---|---|\n",
       "| casual | Sunday    | 41.74725 |\n",
       "| member | Sunday    | 15.52317 |\n",
       "| casual | Monday    | 36.11983 |\n",
       "| member | Monday    | 13.28160 |\n",
       "| casual | Tuesday   | 37.32852 |\n",
       "| member | Tuesday   | 13.53413 |\n",
       "| casual | Wednesday | 42.68757 |\n",
       "| member | Wednesday | 13.34464 |\n",
       "| casual | Thursday  | 36.98158 |\n",
       "| member | Thursday  | 13.23971 |\n",
       "| casual | Friday    | 38.70883 |\n",
       "| member | Friday    | 13.37651 |\n",
       "| casual | Saturday  | 39.91177 |\n",
       "| member | Saturday  | 14.99547 |\n",
       "\n"
      ],
      "text/plain": [
       "   clean_trip_final$member_casual clean_trip_final$week_day\n",
       "1  casual                         Sunday                   \n",
       "2  member                         Sunday                   \n",
       "3  casual                         Monday                   \n",
       "4  member                         Monday                   \n",
       "5  casual                         Tuesday                  \n",
       "6  member                         Tuesday                  \n",
       "7  casual                         Wednesday                \n",
       "8  member                         Wednesday                \n",
       "9  casual                         Thursday                 \n",
       "10 member                         Thursday                 \n",
       "11 casual                         Friday                   \n",
       "12 member                         Friday                   \n",
       "13 casual                         Saturday                 \n",
       "14 member                         Saturday                 \n",
       "   clean_trip_final$ride_length\n",
       "1  41.74725                    \n",
       "2  15.52317                    \n",
       "3  36.11983                    \n",
       "4  13.28160                    \n",
       "5  37.32852                    \n",
       "6  13.53413                    \n",
       "7  42.68757                    \n",
       "8  13.34464                    \n",
       "9  36.98158                    \n",
       "10 13.23971                    \n",
       "11 38.70883                    \n",
       "12 13.37651                    \n",
       "13 39.91177                    \n",
       "14 14.99547                    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Average ride length comparison by each week day according to each customer type\n",
    "View(aggregate(clean_trip_final$ride_length ~ clean_trip_final$member_casual + \n",
    "                 clean_trip_final$week_day, FUN = mean))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73a8b0cc",
   "metadata": {
    "papermill": {
     "duration": 0.028288,
     "end_time": "2024-04-29T07:11:08.808878",
     "exception": false,
     "start_time": "2024-04-29T07:11:08.780590",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   In my next analysis, I compared the **average ride length of Cyclistic's users by month according to customer type**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "7deb01eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:08.869444Z",
     "iopub.status.busy": "2024-04-29T07:11:08.867684Z",
     "iopub.status.idle": "2024-04-29T07:11:09.437862Z",
     "shell.execute_reply": "2024-04-29T07:11:09.435631Z"
    },
    "papermill": {
     "duration": 0.604133,
     "end_time": "2024-04-29T07:11:09.441054",
     "exception": false,
     "start_time": "2024-04-29T07:11:08.836921",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A data.frame: 6 Ã 3</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>clean_trip_final$member_casual</th><th scope=col>clean_trip_final$month</th><th scope=col>clean_trip_final$ride_length</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>casual</td><td>01</td><td>38.03359</td></tr>\n",
       "\t<tr><td>member</td><td>01</td><td>13.26241</td></tr>\n",
       "\t<tr><td>casual</td><td>02</td><td>39.10264</td></tr>\n",
       "\t<tr><td>member</td><td>02</td><td>13.40712</td></tr>\n",
       "\t<tr><td>casual</td><td>03</td><td>40.42928</td></tr>\n",
       "\t<tr><td>member</td><td>03</td><td>14.25002</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 Ã 3\n",
       "\\begin{tabular}{lll}\n",
       " clean\\_trip\\_final\\$member\\_casual & clean\\_trip\\_final\\$month & clean\\_trip\\_final\\$ride\\_length\\\\\n",
       " <chr> & <chr> & <dbl>\\\\\n",
       "\\hline\n",
       "\t casual & 01 & 38.03359\\\\\n",
       "\t member & 01 & 13.26241\\\\\n",
       "\t casual & 02 & 39.10264\\\\\n",
       "\t member & 02 & 13.40712\\\\\n",
       "\t casual & 03 & 40.42928\\\\\n",
       "\t member & 03 & 14.25002\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 Ã 3\n",
       "\n",
       "| clean_trip_final$member_casual &lt;chr&gt; | clean_trip_final$month &lt;chr&gt; | clean_trip_final$ride_length &lt;dbl&gt; |\n",
       "|---|---|---|\n",
       "| casual | 01 | 38.03359 |\n",
       "| member | 01 | 13.26241 |\n",
       "| casual | 02 | 39.10264 |\n",
       "| member | 02 | 13.40712 |\n",
       "| casual | 03 | 40.42928 |\n",
       "| member | 03 | 14.25002 |\n",
       "\n"
      ],
      "text/plain": [
       "  clean_trip_final$member_casual clean_trip_final$month\n",
       "1 casual                         01                    \n",
       "2 member                         01                    \n",
       "3 casual                         02                    \n",
       "4 member                         02                    \n",
       "5 casual                         03                    \n",
       "6 member                         03                    \n",
       "  clean_trip_final$ride_length\n",
       "1 38.03359                    \n",
       "2 13.26241                    \n",
       "3 39.10264                    \n",
       "4 13.40712                    \n",
       "5 40.42928                    \n",
       "6 14.25002                    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Average ride length comparison by each month according to each customer type\n",
    "View(aggregate(clean_trip_final$ride_length ~ clean_trip_final$member_casual + \n",
    "                 clean_trip_final$month, FUN = mean))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28c16e74",
   "metadata": {
    "papermill": {
     "duration": 0.02828,
     "end_time": "2024-04-29T07:11:09.497948",
     "exception": false,
     "start_time": "2024-04-29T07:11:09.469668",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   Here, I analyzed the **ride length data of Cyclistic's users by customer type and weekday**. This allowed me to understand the behavior and usage patterns of annual members and casual riders on different days of the week."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "2a0ed849",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:09.559276Z",
     "iopub.status.busy": "2024-04-29T07:11:09.557616Z",
     "iopub.status.idle": "2024-04-29T07:11:09.843098Z",
     "shell.execute_reply": "2024-04-29T07:11:09.840751Z"
    },
    "papermill": {
     "duration": 0.319941,
     "end_time": "2024-04-29T07:11:09.846362",
     "exception": false,
     "start_time": "2024-04-29T07:11:09.526421",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[22m`summarise()` has grouped output by 'member_casual'. You can override using the\n",
      "`.groups` argument.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A grouped_df: 14 Ã 7</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>member_casual</th><th scope=col>week_day</th><th scope=col>number_of_ride</th><th scope=col>avgerage_duration</th><th scope=col>median_duration</th><th scope=col>max_duration</th><th scope=col>min_duration</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;ord&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>casual</td><td>Sunday   </td><td>18150</td><td>41.74725</td><td>27.20000</td><td>1361.817</td><td>5.000000</td></tr>\n",
       "\t<tr><td>casual</td><td>Monday   </td><td> 5279</td><td>36.11983</td><td>21.00000</td><td>1393.533</td><td>5.000000</td></tr>\n",
       "\t<tr><td>casual</td><td>Tuesday  </td><td> 6908</td><td>37.32852</td><td>20.86667</td><td>1361.317</td><td>5.000000</td></tr>\n",
       "\t<tr><td>casual</td><td>Wednesday</td><td> 7349</td><td>42.68757</td><td>24.58333</td><td>1435.917</td><td>5.000000</td></tr>\n",
       "\t<tr><td>casual</td><td>Thursday </td><td> 6740</td><td>36.98158</td><td>21.06667</td><td>1387.817</td><td>5.000000</td></tr>\n",
       "\t<tr><td>casual</td><td>Friday   </td><td> 7612</td><td>38.70883</td><td>20.82500</td><td>1433.167</td><td>5.000000</td></tr>\n",
       "\t<tr><td>casual</td><td>Saturday </td><td>13060</td><td>39.91177</td><td>24.63333</td><td>1358.683</td><td>5.016667</td></tr>\n",
       "\t<tr><td>member</td><td>Sunday   </td><td>47184</td><td>15.52317</td><td>11.43333</td><td>1385.550</td><td>5.000000</td></tr>\n",
       "\t<tr><td>member</td><td>Monday   </td><td>85741</td><td>13.28160</td><td>10.18333</td><td>1433.067</td><td>5.000000</td></tr>\n",
       "\t<tr><td>member</td><td>Tuesday  </td><td>99621</td><td>13.53413</td><td>10.28333</td><td>1425.900</td><td>5.000000</td></tr>\n",
       "\t<tr><td>member</td><td>Wednesday</td><td>94806</td><td>13.34464</td><td>10.25000</td><td>1387.550</td><td>5.000000</td></tr>\n",
       "\t<tr><td>member</td><td>Thursday </td><td>97171</td><td>13.23971</td><td>10.18333</td><td>1421.700</td><td>5.000000</td></tr>\n",
       "\t<tr><td>member</td><td>Friday   </td><td>88456</td><td>13.37651</td><td>10.10000</td><td>1432.133</td><td>5.000000</td></tr>\n",
       "\t<tr><td>member</td><td>Saturday </td><td>46166</td><td>14.99547</td><td>10.83333</td><td>1364.333</td><td>5.000000</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A grouped\\_df: 14 Ã 7\n",
       "\\begin{tabular}{lllllll}\n",
       " member\\_casual & week\\_day & number\\_of\\_ride & avgerage\\_duration & median\\_duration & max\\_duration & min\\_duration\\\\\n",
       " <chr> & <ord> & <int> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t casual & Sunday    & 18150 & 41.74725 & 27.20000 & 1361.817 & 5.000000\\\\\n",
       "\t casual & Monday    &  5279 & 36.11983 & 21.00000 & 1393.533 & 5.000000\\\\\n",
       "\t casual & Tuesday   &  6908 & 37.32852 & 20.86667 & 1361.317 & 5.000000\\\\\n",
       "\t casual & Wednesday &  7349 & 42.68757 & 24.58333 & 1435.917 & 5.000000\\\\\n",
       "\t casual & Thursday  &  6740 & 36.98158 & 21.06667 & 1387.817 & 5.000000\\\\\n",
       "\t casual & Friday    &  7612 & 38.70883 & 20.82500 & 1433.167 & 5.000000\\\\\n",
       "\t casual & Saturday  & 13060 & 39.91177 & 24.63333 & 1358.683 & 5.016667\\\\\n",
       "\t member & Sunday    & 47184 & 15.52317 & 11.43333 & 1385.550 & 5.000000\\\\\n",
       "\t member & Monday    & 85741 & 13.28160 & 10.18333 & 1433.067 & 5.000000\\\\\n",
       "\t member & Tuesday   & 99621 & 13.53413 & 10.28333 & 1425.900 & 5.000000\\\\\n",
       "\t member & Wednesday & 94806 & 13.34464 & 10.25000 & 1387.550 & 5.000000\\\\\n",
       "\t member & Thursday  & 97171 & 13.23971 & 10.18333 & 1421.700 & 5.000000\\\\\n",
       "\t member & Friday    & 88456 & 13.37651 & 10.10000 & 1432.133 & 5.000000\\\\\n",
       "\t member & Saturday  & 46166 & 14.99547 & 10.83333 & 1364.333 & 5.000000\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A grouped_df: 14 Ã 7\n",
       "\n",
       "| member_casual &lt;chr&gt; | week_day &lt;ord&gt; | number_of_ride &lt;int&gt; | avgerage_duration &lt;dbl&gt; | median_duration &lt;dbl&gt; | max_duration &lt;dbl&gt; | min_duration &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|\n",
       "| casual | Sunday    | 18150 | 41.74725 | 27.20000 | 1361.817 | 5.000000 |\n",
       "| casual | Monday    |  5279 | 36.11983 | 21.00000 | 1393.533 | 5.000000 |\n",
       "| casual | Tuesday   |  6908 | 37.32852 | 20.86667 | 1361.317 | 5.000000 |\n",
       "| casual | Wednesday |  7349 | 42.68757 | 24.58333 | 1435.917 | 5.000000 |\n",
       "| casual | Thursday  |  6740 | 36.98158 | 21.06667 | 1387.817 | 5.000000 |\n",
       "| casual | Friday    |  7612 | 38.70883 | 20.82500 | 1433.167 | 5.000000 |\n",
       "| casual | Saturday  | 13060 | 39.91177 | 24.63333 | 1358.683 | 5.016667 |\n",
       "| member | Sunday    | 47184 | 15.52317 | 11.43333 | 1385.550 | 5.000000 |\n",
       "| member | Monday    | 85741 | 13.28160 | 10.18333 | 1433.067 | 5.000000 |\n",
       "| member | Tuesday   | 99621 | 13.53413 | 10.28333 | 1425.900 | 5.000000 |\n",
       "| member | Wednesday | 94806 | 13.34464 | 10.25000 | 1387.550 | 5.000000 |\n",
       "| member | Thursday  | 97171 | 13.23971 | 10.18333 | 1421.700 | 5.000000 |\n",
       "| member | Friday    | 88456 | 13.37651 | 10.10000 | 1432.133 | 5.000000 |\n",
       "| member | Saturday  | 46166 | 14.99547 | 10.83333 | 1364.333 | 5.000000 |\n",
       "\n"
      ],
      "text/plain": [
       "   member_casual week_day  number_of_ride avgerage_duration median_duration\n",
       "1  casual        Sunday    18150          41.74725          27.20000       \n",
       "2  casual        Monday     5279          36.11983          21.00000       \n",
       "3  casual        Tuesday    6908          37.32852          20.86667       \n",
       "4  casual        Wednesday  7349          42.68757          24.58333       \n",
       "5  casual        Thursday   6740          36.98158          21.06667       \n",
       "6  casual        Friday     7612          38.70883          20.82500       \n",
       "7  casual        Saturday  13060          39.91177          24.63333       \n",
       "8  member        Sunday    47184          15.52317          11.43333       \n",
       "9  member        Monday    85741          13.28160          10.18333       \n",
       "10 member        Tuesday   99621          13.53413          10.28333       \n",
       "11 member        Wednesday 94806          13.34464          10.25000       \n",
       "12 member        Thursday  97171          13.23971          10.18333       \n",
       "13 member        Friday    88456          13.37651          10.10000       \n",
       "14 member        Saturday  46166          14.99547          10.83333       \n",
       "   max_duration min_duration\n",
       "1  1361.817     5.000000    \n",
       "2  1393.533     5.000000    \n",
       "3  1361.317     5.000000    \n",
       "4  1435.917     5.000000    \n",
       "5  1387.817     5.000000    \n",
       "6  1433.167     5.000000    \n",
       "7  1358.683     5.016667    \n",
       "8  1385.550     5.000000    \n",
       "9  1433.067     5.000000    \n",
       "10 1425.900     5.000000    \n",
       "11 1387.550     5.000000    \n",
       "12 1421.700     5.000000    \n",
       "13 1432.133     5.000000    \n",
       "14 1364.333     5.000000    "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Analyze rider length data by customer type and weekday\n",
    "View(clean_trip_final %>% \n",
    "       group_by(member_casual, week_day) %>% \n",
    "       summarise(number_of_ride = n(),\n",
    "                 avgerage_duration = mean(ride_length),\n",
    "                 median_duration = median(ride_length),\n",
    "                 max_duration = max(ride_length),\n",
    "                 min_duration = min(ride_length)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1039ce26",
   "metadata": {
    "papermill": {
     "duration": 0.029603,
     "end_time": "2024-04-29T07:11:09.904944",
     "exception": false,
     "start_time": "2024-04-29T07:11:09.875341",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   Here, I analyzed the **ride length data of Cyclistic's users by customer type and month**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "af1de190",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:09.968520Z",
     "iopub.status.busy": "2024-04-29T07:11:09.966696Z",
     "iopub.status.idle": "2024-04-29T07:11:10.088551Z",
     "shell.execute_reply": "2024-04-29T07:11:10.086330Z"
    },
    "papermill": {
     "duration": 0.156298,
     "end_time": "2024-04-29T07:11:10.091144",
     "exception": false,
     "start_time": "2024-04-29T07:11:09.934846",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\u001b[1m\u001b[22m`summarise()` has grouped output by 'month'. You can override using the\n",
      "`.groups` argument.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"dataframe\">\n",
       "<caption>A grouped_df: 6 Ã 7</caption>\n",
       "<thead>\n",
       "\t<tr><th scope=col>month</th><th scope=col>member_casual</th><th scope=col>number_of_ride</th><th scope=col>average_duration</th><th scope=col>median_duration</th><th scope=col>max_duration</th><th scope=col>min_duration</th></tr>\n",
       "\t<tr><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;int&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><td>01</td><td>casual</td><td> 11643</td><td>38.03359</td><td>19.71667</td><td>1428.067</td><td>5</td></tr>\n",
       "\t<tr><td>01</td><td>member</td><td>181412</td><td>13.26241</td><td>10.06667</td><td>1433.067</td><td>5</td></tr>\n",
       "\t<tr><td>02</td><td>casual</td><td> 14210</td><td>39.10264</td><td>21.81667</td><td>1435.917</td><td>5</td></tr>\n",
       "\t<tr><td>02</td><td>member</td><td>168439</td><td>13.40712</td><td>10.05000</td><td>1432.133</td><td>5</td></tr>\n",
       "\t<tr><td>03</td><td>casual</td><td> 39245</td><td>40.42928</td><td>25.81667</td><td>1433.167</td><td>5</td></tr>\n",
       "\t<tr><td>03</td><td>member</td><td>209294</td><td>14.25002</td><td>10.85000</td><td>1421.700</td><td>5</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A grouped\\_df: 6 Ã 7\n",
       "\\begin{tabular}{lllllll}\n",
       " month & member\\_casual & number\\_of\\_ride & average\\_duration & median\\_duration & max\\_duration & min\\_duration\\\\\n",
       " <chr> & <chr> & <int> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t 01 & casual &  11643 & 38.03359 & 19.71667 & 1428.067 & 5\\\\\n",
       "\t 01 & member & 181412 & 13.26241 & 10.06667 & 1433.067 & 5\\\\\n",
       "\t 02 & casual &  14210 & 39.10264 & 21.81667 & 1435.917 & 5\\\\\n",
       "\t 02 & member & 168439 & 13.40712 & 10.05000 & 1432.133 & 5\\\\\n",
       "\t 03 & casual &  39245 & 40.42928 & 25.81667 & 1433.167 & 5\\\\\n",
       "\t 03 & member & 209294 & 14.25002 & 10.85000 & 1421.700 & 5\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A grouped_df: 6 Ã 7\n",
       "\n",
       "| month &lt;chr&gt; | member_casual &lt;chr&gt; | number_of_ride &lt;int&gt; | average_duration &lt;dbl&gt; | median_duration &lt;dbl&gt; | max_duration &lt;dbl&gt; | min_duration &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|\n",
       "| 01 | casual |  11643 | 38.03359 | 19.71667 | 1428.067 | 5 |\n",
       "| 01 | member | 181412 | 13.26241 | 10.06667 | 1433.067 | 5 |\n",
       "| 02 | casual |  14210 | 39.10264 | 21.81667 | 1435.917 | 5 |\n",
       "| 02 | member | 168439 | 13.40712 | 10.05000 | 1432.133 | 5 |\n",
       "| 03 | casual |  39245 | 40.42928 | 25.81667 | 1433.167 | 5 |\n",
       "| 03 | member | 209294 | 14.25002 | 10.85000 | 1421.700 | 5 |\n",
       "\n"
      ],
      "text/plain": [
       "  month member_casual number_of_ride average_duration median_duration\n",
       "1 01    casual         11643         38.03359         19.71667       \n",
       "2 01    member        181412         13.26241         10.06667       \n",
       "3 02    casual         14210         39.10264         21.81667       \n",
       "4 02    member        168439         13.40712         10.05000       \n",
       "5 03    casual         39245         40.42928         25.81667       \n",
       "6 03    member        209294         14.25002         10.85000       \n",
       "  max_duration min_duration\n",
       "1 1428.067     5           \n",
       "2 1433.067     5           \n",
       "3 1435.917     5           \n",
       "4 1432.133     5           \n",
       "5 1433.167     5           \n",
       "6 1421.700     5           "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Analyze rider length data by customer type and month\n",
    "View(clean_trip_final %>% \n",
    "       group_by(month, member_casual) %>% \n",
    "       summarise(number_of_ride = n(),\n",
    "                 average_duration = mean(ride_length),\n",
    "                 median_duration = median(ride_length),\n",
    "                 max_duration = max(ride_length),\n",
    "                 min_duration = min(ride_length)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f1adaeb",
   "metadata": {
    "papermill": {
     "duration": 0.029635,
     "end_time": "2024-04-29T07:11:10.150351",
     "exception": false,
     "start_time": "2024-04-29T07:11:10.120716",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   The data was then written to a new file **next phase of data visualization**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "dede7859",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:10.216180Z",
     "iopub.status.busy": "2024-04-29T07:11:10.214223Z",
     "iopub.status.idle": "2024-04-29T07:11:26.199350Z",
     "shell.execute_reply": "2024-04-29T07:11:26.197422Z"
    },
    "papermill": {
     "duration": 16.02185,
     "end_time": "2024-04-29T07:11:26.203155",
     "exception": false,
     "start_time": "2024-04-29T07:11:10.181305",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Save the data for data visualization\n",
    "write.csv(clean_trip_final,file = \"clean_trip_final_visualize.csv\",row.names = FALSE)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f458a6b9",
   "metadata": {
    "papermill": {
     "duration": 0.030403,
     "end_time": "2024-04-29T07:11:26.263891",
     "exception": false,
     "start_time": "2024-04-29T07:11:26.233488",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 8. **Phase 6: Data Visualizations and Summary** \n",
    "\n",
    "In this phase, I will create **data visualizations** to help **communicate key insights** and **trends** in Cyclistic's bike share data. These visualizations will include **charts, graphs, and other visual representations** of the data that will help **highlight important patterns** and **relationships** in the data.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "811965d2",
   "metadata": {
    "papermill": {
     "duration": 0.030357,
     "end_time": "2024-04-29T07:11:26.324127",
     "exception": false,
     "start_time": "2024-04-29T07:11:26.293770",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### 8.0.1 **Visualization 1**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5cdd5af3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:26.388517Z",
     "iopub.status.busy": "2024-04-29T07:11:26.386743Z",
     "iopub.status.idle": "2024-04-29T07:11:28.774821Z",
     "shell.execute_reply": "2024-04-29T07:11:28.771817Z"
    },
    "papermill": {
     "duration": 2.423924,
     "end_time": "2024-04-29T07:11:28.777675",
     "exception": false,
     "start_time": "2024-04-29T07:11:26.353751",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\novW01gd/WP5bj8Hj59oevmVIgrWKnDIMAAA0iYi/2Kjc7U5rfuGF3Qsa3bnbP/rs9xrt7eXr\nM2XLpyIDC2568vZ9nuyM6dY/GMPFNOsksuKnX45L/ZiCxpWT//d2ctzLzw676tnv6148/59l\nNxfc9Xqh57qy/t60NS2hfeeRN08cefNEEdn25SOtLn7orgc2//VSN1/thcc6sjGl4O/8zPX+\nOw+U1kOUQ66cllu93kt3X5Zkj65Zp37D051BAQAA4Kxnimgyo1X8zrev/+5wTkHjovGXjBo1\nan9gl1Y7Jevgi1O/2HPylue9iZdkebyXPN0jGMPF1L+/fZTl5zsn7nWeCGH56euue27Bsl+q\nuXO2e1Q1vkPnggfnHFo760CmyIkDb9lHXurateuVT566QkiDc84VEXe2W0TsRoMz5YvjrhNX\nYnEmr79t5YGCR5bZeaC0HrGLiIgQqTV4cNEDngAAACJy9/IXFzS7ZlDjNpeNHNa5afyWlYvf\nXrGj7Zi3R1cr5xE7a1LEk8NabbnmhnMbR2/+/oNPVu+re+Ej87pVD8ZwitGx9J3bml72XNsm\nfcZee2ENc9onC+Yf8kTOWzLGnhQxIOG2758Zcrt5Yuc69j1b1786/7PGNSLy/900990Pbxw1\n3NFg5oCkV757pPfFe8Z2bd3Im7bv01dfM5oTZjzeUUSGjW4289EN7ftdN+nafq7D29+Y/dyR\nRIv85/aNa08a6b/zgGei/TwLhBhnxer4rDqVs2L1Pl/OitXxfKvUWbHWmB6FW+JMhnoXrSi4\nmbH/UTl5EqtP2t9f3XJpnxqxURZ7fIsOPacv+NLlLWeHNoPS+91Nr04f16FhjQiTJale2xse\nWJDuPu0KHX6Ge61ZfMGJpdrt+nL+sF5tYuxma2Rcp35Xvb32kK89a/+311/UpXZCZEyNRucP\nvvbzrSnHNj7dIM5uiUr6L8+tqmrO4Z/uuGpAvcQYk8EYnVCnz6U3frL5xFVgvJ7sF+4d1bx+\nDbOiiEjtHtf9uHaQFDor1n/ngZ4Vq6iqWo5gixBwuVzp6ekiEhcXZzTq/3uNTqczwmYL6ZBh\nXfmzs7Mjo6JCOmRY55uZmRkdE1P24ypQWOeblpYWGxdX9uMqUFjnm5ycnJCYGNIhwzdfr9eb\nkpIiIg6Hw2w2l/l4wMebl/HfMXe9OvFBHYXfBAMAAAg6gzWmXp2gj0KwAwAAerbvkyEdb/jJ\n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\nuyV/+if1Iyo2WiMiI6sG+kfcd/Ebp9YIqdFls4jcG+4XFP1MwfTMv3cM7nRzWJCff1jUjXf1\n23Q8vWBW2tFtT/a486qIEG//CrGNW0+Yu97poldTaoXavKtkOM8F2b82tNc0rXArW3vV1jTt\n3dMZxVltcdvVc17pUddi9R6x7ICrzQUA5jP7j9UCKJaz+7uKSKvlv108K253bxFp+e5hXdeP\nrX3MomkhsbeOHDVh6oQxfe6oLyK1e6/VdT0r8UuLptV//LuCNyYfmSoiLd46UGSLZ/73UpDN\nYvev0/+xZyY8O6xNbIiItBm9Rdf1019vXjH7JhEZ9N7Hmzb/dPF7/9j65aKxjURk9AeffrHl\nkK7ry2LD7L51mlfwadXviZlz3hw1uINd0/wqdszTdV3X0058XNPXbver/sCQkZPHPXtfqxgR\nadRvYZEd2zfrJhGZcjQl/+XattEiYrH6ncrJX5neu6K/d9DNxVmt+wXq+dkr37Re13Xd6ZjZ\nu75msT+xZG+RXQIAD0GwA8oGN8Eu5dgUEWn43A+6ri+qH27zuepoVm7B3OFRgb5hHfP//2TV\nQN8K7Qtmfd69pmbx/iE1p6gGnfdX9LP71d12Kj3/dZ4jbkTjcM3isy05W9f1Mz93FJGXj6e6\n6vCRT1qLyKqzGfkvl8WGiciNE7YULLCue00R2ZqUrev6+Pphdr+6O85mFsz9+KlGIjL596SL\n15x+erGINJn6c/7LO0J9Kt16k4g8eShB13VH+i9WTavR5fPirNb9AueCndPxRv9rNM0+bNEv\nrooFAA/BqVhAAVrBP92+PnT65P6rvK35M3Rnerau63kZ+S8Hj7o2M2H9gr/T82c9ueZYWINp\nTQLsF68x8+xHH5zJuHrQwpaRfvlTLLbwUe8/oDuzxn1+/Ap7afVd+VyLgpd1OkaJSJrTmZux\nb9L+hNhHFzUL8ymY237sayKy4q3DF6/Hr2Lfm4O9f5+/VkRyUr/bmJh15/8tCLRavnz7NxFJ\n2Pdinq7fPrbxJVdbnHZ1yZsz8Pqhi36p1unD1/s1uLLCAcAwBDugzMtJPiAiQVcHiYhfSIWM\n37a/OumFgX27t211Y3RY2OyT5y+qi+k5yaJps147KCJndz9zIMNxx8zuRa4zK3GDiMT0q1F4\nYkB0PxE5tfHvK+unV8B1Vb2sBS8127kbL7ISPsvT9V9euaHwU/q8Q1qJSPIvyUWuasytlVOO\nvZyQ60zY84qmWZ9vUGd41cCjH3wkIvtn7LTYgibVD7vkaovTbtyuPkMWH7khxPuvDY/tSMm5\nssIBwDA87gQo8/5Y9LOI3NKqkoisGnH7fa9+FdW4dcfbbupw810jJjY8Mbjt0DPnlvQOvu3J\nqgFzFrwo0z78Yvhqm/dVr7eMdLHWIu6x1TSbiOi5V3j7rab5FD3D4iUi1zzzzkutq1wwxzu4\nUZHvaDzmNufqhdP/TLlr5i6/iJ6xvrbOfWtMnjbrjGPKvM0nQ2pOjPSypF1ytcVoV3dqU9f/\n8lDIOxVvGNe929t/bRx6GQUDgOEIdkDZpucmjJx32O7f4LnowJzU77q/+lV0+zlH1w4uWGDh\nv5cfNLrhjIdXvnfit6d2/F213cdhtqIP2/uE3imy4MjSP+W6igUT044vEZFKt1cq2RJ8KrS3\nak/mJl19553NCybmZh5c9enuyIZ+Rb4l7JqJAdZFn8399cS205G3DhCRmg/d7Zw8ZfL+b5bH\nZd78YsfirLY47VZs8t6zbauKjH27w4LBa4eN2nHflOYlXD4AlCBOxQJlmDM3YUa/m7clZ7ea\n+F6AVcvNOJin6xUaNSlYIOPUjldOpBY+/BbTfYpV0557uGOcI+/BV1q6WrNv+L1dI/wOzh3w\nbVxW/hQ9N2Fa7/maxXtsh+ji91AvxtE9m0+t8fUq/Lqk/5d/ZxRMXDakc8+ePY+52EVZvao+\nVz3ot3enLY/LaDo8VkSCrnq6gt2y8ulBTl0f2fmq4qy2OO1q2rn/PbDso2o+tlc79UvIdfUY\nFgAwH0fsgLLkyLKXn/85REREnMlxx7atXb3vdGbtrlPWDm8oIn4RPdqEPfbVSx2G2kc2qer3\nx77v5s/5tGakT85fu15f+uGAnt38LZpX8C3DowNfXnfQJ6T16FohrpuyvLVmzMabR91as0n/\nAffUCMjc+tHCz/cnth715e0h3sXpqj3QLiJvz5qfXfeGXj1udL/wk+tnz6vTu13NBvf06NSk\ndoW9m1cs2XT4mgeW9K1Y9BE7EblneOzooR+LyMgGYSKiWYOfviro+U2HfMM6dKrgU8zVFr9d\ne0CTDa+1q/vwmrvG7/h+cgsBAM9k9m25AIol/3EnhfkGVqjbrP2E+ZtyCy2WduyL/nfdGBXm\nHxQZc+vdfdbsS4j74f+qh/p5BUQczz634MG3W4hIw+f/d8lGT369tEfbG8KCfG0+gTWvu23C\nwq8KZl3ycSc5aT93uK66j9VW+doJuq4viw3zCbm98AK/LW8lIusSzj1qJOnQhoe7tIoMCfDy\nqxDbqMW4eZ85nO76ln56iYgUPMlF1/Xd05qKSJ3+2wovdsnVulng/HPs8jlzBtYMttiCVp/O\ncNczADCPphfnTAkAhfzwQqMbXtzzcVxG5zAXdzMAAMomgh1QvjgdZ5uFRR0MHZp89BWz+wIA\nKGFcYweUI48NG5Hx60ffp+YM+Ogps/sCACh5HLEDypH6FQOP5AZ3Gzpz8cRuZvcFAFDyCHYA\nAACK4Dl2AAAAiiDYAQAAKIJgBwAAoAiCHQAAgCIIdgAAAIog2AEAACiCYAcAAKAIgh0AAIAi\nCHYAAACK+H8PXy1U61p7EAAAAABJRU5ErkJggg=="
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Total number of rides per day of the week for each customer type\n",
    "ggplot(clean_trip_final, aes(x = week_day, fill = member_casual)) +\n",
    "  geom_bar(position = \"dodge\") +\n",
    "  labs(title = \"Total number of rides per day of the week for each customer type\",\n",
    "       x = \"Day of the week\",\n",
    "       y = \"Number of rides\") +\n",
    "  scale_fill_manual(values = c(\"blue\", \"red\")) +\n",
    "  theme_minimal()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87ba211a",
   "metadata": {
    "papermill": {
     "duration": 0.031347,
     "end_time": "2024-04-29T07:11:28.840389",
     "exception": false,
     "start_time": "2024-04-29T07:11:28.809042",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-  It appears that **casual riders** have the **highest number of rides on **Saturdays and Sundays**, potentially indicating **leisurely use of the bikes on the weekends**. Meanwhile, **members** have a more **consistent number of rides throughout the week**, with slightly higher numbers on **Tuesdays and Wednesdays**. This suggests that members may primarily use the bikes for their **regular commuting needs**."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a96c825",
   "metadata": {
    "papermill": {
     "duration": 0.030837,
     "end_time": "2024-04-29T07:11:28.901587",
     "exception": false,
     "start_time": "2024-04-29T07:11:28.870750",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### 8.0.2 **Visualization 2**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "73c764bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:28.967693Z",
     "iopub.status.busy": "2024-04-29T07:11:28.965989Z",
     "iopub.status.idle": "2024-04-29T07:11:34.428073Z",
     "shell.execute_reply": "2024-04-29T07:11:34.425981Z"
    },
    "papermill": {
     "duration": 5.497904,
     "end_time": "2024-04-29T07:11:34.430970",
     "exception": false,
     "start_time": "2024-04-29T07:11:28.933066",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n9uy/2+iq8iceWljYUQEAJEHKwm7timdDCJ+o/OCjgaMqy5b9bVnhRgQAkBQpC7v6NStCCAN7\nfHC2xMAepeveW1e4EQEAJEXKzoot6VkZQliyrn5I+fokXbyurqx/q6+ifsXimvpiO4ECgKJT\nVVVV6CGQCCkLux6Vnwzhobmr1g0pX38Zk3mravuO6tva8pWVld01NACAAkvZodiKfnsMLS+9\n69FFDTfX1Tz15PK14/YYUthRAQAkQcrCLmR6nHLgNi9fduYDT81765/PXfrt83oP3fPwzXoX\nelgAAIWXyabuD4Nm6+676oIb7nv83dWZkaM/+5VTpm9ZmbIDygAAXSGFYQcAQEvSdigWAIBW\nCDsAgEgIOwCASAg7AIBICDsAgEgIOwCASAg7AIBICDsAgEgIOwCASAg7AIBICDsAgEgIOwCA\nSAg7AIBICDsAgEgIOwCASAg7AIBICDsAgEgIOwCASAg7AIBICDsAgEgIOwCASAg7AIBICDsA\ngEgIOwCASAg7AIBICDsAgEgIOwCASAg7AIBICDsAgEgIOwCASAg7AIBICDsAgEgIOwCASAg7\nSKKXr/xMJpM59KUlzR+6e+fNMpnMg8vWdP+oWnPDrKnDB1UN3PLLG1zy+m0H9uo/qUsH895r\ns1rbdADRE3ZAp6xYcMmU711ftutX58w+tPmj7/x51uTJkx99b233DwygCJUVegBAuq1adGcI\nYfqFpx85vE/zR1cu+NMddzxw1Lq6bh8XQDEyYwesV1+7dCP6K1tfH0LoWZLJ+3gA6ChhB6m3\n8M83HrrPzoP6VZX37rvVpyZ954o/5B6aOXyTTYbPbLzw07PHZzKZV9esT7jLt67uP/L8NUsf\nP2z3T1T1HFBTl+3Q+n8zatDgMbeHEL4xrE/vQQc1+cbvj+g3Yv8HQggHDKxsPIxVCx495vO7\nVG9S2bt66I57H3Hf/BWNv6vmtYdnTNlr80H9evYesM3YCbN/cVd9my//iet/MOk/tuxTUV69\n6cenfP2Cd9Z+aPEXb/vp/ruPG9i3d1l5r01Hbj9t5oVLarMhhBcv3iWTyVz0Zk2jZesn9u9V\ntemGPykIkFjCDtJt0ZNzttp16k1/XPK5Q4+fdeK0j9b85Yyj9tjz2w+1fw31tUumjdl74fA9\nv3/hxb2aTby1vf5P//LGGy7eKYQw/Zpbf3vjaU2+d+qVt1x5+pgQwqwbb7v1mv9uuLNuzRuT\n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\nACAS/wbs6kfjHRJiMQAAAABJRU5ErkJggg=="
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Total number of rides per hour of the day for each customer type, x label show each hour\n",
    "ggplot(clean_trip_final, aes(x = time, fill = member_casual)) +\n",
    "  geom_bar(position = \"dodge\") +\n",
    "  labs(title = \"Total number of rides per hour of the day for each customer type\",\n",
    "       x = \"Hour of the day\",\n",
    "       y = \"Number of rides\") +\n",
    "  scale_fill_manual(values = c(\"blue\", \"red\")) +\n",
    "  theme_minimal() + scale_x_discrete(breaks = seq(0, 23, by = 1))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "058184b0",
   "metadata": {
    "papermill": {
     "duration": 0.031886,
     "end_time": "2024-04-29T07:11:34.496706",
     "exception": false,
     "start_time": "2024-04-29T07:11:34.464820",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   This plot demonstrates that **annual members tend to use the bikes more frequently during rush hour**, potentially for **commuting to and from work**. On the other hand, **casual riders show a more steady increase in usage throughout the day, with a peak at around 6pm and a steady decrease thereafter**. This suggests that casual riders may be using the bikes more **for leisure activities**. These insights provide valuable information on the **different usage patterns of annual members and casual riders**, which can inform strategies for promoting the bike share program and targeting different customer segments."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "18765dcb",
   "metadata": {
    "papermill": {
     "duration": 0.033138,
     "end_time": "2024-04-29T07:11:34.564366",
     "exception": false,
     "start_time": "2024-04-29T07:11:34.531228",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### 8.0.3 **Visualization 3**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "bfaf7f82",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:34.630741Z",
     "iopub.status.busy": "2024-04-29T07:11:34.628734Z",
     "iopub.status.idle": "2024-04-29T07:11:36.050516Z",
     "shell.execute_reply": "2024-04-29T07:11:36.048491Z"
    },
    "papermill": {
     "duration": 1.457852,
     "end_time": "2024-04-29T07:11:36.053080",
     "exception": false,
     "start_time": "2024-04-29T07:11:34.595228",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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"
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Total number of rides per month for each customer type\n",
    "ggplot(clean_trip_final, aes(x = month, fill = member_casual)) +\n",
    "  geom_bar(position = \"dodge\") +\n",
    "  labs(title = \"Total number of rides per month for each customer type\",\n",
    "       x = \"Month\",\n",
    "       y = \"Number of rides\") +\n",
    "  scale_fill_manual(values = c(\"blue\", \"red\")) +\n",
    "  theme_minimal()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ef12117f",
   "metadata": {
    "papermill": {
     "duration": 0.032523,
     "end_time": "2024-04-29T07:11:36.117262",
     "exception": false,
     "start_time": "2024-04-29T07:11:36.084739",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   This plot shows the **monthly usage trends of bike sharing among annual members and casual riders**. It appears that there is an **increasing demand for bike usage in March for both customer types**, with casual riders showing a slightly higher demand."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b68b1a43",
   "metadata": {
    "papermill": {
     "duration": 0.032656,
     "end_time": "2024-04-29T07:11:36.182673",
     "exception": false,
     "start_time": "2024-04-29T07:11:36.150017",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "#### 8.0.4 **Visualization 4**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "d8791b05",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-04-29T07:11:36.253345Z",
     "iopub.status.busy": "2024-04-29T07:11:36.251375Z",
     "iopub.status.idle": "2024-04-29T07:11:37.611686Z",
     "shell.execute_reply": "2024-04-29T07:11:37.609718Z"
    },
    "papermill": {
     "duration": 1.397716,
     "end_time": "2024-04-29T07:11:37.614496",
     "exception": false,
     "start_time": "2024-04-29T07:11:36.216780",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAIAAAByhViMAAAABmJLR0QA/wD/AP+gvaeTAAAg\nAElEQVR4nOzdZ3wUVdvH8Wu2pmx66L33jhSpAhYUASugoIgNwYKCwC0qoN7WW7CLYq9gAyzo\nIygCCigKFpDeBQRSSN3sbnbnebExpmeyye6Eye/74UV2djLnOmdmh3+mraKqqgAAAODMZ9K7\nAAAAAFQNgh0AAIBBEOwAAAAMgmAHAABgEAQ7AAAAgyDYAQAAGATBDgAAwCAIdgAAAAZxBgc7\n1ZfVOsKmKIrJbPs506N3OdXCL//pqijK8LXHyp5tYYs4RVFWpuYEqYxgL79sGgfBkPQd+SKy\n/15z3dAeiQ5bnQ73aP+tPW8OVBRl4Jt7gleYLl5vk6Aoynunsiv0W4GNYfVk1DULVDdncLBL\n/mP2HqdHRFSfZ+YnB/UuB/pQfVk//PDDjz8f0bsQFDV3wKVvfLvF2mbABQNblTgD665c5Y4h\nqsqZvjWe6fWjCln0LiBw381YLiL1L2x+bOX+LXNfl2se1rsi/TW94sE32qY0aBundyGhk+vc\n3b9//+jG96UdesA/pQYOQnWkup/el2aNaLdv8+oIk1LiLMXXHQrRMIaoKmf61nim148qdKYG\nO19uyrT1xxXF9PLLH13RuEf6oce/T5/XP9qmd106S+h+8bXd9S5CbwxCdaD6nB5VjYjoQCIJ\nGGMIIABn6qnYk5vvOuryRjWadlGDbvNax6mq9z9L9oeiYdV10uMLRUMVVW0LC4zO3fFl5eQG\n8mvuHK9adVUYbJ1CL2xIoaJ6s51ubzAbCOKqrOLdF/Rzpga7/5vxtYh0n3+ziFzx0Fki8ttD\nLxWcYeXoZoqi9HzktyK/ePSbKxVFiW8z3//y0PfvTRw9uEHtOHtEbKtOZ02Zv2hvdqH/0Xe+\n1E9RlFv3nc48tHLsgPYOW8TbJ7NFRPWmvffkjKG92ifERFps4bUatR5+9e3/tzOtWKXeL5//\nz8COzaLsYbUbtZs46xWnTzpE2qLq3VhwpnLLKK7Ewn6d36PIfQM+z8nF9918VutGDrs9sX7z\nS2+c88dpd4kLDKAGLcvfeEt7RVEu25FccKLqTVMUJbLWFWV3R8ob5yXtEm2O7iKSfvhBRVES\n2rwuIsUHQcS39p1HRg7sXCvWYYuMadbx7ClzFx9zFdr/+q/svn5P6s9vz+nYMNYRbrXYI5t1\nHnDvS6vKHoHbGkRZw1t4MrbfOapvTESk1WyJq9Po/HG3frMnvaIjXNogBDby5Y7ewWUXKorS\ndOQXRX5rxwv9FEVpO+m70jtdzniuHt7EZIkVkeykjxRFiWpwW/FFlLjuCsrYt+qGSwbWSYi2\nhkU27dTvnhf+r8gMFd1in2gTryjK+M0n86ek7Z+tKIqiKNN2peZPTPptkqIoMY1nVaihAD4+\nuz+cFWY22aM6f3ogo/i7pY9h+RtzhTYkLcVr2t2puatemXdBn3bxUWGRsbW7nnPpgo9+LrG5\nctdsUeUtWeNOJmXbF7ePu6BlvQS71RaT0HDAiOuW/Pi3/63St0bNu45dJ1+ZdWltR0yE3eKI\nqz3gksk/JeWIeFc+O6Nvu8YOuzU6scnwiffscVZsy9G4KovXr/HTXYW7L1Qj6hnI6/orwWpW\nTPYtGW5VVd2Zv9tNiqKYVqfm5M+TsnO2iETWvb7I777QrZaIXLbysKqqGxdeY1YURVHqNG3f\nr3eXxEiLiEQ2GPLNiez8+XcsOltEbtjyf12jbeF1Wg+78OIVyU5fbvqNvWqLiMkS26Vn30Fn\nn9U0zi4iZlu9T09lF2zu+Ws6iohiCmvdrW/bRvEi0mDwlEZ2i6PuDfnzaCmjuBIL2zqvu4hc\n8N1R/zy5OQfHtIsTEUVR6jTv1LZBjIiExfe7tk6kiHyR4qxkDVqWv2FyOxG59M+kgr/oyz0t\nIhGJl1dynH9d8MDM6deJiD263+zZsx948mdVVYsMgqqqT0/okl/kwL4946xmEYlpOXJ7lid/\nnt1vDBCRof+bqChKZL2WQy8e1b97U/9nZMTTf5QxCLfWd5ht9a5pHSsilohaXbq1dVhMImK2\n1X72p5MVGuESByHgkS939DxZ28NNijWindNbaOE31XeIyPNHM0rrcrnjuee1R2fPnCYi1og2\ns2fPnvvwiuILKXHd5a+IjrPua2A3O+q3GnbxqAHdG/+zIrZVaDyL2PFyPxFpfvk3+VO2zO3m\nX3Kn6T/lT1w/sbWI9HzkN+0NaZnntdbxIvLuySz/y73L5oSbFGtk+0/2pZVYbWljqGVj1r4h\naSle2+4u95Er2oqIyezo1mfAWZ1aWRRFRAbO+CS/IY1rtpjyl6xlJ3PqlwWxFpOIxDfv0H9Q\n//ZNY/zLfObPFLX0rVH7rqPt6DYi0qxLv1EXDmkUbhGRyHqjnp3UVTFZO/YeevGwfg6zSUTq\n9H2kQoOvcVUWr1/jp7sKd1+oPs7IYPfX6itEJL7to/lTHmwVJyJ9Cu4dfK7uDpuIfFkgvuQ6\n90WZTWZ7gxNub9r+F+wmxebo9PLqvf53vZ6kF2/tIyIxLW/K/yz4P1e1mzmG/Oe9bK/PP/Ho\nmitEJKrx5TtT8qKkLzfjpetai0inGf/+D3Hky5tEJKbFmF+T82bbvfKxKLNJRPKDncYyiiux\nsCKZZvn4ViIS0+KStQfy/vM4sum9dhFW/840P9gFXIOW5Vco2AUwzu7MLSIS3fi+/EUVGYQD\nH48XEXvMWSt+z6vBnbH7rsH1RKTJiDfzf8u/dxaRfne9lb8rXPfMSBEJT7i49DFQb63vEBFF\nMU18aqXLp6qq6nUlvXjr2SJij+mf4vFpH+ESByHgkdcyeo+3ixeR2btS8pecfeojEYmodWVp\nTWscz+KruLji604tsCLOnv6O658x+OnVqwouLbAtNvvUUhGJSLwsf8qjLWLN1lomRYluNDt/\n4vV1I0XkhWOZGhvSWEzBYHfw83mRZpM1su2Hu0+XMT7Fx1Dj4GvfkLQUr2VD2vnySBGJaXnF\n5n/+pz+x5ePmYRZFMb92LNM/RcuaLU7LkrXsZGY0iRaRCYs3/PO+97M5vUWkdvdX8kay2NZY\noV2HolhnvbPZP8V5cmPTMIuImK21Xvz2kH/iqV9esCqKopgP5ORqH3ztq7J4/Vo+3VW4+0L1\ncUYGu+e61hKRkZ8dyp+y9/2hIuKoP7ngbN9e01pE+j67PX/Koc9HikjTkStUVX29fz0RmfLd\nsUKL9nkm1IkUkUXH83YZ/s9VRK0xBTffvW9PGz169H9WHy34q6f3zxCRxhesyp8yrXG0iLxw\nIL3gbF/f0KZgsNNYRnElFlYw0+Q698dYTIopbGXhg4iHv7yuSLALrAaNy69QsAtgnMsNdjfU\nd4jInT/8XXAhnuwd9e1mxRT2a6bbP8W/d45IvNRdcOfpy4m3msz2+iWOgJ9/z9jogtcKT/be\n2jxGRMZ885dauY2tOI0jr2X0DnxygYi0uPLfjfaX+7qKSK8nfi+tdY3jWclgF54wylVoRbhi\nLCZLeHP/q4A/NUNiwxRF+THdpaqqz5tZy2qOb/vsuNoRJrPjhNurqqone5dFUWxRPbyaG9JY\nTH6wO/x//422mKzhrZfuLCvVqSWNocbB17ghaSxey4Y0NDZMUZT3jhYa+V8f7iEivRbkHfDW\nsmaL07JkLTuZVuFWEdnj/PdImztz67x58x7+3/J/XhbdGiu066g/8M2Cs33YvbaIdLj9+4IT\nr6kTKQWONWgZfO2rsoRgquHTXYW7L1QfZ16w8zj3OMwmkyVmvzM3f6I74xerSRGRzwocpk47\n+KiIRDW6K3/K/zokiMjD+06rqrdZmMVsTcwp9ifQpls7iMigJXl/mvg/V21v+KHsqnJSDr0y\nrWPBPV1uziGrotij+xWZ8/SBewoEO61lFFdiYQUzTcruW0QkruUTRX7R581qYDcXCHYB1qBx\n+RUKdgGMc9nBLte536wolvAWnmK9e69nHRGZ8Osp/0v/3rnd5A1FZmsfYTXb6pVRkn/PePvO\nlCLTD356rog0uWhVlW9smtdsUcVHz5O1Pcyk2Bzd88fn4oRwRbGsPe0qcQnax7OSwa7tTUUH\noXmYxRLm/+8/8E/Nqsubi8gl3x1VVTX9yOMi0uvJP74b11JEZuxJVVX15NaJItJ4+OeaG9Ja\njD/YPb5kvv+EYN2zF5QxMn5FxlD74GvckAIeySIbkjP5MxGJrDOh6NLdpw4ePHj01D/nK8pf\ns0VpXLKWnczMFrEi0nT41C82bHeVdOSryNZY0V1Hn2e2F5zn29HNRGTs9kIl/bdpTEV3vJpX\nZQmfJi2f7ircfaH6OPMed3L062mZXp9IWvPwEop/4JU9I2Z28v8c3eTuwbHz1v719A/pj/SL\ntuVm/3nfjpTwhBGzm8d4c/YdyMkVSQor5TkC6X8WunQ0rkfRh6LlZh98d/Hba3/cumfv/oOH\nDv51suhtE660tR5VjY4bWmR6WOxQkbxH7nlzDlSojOKKF5Yvc99eEal1dp8i0xVTxBWJEU8d\nzahkDRqXXyEBjHPZ3BmbvKrqiBtuKda5VkPqyM8nDm0/LV0S8yfGdooNoGwRGVknosiU+K7n\niKxK37XTm9OskhtbEdpHvtzRs0S0n986btbOLY8eTL+3WXTm0ec+S3bGtZo/MKbkJwdVdDwD\nltAzobS3KvOp6TpnqHy0/5fHfpNB9Y8s/0RERl3RpN3AvvL+3lWv7ZOHe+x6eoOIDJzbU2ND\nFS3mP+Pm2WsNapnx/d4Nd/3n+3GP9K9bWqnFVXTwy92QtBdf9obkOv2tiIQnjizy6yZrYpMm\nRTeGMtZscRVactnu++atX8695psvn7/oy+etjtrdzurdf9A5o8dcO6BtfInzV3S0TbYS7kSM\nsJZ6e2KFtpxyV2WJtH+6q3D3hergzAt278/aKCK1e/RpXTjY5Wbv2rTl1J8LnpSZb/wzzfTI\nhBZ9n90+Z9mh765tdXjlXU6fetbd/1VEVNUjIpawpjOmjS2xlbq9axV8aSncVvKWV3oNmrI/\n05PYqsfgPr0GjhjXsnX7js2/69V7Qf48qi9HRBQp+mFQFPO/81SwjOIsJaXbvIasiogUa19E\nJL7A7ibgGjQuv2RqyXfsBzDO5Sn19n3FrIiIz+0rPjEAxXd6iskmIqrPXcmNrTiNI69x9K74\nb69Zl331zoO/3vvawF/nPy8iA568tvTGKzaeASvxv8m8CirxqYlv/0C05dWTmxaIDP/+pb1m\na8Jt9R3hifeYlXcOvvepPNzj9a+OKubwh7omamxIVTMrVIwtod9X27+su3J862s/fmrU+Okn\nvk60aH80QcUGv9wNSeNIlrsh5e3rzJr+NyljzZZQYUWWXPyXC75yNLl49a4Tm7/++NOVq9Z9\nv2Hzus9/WvPZwvkzL5790YqHR5X4+6UtuEo29QptxuWuytJo/HRX4e4L1YLehwwrxp251W5S\nFMW8Mb3oqSJX2g9mRRGRDwpceJR57CURiW0xV1XVB1rFKSbr+jSXqqqqz13Lajbbapd1Maqq\nqv8cCR/wxu6CE8fUiRSRO9/bXHBi2oE5UvAUYcYWEbHHDCiywLRDcyX/VKzmMjQWVvAsZOre\nO0UkrvXC4r87MMYu+WcEAq1B4/JLPEviSv9RSjoVG8g4l3Mqdq9ZUSzhLXPVoj7oW1dErtx8\nwv/Sfz7l7EU7isym8VTsnbuKnss48vVFItJg0BeV3NiK0zjyWkZP/ed8jT1mgNfn7hVlM1sT\nDucUH6082sezkqdiiw/CvyfsKvGpUVX10VZxIvJ1SmbzcEts8//6J06qG2myRJ9I32FRlNjm\n8/Nm1dKQ5mL8p2Kf2Ou/ri73ltaxItJj1tqyll30VKzWwde4IWksvtwNKevEmyLiqH9rkV/0\nZO945513Pvx0n/9l+Wu2GI1L1riTKSg3+8T/vfXfWlazoijvnsxWSzgVW6ldh/9U7KTdhXYL\nhU7Faht8rauylE9TuZ/uKtx9ofo4w55jd2j5dJdPjW5yd5+oogeTbdFn397QISKPPr8rf2Jk\nvZsuSQxPO/DI5r83PrjvdHy7h/K+nUKxzmoT63WfnPPjycKL8d3apUW9evVWJJf6NeqqN+2D\nk9kWe+MF43oWnJ6++8+CL62ObpcnRrjS1i8+Uuik5C+PfvDvi0qUUa6ohnfGW02n992zqvBC\nUv54eF2aq/I1aF2+iIhknSg0z9Gvy//+N43jXDZzWItr6kTkOvfO2nSi4PRc5+67tiQpJtv0\nNlXzzWOfTP+88AT12ds3iEj36R2qfC1rGXnto+c/X+NKWz9/zd0/Zbjr9numkd0spQjZeJal\ncuM5ano7EXlo2RP7nbnNxg/3T5w0vKEvN33O1/fkqmrbaZdXoKEKFlM/2n/nsvmxr5+2m5St\n/7vok7/LesJcQVU/+BqK17IhRdQa1zHSmnV80RdJzoLz7H//5vHjx/9nyV8Vq6qACi25jJ1M\n9sl3WrVq1bnPXflTzOG1z5twzzOt4lRVXZVawgYT9E09mDv/fBo/3aHcfSEU9E6WFfOfZjEi\nMvC1XSW+u/2ZvlLsSQ1b7u8mIq3GthCRq77998auk5vniIjN0fn9H/Nu9vHlpr81fbCIxLW+\nPX+2kv5g8jYPtyiK8uq2f//K+enDJ9tEWEWkwaAv8yfuW3q1iMS2mfBnWt79U/tWLYixmEXE\nUe+mCpVRXLlH7FRV/eya1iIS2/qKDUfyblxK+XNl/4Rw/6rPv8Q+4Bq0LP/P5/uKSGzrG/52\n593XlbJ9WYdIq5R/xE7TOPv/To1qcEdpg7B/6VgRscf2/uLPVP8UT+a+GUPqi0jjC/+9F6yS\nR+wUxXzTC6v9fwv7PKdfnX6OiNgc3fy9rsTGVjINI691K1VVdf/HF4iINdoqIrf/c0l4aTSO\np/YjdgXXnartuE7AW6yqqtkn3xcRW6xNRGbuzevCqd9uyJ/49oms/Jm1NKSxmCLPsVNV9csp\nHUQkofPM0o6FFB9DjYOvfUPSULymDemXB/qJSHyHCb8n5d3QkLLt8zYRVkVRFuzPeyJPAEfs\nNC653J2M130i0WpWFPN9y/99JuWpbZ+1DrcqiuXb0zlqSVtjZXYd5R+x07blVPSIXZFPk1re\np7sKd1+oPs6kYOdKW29WFEUx/5BW8i17zuS8p2y/WWDXnH3qQ/9ES1iz5MI3OC2bea7/raad\new09p1+LxDARscd0W/n3v79e4udqw/2DRMRkjux/3sVXjr6gS+s6JrNj3KzZImK21Zt4y9T8\nBw4turaziJisUR17DezUvI6IjHjoRRGJanR3hcooTkuwy805eGXbWP/ntkHrbl1a1lUUxR7b\n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"
     },
     "metadata": {
      "image/png": {
       "height": 420,
       "width": 420
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Average ride duration per day of the week for each customer type\n",
    "ggplot(clean_trip_final, aes(x = week_day, y = ride_length, fill = member_casual)) +\n",
    "  geom_bar(stat = \"summary\", fun = \"mean\", position = \"dodge\") +\n",
    "  labs(title = \"Average ride duration per day of the week for each customer type\",\n",
    "       x = \"Day of the week\",\n",
    "       y = \"Average ride duration (minutes)\") +\n",
    "  scale_fill_manual(values = c(\"blue\", \"red\")) +\n",
    "  theme_minimal()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bebfde4a",
   "metadata": {
    "papermill": {
     "duration": 0.035145,
     "end_time": "2024-04-29T07:11:37.682545",
     "exception": false,
     "start_time": "2024-04-29T07:11:37.647400",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "-   In this plot between the **Avg. Ride duration and Week days**, It is clear that **casual riders tend to use the bike share service primarily on weekends** for leisure or recreational purposes, while **annual members use the service more consistently throughout the week**, possibly for commuting to work or other daily activities. This information could be useful for Cyclistic in terms of understanding how to target marketing efforts and **potentially adjusting pricing or membership plans to better meet the needs of these different customer groups**."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bc2a66de",
   "metadata": {
    "papermill": {
     "duration": 0.033395,
     "end_time": "2024-04-29T07:11:37.751577",
     "exception": false,
     "start_time": "2024-04-29T07:11:37.718182",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 9. **Phase 7: Act**\n",
    "\n",
    "#### 9.0.1 **Key Takeaways :**\n",
    "\n",
    "-   Annual members primarily use the bike-sharing service for commuting purposes, while casual riders tend to use it for leisure, particularly on weekends and in the summer months.\n",
    "-   Annual members exhibit a more consistent usage of the service throughout the week and year, compared to casual riders.\n",
    "-   Casual riders tend to have longer ride duration's, averaging around 50% longer than annual members.\n",
    "-   Casual riders show lower usage of the service during the winter months compared to annual members.\n",
    "\n",
    "#### 9.0.2 **Recommendations :**\n",
    "\n",
    "-   Increase marketing efforts targeting leisure riders, especiall on weekends, in order to increase bike usage and revenue.\n",
    "-   Consider offering discounts or incentives for annual members to encourage them to use the bikes more regularly throughout the week and year.\n",
    "-   Consider offering longer rental periods or multi-day rentals for casual riders, as their average ride length is longer than annual members, in order to increase revenue.\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 4901413,
     "sourceId": 8258694,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30618,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "r",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.0.5"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 87.771126,
   "end_time": "2024-04-29T07:11:38.008045",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-04-29T07:10:10.236919",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
